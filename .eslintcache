[{"D:\\Arnas\\Code\\skripz\\src\\components\\MateriCard.js":"1","D:\\Arnas\\Code\\skripz\\src\\pages\\materiSlide.js":"2","D:\\Arnas\\Code\\skripz\\src\\index.js":"3","D:\\Arnas\\Code\\skripz\\src\\components\\Breadcrumb.js":"4","D:\\Arnas\\Code\\skripz\\src\\routes\\index.js":"5","D:\\Arnas\\Code\\skripz\\src\\components\\appbar.js":"6","D:\\Arnas\\Code\\skripz\\src\\components\\PDFViewer.js":"7","D:\\Arnas\\Code\\skripz\\src\\pages\\home.js":"8","D:\\Arnas\\Code\\skripz\\src\\App.js":"9","D:\\Arnas\\Code\\skripz\\src\\reportWebVitals.js":"10","D:\\Arnas\\Code\\skripz\\src\\pages\\DashboardPage.js":"11","D:\\Arnas\\Code\\skripz\\src\\pages\\LoginSuccessPage.js":"12","D:\\Arnas\\Code\\skripz\\src\\pages\\MateriSlide.js":"13","D:\\Arnas\\Code\\skripz\\src\\pages\\MatkulPage.js":"14","D:\\Arnas\\Code\\skripz\\src\\pages\\PreQuizPage.js":"15","D:\\Arnas\\Code\\skripz\\src\\components\\Appbar.js":"16","D:\\Arnas\\Code\\skripz\\src\\pages\\Home.js":"17","D:\\Arnas\\Code\\skripz\\src\\utils\\UserService.js":"18","D:\\Arnas\\Code\\skripz\\src\\utils\\APIUtility.js":"19","D:\\Arnas\\Code\\skripz\\src\\utils\\AuthHeader.js":"20","D:\\Arnas\\Code\\skripz\\src\\pages\\Logout.js":"21","D:\\Arnas\\Code\\skripz\\src\\components\\AnnouncementCard.js":"22","D:\\Arnas\\Code\\skripz\\src\\pages\\WriteThreadPage.js":"23","D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadListPage.js":"24","D:\\Arnas\\Code\\skripz\\src\\components\\ThreadCard.js":"25","D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadPage.js":"26","D:\\Arnas\\Code\\skripz\\src\\components\\ThreadReplyCard.js":"27","D:\\Arnas\\Code\\skripz\\src\\components\\QuestionItem.js":"28","D:\\Arnas\\Code\\skripz\\src\\pages\\StartAssessment.js":"29","D:\\Arnas\\Code\\skripz\\src\\pages\\AssessmentPage.js":"30","D:\\Arnas\\Code\\skripz\\src\\pages\\EditThreadPage.js":"31","D:\\Arnas\\Code\\skripz\\src\\pdf\\DesainInteraksi.js":"32","D:\\Arnas\\Code\\skripz\\src\\utils\\WindowDimension.js":"33","D:\\Arnas\\Code\\skripz\\src\\components\\TextFieldOutline.js":"34","D:\\Arnas\\Code\\skripz\\src\\pages\\WriteReplyPage.js":"35","D:\\Arnas\\Code\\skripz\\src\\pages\\EditReplyPage.js":"36","D:\\Arnas\\Code\\skripz\\src\\pdf\\PdfHandler.js":"37","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi1.js":"38","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi3.js":"39","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi5.js":"40","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi4.js":"41","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi2.js":"42","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi6.js":"43","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi7.js":"44","D:\\Arnas\\Code\\skripz\\src\\pages\\MateriSlideSequential.js":"45","D:\\Arnas\\Code\\skripz\\src\\pages\\MateriSlideIntSequential.js":"46"},{"size":3774,"mtime":1618290714944,"results":"47","hashOfConfig":"48"},{"size":10163,"mtime":1612508900675,"results":"49","hashOfConfig":"50"},{"size":500,"mtime":1611207899531,"results":"51","hashOfConfig":"48"},{"size":1140,"mtime":1613459980538,"results":"52","hashOfConfig":"48"},{"size":5030,"mtime":1618289186305,"results":"53","hashOfConfig":"48"},{"size":3528,"mtime":1612341417179,"results":"54","hashOfConfig":"50"},{"size":15572,"mtime":1618222942983,"results":"55","hashOfConfig":"48"},{"size":736,"mtime":1612845977613,"results":"56","hashOfConfig":"50"},{"size":764,"mtime":1613372636237,"results":"57","hashOfConfig":"48"},{"size":362,"mtime":1611207899531,"results":"58","hashOfConfig":"48"},{"size":7794,"mtime":1617867810692,"results":"59","hashOfConfig":"48"},{"size":2152,"mtime":1617864595419,"results":"60","hashOfConfig":"48"},{"size":21855,"mtime":1618289290001,"results":"61","hashOfConfig":"48"},{"size":9533,"mtime":1618290486631,"results":"62","hashOfConfig":"48"},{"size":10955,"mtime":1618289285565,"results":"63","hashOfConfig":"48"},{"size":4399,"mtime":1617865721958,"results":"64","hashOfConfig":"48"},{"size":736,"mtime":1612847873878,"results":"65","hashOfConfig":"50"},{"size":1623,"mtime":1612855762292,"results":"66","hashOfConfig":"48"},{"size":807,"mtime":1618206409382,"results":"67","hashOfConfig":"48"},{"size":255,"mtime":1612852464766,"results":"68","hashOfConfig":"48"},{"size":259,"mtime":1612859345558,"results":"69","hashOfConfig":"48"},{"size":2432,"mtime":1612942830183,"results":"70","hashOfConfig":"48"},{"size":9728,"mtime":1618289358483,"results":"71","hashOfConfig":"48"},{"size":7900,"mtime":1618289513373,"results":"72","hashOfConfig":"48"},{"size":4979,"mtime":1613718215479,"results":"73","hashOfConfig":"48"},{"size":9597,"mtime":1618289286984,"results":"74","hashOfConfig":"48"},{"size":2781,"mtime":1613718370231,"results":"75","hashOfConfig":"48"},{"size":2133,"mtime":1613365804406,"results":"76","hashOfConfig":"50"},{"size":6285,"mtime":1618289285996,"results":"77","hashOfConfig":"48"},{"size":11045,"mtime":1618289323163,"results":"78","hashOfConfig":"48"},{"size":13271,"mtime":1618289321763,"results":"79","hashOfConfig":"48"},{"size":1424403,"mtime":1618209066360,"results":"80","hashOfConfig":"48"},{"size":648,"mtime":1613462354582,"results":"81","hashOfConfig":"48"},{"size":776,"mtime":1613629909646,"results":"82","hashOfConfig":"48"},{"size":9743,"mtime":1618289287402,"results":"83","hashOfConfig":"48"},{"size":12989,"mtime":1618289322419,"results":"84","hashOfConfig":"48"},{"size":439,"mtime":1618211443662,"results":"85","hashOfConfig":"48"},{"size":1424409,"mtime":1618210746147,"results":"86","hashOfConfig":"48"},{"size":1665789,"mtime":1618210671305,"results":"87","hashOfConfig":"48"},{"size":2562501,"mtime":1618210792996,"results":"88","hashOfConfig":"48"},{"size":2999069,"mtime":1618210771359,"results":"89","hashOfConfig":"48"},{"size":3049465,"mtime":1618209176694,"results":"90","hashOfConfig":"48"},{"size":3328933,"mtime":1618210809368,"results":"91","hashOfConfig":"48"},{"size":4155257,"mtime":1618210828058,"results":"92","hashOfConfig":"48"},{"size":21909,"mtime":1618289285082,"results":"93","hashOfConfig":"48"},{"size":21915,"mtime":1618289289541,"results":"94","hashOfConfig":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12qmxe1",{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},"by9dd7",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"103"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"103"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"103"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"103"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"103"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"103"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"103"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"103"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"103"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"103"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"103"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"103"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Arnas\\Code\\skripz\\src\\components\\MateriCard.js",["203","204","205","206","207","208","209"],"D:\\Arnas\\Code\\skripz\\src\\pages\\materiSlide.js",["210","211","212","213","214","215","216","217","218"],"import React, { useState } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { CardMedia, Grid, Button, Container, Paper, Avatar, Card, CardActionArea, CardActions, GridList, GridListTile } from '@material-ui/core';\r\n// import { Document, Page, pdfjs } from 'react-pdf';\r\nimport { Appbar } from '../components/appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport { PDFViewerExample } from '../components/PDFViewer';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MateriCard from '../components/MateriCard';\r\nimport materiPDF from '../pdf/MSI01.pdf';\r\nimport secondPDF from '../pdf/K.pdf'\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    media: {\r\n        width: '246px',\r\n        height: '177px'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.55),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.75),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nfunction MateriSlide(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const list = [\r\n        { color: \"inherit\", link: \"/sister\", name: \"Sistem Interaksi\" },\r\n        { color: \"primary\", link: \"/materi\", name: \"Bab 1. Pengantar Sistem Informasi\" },\r\n    ];\r\n\r\n    function handleClick() {\r\n        props.changePage(\"/prequiz\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '30vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={list} />\r\n                    <Grid item xs style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"space-around\"\r\n                                // justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                style={{ padding: '30px' }}\r\n                            >\r\n\r\n                                <Grid item xs>\r\n                                    <Grid container justify=\"center\">\r\n                                        <Grid item>\r\n                                            <CardMedia\r\n                                                className={classes.media}\r\n                                                image=\"https://files.catbox.moe/qfaut0.svg\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={8}>\r\n                                    <Grid container spacing={1} direction=\"column\">\r\n                                        <Grid item>\r\n                                            <b style={{ fontSize: '24px', marginRight: '12px' }} >1</b>\r\n                                            <b style={{ fontSize: '24px' }} >Pengantar Sistem Interaksi</b>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <b style={{ fontSize: '14px' }} >Bagaimana raksasa teknologi seperti Google mengembangkan produk yang menarik dan mudah digunakan oleh jutaan penggunanya ?</b>\r\n                                        </Grid>\r\n                                        <Grid item >\r\n                                            <Typography variant=\"body\" color=\"white\" component=\"p\" style={{ fontSize: '12px' }}>\r\n                                                Pada bab ini kamu akan belajar mengenai dasar-dasar desain interaksi, istilah-istilah yang mungkin pernah kamu dengar seperti UI/UX, dan penerapannya dalam pengembangan produk digital, seperti website dan mobile apps\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item style={{ marginTop: '14px' }}>\r\n                                            <Grid container spacing={3} direction=\"row\">\r\n                                                <Grid item xs>\r\n                                                    <Button style={{ width: '100%' }} variant=\"outlined\" color=\"primary\" startIcon={<ArrowBackIcon />} onClick={handleClick}>Pre-Quiz</Button>\r\n                                                </Grid>\r\n                                                <Grid item xs >\r\n                                                    <Button style={{ width: '100%' }} variant=\"contained\" color=\"primary\" startIcon={<PlayArrowIcon />}>Lihat Video Intro</Button>\r\n                                                </Grid>\r\n                                                <Grid item xs >\r\n                                                    <Button style={{ width: '100%' }} variant=\"contained\" color=\"primary\" startIcon={<AssignmentIcon />}>Peta Konsep</Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"div\" style={{ height: '16px' }} />\r\n                    </Container>\r\n                    <Grid item>\r\n                        <Card>\r\n                            <PDFViewerExample pdf={materiPDF} />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"div\" style={{ height: '16px' }} />\r\n                    </Container>\r\n                    <Grid item>\r\n                        <Card>\r\n                            <PDFViewerExample pdf={'https://files.catbox.moe/071fl9.pdf'} />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"div\" style={{ height: '16px' }} />\r\n                    </Container>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 0px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <b>Materi Pengayaan / Suplemen</b>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px' }}\r\n                            >\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\">[VIDEO] Meet the UX Researcher : Gita</Button>\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\">[VIDEO] Meet the UX Researcher : Gita</Button>\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\">[VIDEO] Meet the UX Researcher : Gita</Button>\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                            </Grid>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { MateriSlide };",["219","220"],"D:\\Arnas\\Code\\skripz\\src\\index.js",[],["221","222"],"D:\\Arnas\\Code\\skripz\\src\\components\\Breadcrumb.js",[],"D:\\Arnas\\Code\\skripz\\src\\routes\\index.js",["223","224","225","226"],"D:\\Arnas\\Code\\skripz\\src\\components\\appbar.js",["227","228","229"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { Grid, Button, Menu, MenuItem, Avatar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    separator: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Appbar(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function handleClickBeranda() {\r\n        props.changePage(\"/\")\r\n    }\r\n\r\n    const classes = useStyles();\r\n    //TODO : https://medium.com/better-programming/making-a-basic-header-responsive-with-materialui-and-react-2198fac923c8\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar >\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" style={{ flexGrow: 0.1 }}>\r\n                        Skripz\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Beranda</Button>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Tentang</Button>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>FAQ</Button>\r\n                    <div className={classes.separator} />\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{ backgroundColor: \"white\" }}\r\n                            disableElevation\r\n                            startIcon={<Avatar>A</Avatar>}\r\n                            endIcon={<KeyboardArrowDownIcon />}\r\n                            onClick={handleClick}\r\n                        >\r\n                            <b style={{ color: '#3D7DCA' }} >Fulan Bin Fulan</b>\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"appbar-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            getContentAnchorEl={null}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem onClick={handleClose}>Profil</MenuItem>\r\n                            <MenuItem onClick={handleClose}>Pengaturan</MenuItem>\r\n                            <MenuItem onClick={handleClose}>Keluar</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <NotificationsIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Appbar };","D:\\Arnas\\Code\\skripz\\src\\components\\PDFViewer.js",["230","231","232","233"],"import React, { useState } from \"react\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport { Box, Grid, IconButton, Paper, Card, CardActionArea, Avatar, } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport useWindowDimensions from '../utils/WindowDimension';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nfunction PDFViewer(props) {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1); //setting 1 to show fisrt page\r\n\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n    }\r\n\r\n    function changePage(offset) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n    }\r\n\r\n    function previousPage() {\r\n        changePage(-1);\r\n    }\r\n\r\n    function nextPage() {\r\n        changePage(1);\r\n    }\r\n\r\n    const { pdf } = props;\r\n\r\n    return (\r\n        <>\r\n            <Document\r\n                file={pdf}\r\n                onLoadSuccess={onDocumentLoadSuccess}\r\n\r\n            >\r\n                <Page pageNumber={pageNumber} />\r\n            </Document>\r\n            <div>\r\n                <p>\r\n                    Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\r\n                </p>\r\n                <button type=\"button\" disabled={pageNumber <= 1} onClick={previousPage}>\r\n                    Previous\r\n        </button>\r\n                <button\r\n                    type=\"button\"\r\n                    disabled={pageNumber >= numPages}\r\n                    onClick={nextPage}\r\n                >\r\n                    Next\r\n        </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction PDFViewerExample(props) {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [renderedPageNumber, setRenderedPageNumber] = useState(null);\r\n    const { height, width } = useWindowDimensions();\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n    }\r\n\r\n    function changePage(offset) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n    }\r\n\r\n    function previousPage() {\r\n        changePage(-1);\r\n    }\r\n\r\n    function nextPage() {\r\n        changePage(1);\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        setPageNumber(i);\r\n    }\r\n    const isLoading = renderedPageNumber !== pageNumber;\r\n    const { pdf } = props;\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\">\r\n                <Grid item xs style={{ padding: '20px 20px' }}>\r\n                    <Grid container\r\n                        spacing={2}\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        alignContent=\"center\"\r\n                        style={{ padding: '12px' }}\r\n                    >\r\n                        <Grid item>\r\n                            <h4 style={{ margin: 0 }}>Daftar topik</h4>\r\n\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <p style={{ margin: 0, fontSize: '12px', color: '#8F8F8F' }}>Bantuan : Klik pada topik untuk loncat ke topik pada slides</p>\r\n                        </Grid>\r\n                        {props.chapterList === undefined ?\r\n                            <Grid item style={{ width: '100%' }}>\r\n                                <Card style={{ backgroundColor: '#6e6d6a' }}>\r\n                                    <CardActionArea >\r\n                                        <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"center\" >\r\n                                            <Grid item>\r\n                                                <h4 style={{ color: 'white' }}>Daftar Topik tidak tersedia</h4>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                            :\r\n                            props.chapterList.map((chapter, i) => {\r\n                                let chapterData = chapter.split(\"-\")\r\n                                return (\r\n                                    <Grid item style={{ width: '100%' }}>\r\n                                        <Card style={{ backgroundColor: '#3D7DCA' }}>\r\n                                            <CardActionArea onClick={() => { handleClick(parseInt(chapterData[0])) }}>\r\n                                                <Grid container direction=\"row\" spacing={0} alignItems=\"center\"  >\r\n                                                    <Grid item style={{ padding: '6px' }}>\r\n                                                        <h4 style={{ color: 'white' }}>{i + 1 + \". \" + chapterData[1]}</h4>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </Grid>);\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={9} style={{ padding: '20px 20px' }}>\r\n                    <Box >\r\n                        <Box elevation={0} style={{ backgroundColor: \"#6e6d6a\" }}>\r\n                            <Grid container justify=\"center\" alignItems=\"center\" >\r\n                                <Grid item>\r\n                                    <IconButton onClick={previousPage} disabled={pageNumber <= 1}>\r\n                                        <ArrowBackIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <p style={{ color: \"white\", margin: 0 }}>\r\n                                        {pageNumber || (numPages ? 1 : \"--\")} / {numPages || \"--\"}\r\n                                    </p>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <IconButton onClick={nextPage} disabled={pageNumber >= numPages}>\r\n                                        <ArrowForwardIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n\r\n                        <Grid container justify=\"center\" alignItems=\"center\" style={{ backgroundColor: \"#C4C4C4\" }}>\r\n                            <Grid item>\r\n                                <Box overflow=\"auto\" style={{ maxWidth: '65vw' }}>\r\n                                    <Document file={pdf} onLoadSuccess={onDocumentLoadSuccess} onLoadError={console.error}\r\n                                    >\r\n                                        {isLoading && renderedPageNumber ? (\r\n                                            <Page\r\n                                                key={renderedPageNumber}\r\n                                                className=\"prevPage\"\r\n                                                pageNumber={renderedPageNumber}\r\n                                                width={0.45 * width}\r\n                                            />\r\n                                        ) : null}\r\n                                        <Page\r\n                                            key={pageNumber}\r\n                                            pageNumber={pageNumber}\r\n                                            onRenderSuccess={() => setRenderedPageNumber(pageNumber)}\r\n                                            width={0.45 * width}\r\n                                        />\r\n                                    </Document>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nfunction PDFViewerExampleSequential(props) {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [renderedPageNumber, setRenderedPageNumber] = useState(null);\r\n    const { height, width } = useWindowDimensions();\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n    }\r\n\r\n    function changePage(offset) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n        props.chapterCheckList[pageNumber + offset] = true;\r\n    }\r\n\r\n    function previousPage() {\r\n        changePage(-1);\r\n    }\r\n\r\n    function nextPage() {\r\n        changePage(1);\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        setPageNumber(i);\r\n        props.chapterCheckList[i] = true;\r\n    }\r\n    const isLoading = renderedPageNumber !== pageNumber;\r\n    const { pdf } = props;\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\">\r\n                <Grid item xs style={{ padding: '20px 20px' }}>\r\n                    <Grid container\r\n                        spacing={2}\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        alignContent=\"center\"\r\n                        style={{ padding: '12px' }}\r\n                    >\r\n                        <Grid item>\r\n                            <h4 style={{ margin: 0 }}>Daftar topik</h4>\r\n\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <p style={{ margin: 0, fontSize: '12px', color: '#8F8F8F' }}>Bantuan : Klik pada topik untuk loncat ke topik pada slides</p>\r\n                        </Grid>\r\n                        {props.chapterList === undefined ?\r\n                            <Grid item style={{ width: '100%' }}>\r\n                                <Card style={{ backgroundColor: '#6e6d6a' }}>\r\n                                    <CardActionArea >\r\n                                        <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"center\" >\r\n                                            <Grid item>\r\n                                                <h4 style={{ color: 'white' }}>Daftar Topik tidak tersedia</h4>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                            :\r\n                            props.chapterList.map((chapter, i) => {\r\n                                let chapterData = chapter.split(\"-\")\r\n                                return (\r\n                                    <Grid item style={{ width: '100%' }}>\r\n                                        <Card style={\r\n                                            props.chapterCheckList[parseInt(chapterData[0])] ?\r\n                                                { backgroundColor: '#3D7DCA' } :\r\n                                                { backgroundColor: '#7c7e82' }\r\n\r\n                                        }>\r\n                                            <CardActionArea onClick={\r\n                                                props.chapterCheckList[parseInt(chapterData[0])] ?\r\n                                                    () => { handleClick(parseInt(chapterData[0])) }\r\n                                                    :\r\n                                                    () => { }\r\n\r\n                                            }>\r\n                                                <Grid container direction=\"row\" spacing={0} alignItems=\"center\"  >\r\n                                                    <Grid item style={{ padding: '6px' }}>\r\n                                                        <h4 style={{ color: 'white' }}>{i + 1 + \". \" + chapterData[1]}</h4>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </Grid>);\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={9} style={{ padding: '20px 20px' }}>\r\n                    <Box >\r\n                        <Box elevation={0} style={{ backgroundColor: \"#6e6d6a\" }}>\r\n                            <Grid container justify=\"center\" alignItems=\"center\" >\r\n                                <Grid item>\r\n                                    <IconButton onClick={previousPage} disabled={pageNumber <= 1}>\r\n                                        <ArrowBackIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <p style={{ color: \"white\", margin: 0 }}>\r\n                                        {pageNumber || (numPages ? 1 : \"--\")} / {numPages || \"--\"}\r\n                                    </p>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <IconButton onClick={nextPage} disabled={pageNumber >= numPages}>\r\n                                        <ArrowForwardIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n\r\n                        <Grid container justify=\"center\" alignItems=\"center\" style={{ backgroundColor: \"#C4C4C4\" }}>\r\n                            <Grid item>\r\n                                <Box overflow=\"auto\" style={{ maxWidth: '65vw' }}>\r\n                                    <Document file={pdf} onLoadSuccess={onDocumentLoadSuccess} onLoadError={console.error}\r\n                                    >\r\n                                        {isLoading && renderedPageNumber ? (\r\n                                            <Page\r\n                                                key={renderedPageNumber}\r\n                                                className=\"prevPage\"\r\n                                                pageNumber={renderedPageNumber}\r\n                                                width={0.45 * width}\r\n                                            />\r\n                                        ) : null}\r\n                                        <Page\r\n                                            key={pageNumber}\r\n                                            pageNumber={pageNumber}\r\n                                            onRenderSuccess={() => setRenderedPageNumber(pageNumber)}\r\n                                            width={0.45 * width}\r\n                                        />\r\n                                    </Document>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport { PDFViewer, PDFViewerExample, PDFViewerExampleSequential };","D:\\Arnas\\Code\\skripz\\src\\pages\\home.js",["234","235","236","237"],"D:\\Arnas\\Code\\skripz\\src\\App.js",["238","239"],"import React from \"react\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AppSwitch } from \"./routes\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, pink } from \"@material-ui/core/colors\";\nimport './index.css';\n\nfunction App() {\n  const theme = createMuiTheme({\n    overrides: {\n      MuiButton: {\n        root: {\n          borderRadius: 25,\n        },\n      },\n    },\n    palette: {\n      primary: {\n        main: '#5D97DB'\n      },\n      secondary: {\n        main: '#3D7DCA'\n      },\n    },\n  });\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <AppSwitch />\n      </Router>\n    </ThemeProvider>\n\n    /* <Router>\n    <AppSwitch/>\n    </Router> */\n  );\n}\n\nexport default App;","D:\\Arnas\\Code\\skripz\\src\\reportWebVitals.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\DashboardPage.js",["240","241"],"import React, { useState, useEffect } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { InputBase, Grid, Paper, Avatar, Card, CardActionArea, CircularProgress } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Appbar } from '../components/Appbar';\r\nimport { userService } from '../utils/UserService';\r\nimport AnnouncementCard from '../components/AnnouncementCard';\r\nimport APIUtility from '../utils/APIUtility';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.55),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.75),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Dashboard(props) {\r\n\r\n  const classes = useStyles();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [courses, setCourses] = useState([]);\r\n\r\n\r\n  function handleClick(pk) {\r\n    props.changePage(\"/course/\" + pk)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (courses.length == 0) {\r\n      console.log(\"fetching courses\")\r\n      APIUtility.get('/api/course/get/', {}).then((response) => {\r\n        let coursesJSON = JSON.parse(response.data.model)\r\n\r\n        setCourses(coursesJSON);\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Appbar changePage={props.changePage} />\r\n\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ backgroundColor: '#3D7DCA', minHeight: '30vh', marginTop: '60px' }}\r\n        >\r\n          <Grid item xs={12} >\r\n            <h1 style={{ color: 'white' }}>\r\n              Halo {userService.getLocalData() != null ? userService.getName().split(' ')[0] : ''}, mau belajar apa hari ini ?\r\n                      </h1>\r\n          </Grid>\r\n          <Grid item xs={3} >\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          style={{ margin: '30px 0px' }}\r\n        >\r\n          <Grid item xs={2} style={{ margin: '0px 8px' }}>\r\n            <Paper>\r\n              <Grid container\r\n                spacing={2}\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                style={{ padding: '12px' }}\r\n              >\r\n                <Grid item>\r\n                  <h3 style={{ margin: 0 }}>Mata Kuliah Saya</h3>\r\n                </Grid>\r\n                {isLoading ?\r\n                  <Grid item>\r\n                    <CircularProgress />\r\n                  </Grid>\r\n                  :\r\n                  <>\r\n                    {courses.map((course, i) => {\r\n                      return (\r\n                        <Grid item>\r\n                          <Card style={{ backgroundColor: '#3D7DCA' }}>\r\n                            <CardActionArea onClick={() => { handleClick(course.pk) }}>\r\n                              <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"space-around\" >\r\n                                <Grid item>\r\n                                  <Avatar>{course.fields.name.split(\" \")[0][0]}</Avatar>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                  <h4 style={{ color: 'white' }}>{course.fields.name}</h4>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </CardActionArea>\r\n                          </Card>\r\n                        </Grid>);\r\n                    })}\r\n                  </>\r\n                }\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} style={{ margin: '0px 8px' }}>\r\n            <Paper>\r\n              <Grid container\r\n                spacing={2}\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                style={{ padding: '12px' }}\r\n              >\r\n                <Grid item>\r\n                  <h3 style={{ margin: 0 }}>Pengumuman</h3>\r\n                </Grid>\r\n                <Grid item style={{ margin: '6px 0px' }}>\r\n                  <AnnouncementCard\r\n                    Title={'Kuis I Bab 1 Metodologi Penelitian dan Penulisan Ilmiah  sudah dibuka ! '}\r\n                    Author={'Ariq Naufal Satria'}\r\n                    Text={\"Lick the other cats love but rub against owner because nose is wet so adventure always. Sleep try to hold own back foot to clean it but foot reflexively kicks you in face, go into a rage and bite own foot, hard steal mom's crouton while she is in the bathroom flex claws on the human's belly and purr like a lawnmower. Freak human out make funny noise mow mow mow mow mow mow success now attack human purr like an angel.\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item style={{ margin: '6px 0px' }}>\r\n                  <AnnouncementCard\r\n                    Title={'Pengumuman 1'}\r\n                    Author={'Budi Budiman'}\r\n                    Text={\"Lick the other cats love but rub against owner because nose is wet so adventure always. Sleep try to hold own back foot to clean it but foot reflexively kicks you in face, go into a rage and bite own foot, hard steal mom's crouton while she is in the bathroom flex claws on the human's belly and purr like a lawnmower. Freak human out make funny noise mow mow mow mow mow mow success now attack human purr like an angel.\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item style={{ margin: '6px 0px' }}>\r\n                  <AnnouncementCard\r\n                    Title={'Pengumuman 2'}\r\n                    Author={'Ariq Naufal Satria'}\r\n                    Text={\"Lick the other cats love but rub against owner because nose is wet so adventure always. Sleep try to hold own back foot to clean it but foot reflexively kicks you in face, go into a rage and bite own foot, hard steal mom's crouton while she is in the bathroom flex claws on the human's belly and purr like a lawnmower. Freak human out make funny noise mow mow mow mow mow mow success now attack human purr like an angel.\"}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Dashboard };","D:\\Arnas\\Code\\skripz\\src\\pages\\LoginSuccessPage.js",["242"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { userService } from '../utils/UserService';\r\nimport APIUtility from '../utils/APIUtility';\r\n\r\nfunction LoginSuccess(props) {\r\n    const [isVerified, setIsVerified] = useState(false);\r\n    const handleClick = () => {\r\n        APIUtility.get('/sample-restricted').then((response) => {\r\n            console.log(response)\r\n        });\r\n    }\r\n    const handleClick3 = () => {\r\n        console.log(userService.getProfile());\r\n    }\r\n    const handleClick2 = () => {\r\n        userService.logout();\r\n    }\r\n    const { token } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (isVerified) {\r\n            return;\r\n        }\r\n        console.log(\"verifying..\");\r\n        userService.login(token).then(value => {\r\n            if (value) {\r\n                setIsVerified(true)\r\n                props.changePage(\"/\")\r\n            }\r\n        })\r\n\r\n\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{ minHeight: '100vh' }}\r\n            >\r\n\r\n                <Grid item xs={3} >\r\n                    {/* <h1 style={{ color: 'black' }}>\r\n                        {token}\r\n                    </h1> */}\r\n                    {isVerified ?\r\n                        <h1>Selamat Datang {userService.getName()}!</h1>\r\n                        :\r\n                        <p>Verifying...</p>\r\n                    }\r\n                    <Button variant=\"contained\" onClick={handleClick}>\r\n                        Verify\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={handleClick3}>\r\n                        Profile\r\n                    </Button>\r\n\r\n                    <Button variant=\"contained\" onClick={handleClick2}>\r\n                        clear\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { LoginSuccess };","D:\\Arnas\\Code\\skripz\\src\\pages\\MateriSlide.js",["243","244","245","246","247","248","249","250"],"D:\\Arnas\\Code\\skripz\\src\\pages\\MatkulPage.js",["251","252","253","254","255","256","257","258"],"D:\\Arnas\\Code\\skripz\\src\\pages\\PreQuizPage.js",[],"D:\\Arnas\\Code\\skripz\\src\\components\\Appbar.js",["259","260","261"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { Grid, Button, Menu, MenuItem, Avatar } from '@material-ui/core';\r\nimport { userService } from '../utils/UserService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    separator: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Appbar(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [isLogin, setIsLogin] = useState(userService.getLocalData() != null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function handleClickBeranda() {\r\n        props.changePage(\"/\");\r\n    }\r\n\r\n    function handleClickLogout() {\r\n        setAnchorEl(null);\r\n        props.changePage(\"/logout\")\r\n    }\r\n\r\n    const handleClickLogin = () => {\r\n        window.location.replace(\"http://localhost:8000/login/\");\r\n    }\r\n\r\n    const classes = useStyles();\r\n    //TODO : https://medium.com/better-programming/making-a-basic-header-responsive-with-materialui-and-react-2198fac923c8\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar >\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" style={{ flexGrow: 0.1 }}>\r\n                        Easy-Learning\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Beranda</Button>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Tentang</Button>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Panduan</Button>\r\n                    <div className={classes.separator} />\r\n                    <div>\r\n                        {!isLogin ?\r\n                            <Button color=\"inherit\" onClick={handleClickLogin}>Login</Button>\r\n                            :\r\n                            <>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={{ backgroundColor: \"white\" }}\r\n                                    disableElevation\r\n                                    startIcon={<Avatar>{userService.getName().split(\" \")[0][0]}</Avatar>}\r\n                                    endIcon={<KeyboardArrowDownIcon />}\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    <b style={{ color: '#3D7DCA' }} >{userService.getName()}</b>\r\n                                </Button>\r\n                                <Menu\r\n                                    id=\"appbar-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    getContentAnchorEl={null}\r\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem onClick={handleClose}>Profil</MenuItem>\r\n                                    <MenuItem onClick={handleClose}>Pengaturan</MenuItem>\r\n                                    <MenuItem onClick={handleClickLogout}>Keluar</MenuItem>\r\n                                </Menu>\r\n                            </>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <NotificationsIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Appbar };\r\n","D:\\Arnas\\Code\\skripz\\src\\pages\\Home.js",["262","263","264","265"],"D:\\Arnas\\Code\\skripz\\src\\utils\\UserService.js",["266"],"import { authHeader } from \"./AuthHeader\";\r\nimport APIUtility from \"./APIUtility\";\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    getLocalData,\r\n    getName,\r\n    getProfile,\r\n    getLearningModel,\r\n}\r\n\r\nfunction login(token) {\r\n    let user = localStorage.getItem('user');\r\n    console.log(user)\r\n    if (!user) {\r\n        let userObject = {\r\n            token: token,\r\n        };\r\n        localStorage.setItem(\"user\", JSON.stringify(userObject));\r\n    }\r\n    return APIUtility.get(\"/profile\")\r\n        .then(function (response) {\r\n            const profile = JSON.parse(response.data['profile'])\r\n            localStorage.setItem('profile', JSON.stringify(profile[0]))\r\n            console.log(\"===?\")\r\n            console.log(response)\r\n            return response.data;\r\n        }).catch(function (error) {\r\n\r\n            localStorage.removeItem(\"user\");\r\n            console.log(error.message);\r\n            console.log(\"removing user\");\r\n            window.location.replace(\"/500-error\");\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"profile\");\r\n    console.log(\"removing user\");\r\n    console.log(\"removing profile\");\r\n    console.log('success logout');\r\n}\r\n\r\nfunction getLocalData() {\r\n    return localStorage.getItem(\"user\");\r\n}\r\n\r\nfunction getProfile() {\r\n    return JSON.parse(localStorage.getItem(\"profile\"));\r\n}\r\n\r\nfunction getName() {\r\n    return JSON.parse(localStorage.getItem(\"profile\"))['fields']['name'];\r\n}\r\n\r\nfunction getLearningModel() {\r\n    return JSON.parse(localStorage.getItem(\"profile\"))['fields']['learning_model'];\r\n}","D:\\Arnas\\Code\\skripz\\src\\utils\\APIUtility.js",["267"],"import axios from \"axios\";\r\nimport { authHeader } from \"./AuthHeader\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:8000/\",\r\n    responseType: \"json\",\r\n    headers: {\r\n        ...authHeader(),\r\n        \"Accept\": \"application/json\",\r\n    },\r\n});\r\n\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n    const token = authHeader().Authorization;\r\n    config.headers.Authorization = token;\r\n\r\n    return config;\r\n})\r\n\r\ninstance.interceptors.response.use(function (response) {\r\n    return response;\r\n}, function (error) {\r\n    try {\r\n        if (error.response.status == 500) {\r\n            window.location.replace(\"/500-error\");\r\n        }\r\n    } catch {\r\n        window.location.replace(\"/404-error\");\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default instance;","D:\\Arnas\\Code\\skripz\\src\\utils\\AuthHeader.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\Logout.js",[],"D:\\Arnas\\Code\\skripz\\src\\components\\AnnouncementCard.js",["268"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Avatar, Typography, Link } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: '100%'\r\n    },\r\n    media: {\r\n        width: 180,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function AnnouncementCard(props) {\r\n    const { Title, Author, Text, TimeStamp } = props;\r\n\r\n    const preventDefault = (event) => event.preventDefault();\r\n\r\n    return (\r\n        <Paper>\r\n            <Grid container direction=\"row\" spacing={2} style={{ padding: '12px' }} alignItems=\"flex-start\" alignContent=\"center\" >\r\n                <Grid item xs={1}>\r\n                    <Avatar>{Author[0]}</Avatar>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {Title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <b>{Author} - {TimeStamp}</b>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {Text}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        <Grid item>\r\n\r\n                            <Link style={{ color: '#8F8F8F' }} href=\"#\" onClick={preventDefault}>\r\n                                <b >Lihat selengkapnya</b>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n","D:\\Arnas\\Code\\skripz\\src\\pages\\WriteThreadPage.js",["269","270","271","272","273","274"],"D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadListPage.js",["275","276","277","278","279"],"D:\\Arnas\\Code\\skripz\\src\\components\\ThreadCard.js",["280","281","282"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Avatar, Typography, Link, Button } from '@material-ui/core';\r\nimport MarkdownView from 'react-showdown';\r\nimport { red } from '@material-ui/core/colors';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Moment from 'react-moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: '100%'\r\n    },\r\n    media: {\r\n        width: 180,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function ThreadCard(props) {\r\n    const { Title, Author, Text, TimeStamp, isOutlined, isPreview, id_course, id_materi, id_post, isThreadStarter, isEditable } = props;\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_course + \"/materi/\" + id_materi + \"/thread/details/\" + id_post);\r\n    };\r\n\r\n    const handleEdit = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_course + \"/materi/\" + id_materi + \"/thread/edit/\" + id_post);\r\n    };\r\n\r\n    const handleComment = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_course + \"/materi/\" + id_materi + \"/thread/\" + id_post + \"/reply/new\");\r\n    }\r\n\r\n    return (\r\n        <Paper variant={isOutlined ? \"outlined\" : \"\"}>\r\n            <Grid container direction=\"row\" spacing={2} style={{ padding: '12px' }} alignItems=\"flex-start\" alignContent=\"center\" >\r\n                <Grid item xs={1}>\r\n                    <Avatar>{Author[0]}</Avatar>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography style={{ margin: '0px' }} variant=\"h6\" gutterBottom>\r\n                                <b>{Title}</b>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <p style={{ margin: '0px', color: '#8F8F8F' }}>{Author} - <Moment format=\"DD MMM YYYY hh:mm\" >{TimeStamp}</Moment></p>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <MarkdownView\r\n                                markdown={Text}\r\n                                options={{ tables: true, emoji: true }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        {isPreview ?\r\n                            <Grid item>\r\n                                <Grid container direction=\"row\" spacing={2}>\r\n                                    <Grid item>\r\n                                        <Link style={{ color: '#5D97DB' }} href='' onClick={handleClick}>\r\n                                            <b >Lihat selengkapnya</b>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    {isEditable != undefined ? <Grid item>\r\n                                        <Link style={{ color: '#bdbdbd' }} href='' onClick={handleEdit}>\r\n                                            <b >Edit</b>\r\n                                        </Link>\r\n                                    </Grid> : <></>}\r\n\r\n                                </Grid>\r\n\r\n                            </Grid> : <> </>}\r\n                        {isThreadStarter ?\r\n                            <Grid item>\r\n                                <Grid container direction=\"row\" spacing={2} alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Link style={{ color: '#8F8F8F' }}  >\r\n                                            <Button style={{ width: '100%' }} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\" onClick={handleComment}>Komentar</Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    {isEditable != undefined ? <Grid item>\r\n                                        <Link style={{ color: '#bdbdbd' }} href='' onClick={handleEdit}>\r\n                                            <b >Edit</b>\r\n                                        </Link>\r\n                                    </Grid> : <></>}\r\n                                </Grid>\r\n\r\n\r\n                            </Grid> : <></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n","D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadPage.js",["283","284","285","286","287","288","289","290"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, Card, Snackbar } from '@material-ui/core';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { Appbar } from '../components/Appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport * as Showdown from \"showdown\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'react-mde/lib/styles/css/react-mde-all.css';\r\nimport ThreadReplyCard from '../components/ThreadReplyCard';\r\nimport ThreadCard from '../components/ThreadCard';\r\nimport APIUtility from '../utils/APIUtility';\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { userService } from '../utils/UserService';\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n}));\r\n\r\nfunction ThreadPage(props) {\r\n\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const { id_course, id_materi, id_thread } = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [replies, setReplies] = useState(null);\r\n    const [isLoadingReplies, setIsLoadingReplies] = useState(true);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(query.get('state') != undefined);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const list = [\r\n        { color: \"inherit\", link: \"/sister\", name: \"Sistem Interaksi\" },\r\n        { color: \"inherit\", link: \"/materi\", name: \"Bab 1. Pengantar Sistem Informasi\" },\r\n        { color: \"primary\", link: \"/thread\", name: \"Forum Diskusi\" },\r\n    ];\r\n\r\n    function handleClick() {\r\n        props.changePage(\"/thread/new\")\r\n    }\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    const converter = new Showdown.Converter({\r\n        tables: true,\r\n        simplifiedAutoLink: true,\r\n        strikethrough: true,\r\n        tasklists: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (post === null) {\r\n            APIUtility.get('/api/post/' + id_thread, {}).then((response) => {\r\n                let postJSON = JSON.parse(response.data.model)\r\n                let postObject = {\r\n                    'pk': postJSON[0]['pk'],\r\n                    'material': postJSON[0]['fields']['material'],\r\n                    'profile': postJSON[0]['fields']['profile'],\r\n                    'author_name': postJSON[0]['fields']['author_name'],\r\n                    'title': postJSON[0]['fields']['title'],\r\n                    'body': postJSON[0]['fields']['body'],\r\n                    'category': postJSON[0]['fields']['category'],\r\n                    'date': postJSON[0]['fields']['date'],\r\n                    'last_modified': postJSON[0]['fields']['last_modified'],\r\n                };\r\n                setPost(postObject)\r\n                // console.log(postObject)\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n\r\n        if (replies === null) {\r\n            APIUtility.get('/api/reply/get-by-post/' + id_thread, {}).then((response) => {\r\n                console.log(response.data)\r\n                let repliesJSON = JSON.parse(response.data.replies)\r\n                if (repliesJSON.length == 0) {\r\n                    return;\r\n                }\r\n                setReplies(repliesJSON)\r\n                // console.log(repliesJSON)\r\n            });\r\n            setIsLoadingReplies(false);\r\n        }\r\n\r\n    }, [])\r\n    if (isLoading) {\r\n        return (<>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ minHeight: '100vh', marginTop: '60px', padding: '30px 0px' }}\r\n                >\r\n                    <Grid item>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </>);\r\n    }\r\n    return (\r\n        <>\r\n            {isDialogOpen && (\r\n                <Snackbar\r\n                    open={isDialogOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={() => setIsDialogOpen(false)}\r\n                >\r\n                    <Alert severity=\"success\" onClose={() => setIsDialogOpen(false)}>\r\n                        Berhasil {query.get('state') == \"success-create\" ? \"menulis\" : query.get('state') == \"success-edit\" ? \"Mengubah\" : \"menghapus\"} komentar !\r\n                </Alert>\r\n                </Snackbar>\r\n            )}\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '100vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={list} />\r\n                    <Grid item style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 16px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <h2 style={{ margin: \"0 10px 10px 10px\" }}>Forum Diskusi</h2>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    {post == null ?\r\n                                        <Skeleton variant=\"text\" />\r\n                                        : <h3 style={{ margin: \"0 10px 0 10px\" }}>{post.title}</h3>\r\n                                    }\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ height: '16px' }} />\r\n\r\n                                <Grid item style={{ padding: '5px 10px', width: \"100%\" }}>\r\n                                    {post == null ?\r\n                                        <CircularProgress />\r\n                                        :\r\n                                        <ThreadCard\r\n                                            isOutlined={true}\r\n                                            Title={post['title']}\r\n                                            TimeStamp={post['last_modified']}\r\n                                            Author={post['author_name']}\r\n                                            changePage={props.changePage}\r\n                                            id_course={id_course}\r\n                                            id_materi={id_materi}\r\n                                            id_post={post['pk']}\r\n                                            isThreadStarter={true}\r\n                                            Text={post['body']}\r\n                                            isEditable={userService.getName().toLowerCase() === post['author_name'].toLowerCase()}\r\n                                        />\r\n                                    }\r\n\r\n                                </Grid>\r\n                                {isLoadingReplies || replies == null ?\r\n                                    <></>\r\n                                    :\r\n                                    replies.map((reply) => {\r\n                                        return (\r\n                                            <Grid item style={{ padding: '5px 10px 5px 30px ', width: \"100%\" }}>\r\n                                                <ThreadReplyCard\r\n                                                    TimeStamp={reply['fields']['last_modified']}\r\n                                                    Author={reply['fields']['author_name']}\r\n                                                    Text={reply['fields'].body}\r\n                                                    changePage={props.changePage}\r\n                                                    id_course={id_course}\r\n                                                    id_materi={id_materi}\r\n                                                    id_post={id_thread}\r\n                                                    id_reply={reply.pk}\r\n                                                    isEditable={userService.getName().toLowerCase() === reply['fields']['author_name'].toLowerCase()}\r\n                                                />\r\n                                            </Grid>\r\n                                        );\r\n                                    })\r\n\r\n                                }\r\n                            </Grid>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { ThreadPage };","D:\\Arnas\\Code\\skripz\\src\\components\\ThreadReplyCard.js",["291","292","293","294","295"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Avatar, Typography, Link, Button } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport MarkdownView from 'react-showdown';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Moment from 'react-moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: '100%'\r\n    },\r\n    media: {\r\n        width: 180,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function ThreadReplyCard(props) {\r\n    const { Title, Author, Text, TimeStamp, isEditable, id_course, id_materi, id_post, id_reply } = props;\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n        console.log(\"ayy\")\r\n    };\r\n\r\n    const handleEdit = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_course + \"/materi/\" + id_materi + \"/thread/\" + id_post + \"/reply/\" + id_reply + \"/edit\");\r\n    };\r\n\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Grid container direction=\"row\" spacing={2} style={{ padding: '12px' }} alignItems=\"flex-start\" alignContent=\"center\" >\r\n                <Grid item xs={1}>\r\n                    <Avatar>{Author[0]}</Avatar>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <p style={{ margin: '0px', color: '#8F8F8F' }}>{Author} - <Moment format=\"DD MMM YYYY hh:mm\" >{TimeStamp}</Moment></p>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <MarkdownView\r\n                                markdown={Text}\r\n                                options={{ tables: true, emoji: true }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        {isEditable ? <Grid item xs={3}>\r\n                            <Link style={{ color: '#bdbdbd' }} href='' onClick={handleEdit}>\r\n                                <b >Edit</b>\r\n                            </Link>\r\n                        </Grid> : <></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n","D:\\Arnas\\Code\\skripz\\src\\components\\QuestionItem.js",["296","297","298","299","300","301","302","303"],"D:\\Arnas\\Code\\skripz\\src\\pages\\StartAssessment.js",["304","305","306"],"D:\\Arnas\\Code\\skripz\\src\\pages\\AssessmentPage.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\EditThreadPage.js",["307","308","309","310","311","312"],"D:\\Arnas\\Code\\skripz\\src\\pdf\\DesainInteraksi.js",[],"D:\\Arnas\\Code\\skripz\\src\\utils\\WindowDimension.js",[],"D:\\Arnas\\Code\\skripz\\src\\components\\TextFieldOutline.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\WriteReplyPage.js",["313","314","315","316","317"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { Redirect } from \"react-router\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, Card, Snackbar } from '@material-ui/core';\r\nimport { Appbar } from '../components/Appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport TextFieldOutline from '../components/TextFieldOutline';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'react-mde/lib/styles/css/react-mde-all.css';\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport APIUtility from '../utils/APIUtility';\r\nimport ThreadCard from '../components/ThreadCard';\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n}));\r\n\r\nfunction WriteReplyPage(props) {\r\n\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const { id_course, id_materi, id_thread } = useParams();\r\n    const [value, setValue] = useState(\"**Hello world!!!**\");\r\n    const [selectedTab, setSelectedTab] = useState(\"write\");\r\n    const [nextState, setNextState] = useState(\"\");\r\n    const [isDialogOpen, setIsDialogOpen] = useState(query.get('state') != undefined);\r\n    const [isSuccessDialogOpen, setIsSuccessDialogOpen] = useState(false);\r\n    const [post, setPost] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const list = [\r\n        { color: \"inherit\", link: \"/sister\", name: \"Sistem Interaksi\" },\r\n        { color: \"inherit\", link: \"/materi\", name: \"Bab 1. Pengantar Sistem Informasi\" },\r\n        { color: \"inherit\", link: \"/thread\", name: \"Forum Diskusi\" },\r\n        { color: \"primary\", link: \"/thread/new\", name: \"Buat Thread\" },\r\n    ];\r\n\r\n    const handleClick = () => {\r\n\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        console.log(value)\r\n        setIsLoading(true);\r\n        if (\r\n            value == ''\r\n        ) {\r\n            setIsDialogOpen(true);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        await APIUtility.post('/api/post/' + id_thread + '/createreply/',\r\n            {\r\n                body: value\r\n            }\r\n        ).then((response) => {\r\n            setIsLoading(false);\r\n            setNextState(\"success-create\");\r\n            setIsSuccessDialogOpen(true);\r\n        });\r\n        // setIsLoading(false);\r\n        // props.changePage(\"/thread\")\r\n    }\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    const converter = new Showdown.Converter({\r\n        tables: true,\r\n        simplifiedAutoLink: true,\r\n        strikethrough: true,\r\n        tasklists: true\r\n    });\r\n    useEffect(() => {\r\n        if (post === null) {\r\n            APIUtility.get('/api/post/' + id_thread, {}).then((response) => {\r\n                let postJSON = JSON.parse(response.data.model)\r\n                let postObject = {\r\n                    'pk': postJSON[0]['pk'],\r\n                    'material': postJSON[0]['fields']['material'],\r\n                    'profile': postJSON[0]['fields']['profile'],\r\n                    'author_name': postJSON[0]['fields']['author_name'],\r\n                    'title': postJSON[0]['fields']['title'],\r\n                    'body': postJSON[0]['fields']['body'],\r\n                    'category': postJSON[0]['fields']['category'],\r\n                    'date': postJSON[0]['fields']['date'],\r\n                    'last_modified': postJSON[0]['fields']['last_modified'],\r\n                };\r\n                setPost(postObject)\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n\r\n    }, [])\r\n\r\n    if (isSuccessDialogOpen) {\r\n        return (\r\n            <>\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/course/\" + id_course + \"/materi/\" + id_materi + \"/thread/details/\" + id_thread + \"/\",\r\n                        search: \"?state=\" + nextState,\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n    if (isLoading) {\r\n        return (<>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ minHeight: '100vh', marginTop: '60px', padding: '30px 0px' }}\r\n                >\r\n                    <Grid item>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </>);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '100vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={list} />\r\n                    <Grid item style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />} onClick={handleClick}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {post == null ? <CircularProgress /> :\r\n                            <ThreadCard\r\n                                isOutlined={true}\r\n                                Title={post['title']}\r\n                                TimeStamp={post['last_modified']}\r\n                                Author={post['author_name']}\r\n                                changePage={props.changePage}\r\n                                id_course={id_course}\r\n                                id_materi={id_materi}\r\n                                id_post={id_thread}\r\n                                Text={post['body']}\r\n                            />\r\n                        }\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography style={{ height: '16px' }}></Typography>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 16px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <h2 style={{ margin: '10px 0px 0px 0px' }}>Tulis Komentar</h2>\r\n                                </Grid>\r\n                                <Grid item style={{ width: '100%', padding: '10px' }}>\r\n                                    <ReactMde\r\n                                        value={value}\r\n                                        onChange={setValue}\r\n                                        selectedTab={selectedTab}\r\n                                        onTabChange={setSelectedTab}\r\n                                        generateMarkdownPreview={markdown =>\r\n                                            Promise.resolve(converter.makeHtml(markdown))\r\n                                        }\r\n                                        childProps={{\r\n                                            writeButton: {\r\n                                                tabIndex: -1\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ height: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button style={{ width: '100%' }} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Tulis komentar</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <Snackbar\r\n                open={isSuccessDialogOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => {\r\n                    setIsSuccessDialogOpen(false);\r\n                }}\r\n            >\r\n                <Alert\r\n                    severity=\"success\"\r\n                    onClose={() => {\r\n                        setIsSuccessDialogOpen(false);\r\n                    }}\r\n                >\r\n                    Berhasil menulis komentar !\r\n            </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n                open={isDialogOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => {\r\n                    setIsDialogOpen(false);\r\n                }}\r\n            >\r\n                <Alert\r\n                    severity=\"error\"\r\n                    onClose={() => {\r\n                        setIsDialogOpen(false);\r\n                    }}\r\n                >\r\n                    Pastikan kamu mengisi data dengan benar\r\n            </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { WriteReplyPage };","D:\\Arnas\\Code\\skripz\\src\\pages\\EditReplyPage.js",["318","319","320","321","322","323"],"D:\\Arnas\\Code\\skripz\\src\\pdf\\PdfHandler.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi1.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi3.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi5.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi4.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi2.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi6.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi7.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\MateriSlideSequential.js",["324","325","326","327","328","329","330"],"D:\\Arnas\\Code\\skripz\\src\\pages\\MateriSlideIntSequential.js",["331","332","333","334","335","336","337"],{"ruleId":"338","severity":1,"message":"339","line":3,"column":35,"nodeType":"340","messageId":"341","endLine":3,"endColumn":45},{"ruleId":"338","severity":1,"message":"342","line":3,"column":66,"nodeType":"340","messageId":"341","endLine":3,"endColumn":80},{"ruleId":"338","severity":1,"message":"343","line":3,"column":82,"nodeType":"340","messageId":"341","endLine":3,"endColumn":93},{"ruleId":"338","severity":1,"message":"344","line":3,"column":95,"nodeType":"340","messageId":"341","endLine":3,"endColumn":103},{"ruleId":"338","severity":1,"message":"345","line":3,"column":105,"nodeType":"340","messageId":"341","endLine":3,"endColumn":117},{"ruleId":"338","severity":1,"message":"346","line":35,"column":11,"nodeType":"340","messageId":"341","endLine":35,"endColumn":28},{"ruleId":"338","severity":1,"message":"347","line":43,"column":14,"nodeType":"340","messageId":"341","endLine":43,"endColumn":35},{"ruleId":"338","severity":1,"message":"348","line":1,"column":17,"nodeType":"340","messageId":"341","endLine":1,"endColumn":25},{"ruleId":"338","severity":1,"message":"349","line":3,"column":46,"nodeType":"340","messageId":"341","endLine":3,"endColumn":51},{"ruleId":"338","severity":1,"message":"350","line":3,"column":53,"nodeType":"340","messageId":"341","endLine":3,"endColumn":59},{"ruleId":"338","severity":1,"message":"342","line":3,"column":67,"nodeType":"340","messageId":"341","endLine":3,"endColumn":81},{"ruleId":"338","severity":1,"message":"343","line":3,"column":83,"nodeType":"340","messageId":"341","endLine":3,"endColumn":94},{"ruleId":"338","severity":1,"message":"344","line":3,"column":96,"nodeType":"340","messageId":"341","endLine":3,"endColumn":104},{"ruleId":"338","severity":1,"message":"345","line":3,"column":106,"nodeType":"340","messageId":"341","endLine":3,"endColumn":118},{"ruleId":"338","severity":1,"message":"351","line":12,"column":8,"nodeType":"340","messageId":"341","endLine":12,"endColumn":18},{"ruleId":"338","severity":1,"message":"352","line":14,"column":8,"nodeType":"340","messageId":"341","endLine":14,"endColumn":17},{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"353","replacedBy":"357"},{"ruleId":"355","replacedBy":"358"},{"ruleId":"338","severity":1,"message":"359","line":6,"column":22,"nodeType":"340","messageId":"341","endLine":6,"endColumn":28},{"ruleId":"338","severity":1,"message":"360","line":8,"column":5,"nodeType":"340","messageId":"341","endLine":8,"endColumn":14},{"ruleId":"338","severity":1,"message":"361","line":16,"column":10,"nodeType":"340","messageId":"341","endLine":16,"endColumn":31},{"ruleId":"338","severity":1,"message":"362","line":17,"column":10,"nodeType":"340","messageId":"341","endLine":17,"endColumn":34},{"ruleId":"338","severity":1,"message":"363","line":1,"column":17,"nodeType":"340","messageId":"341","endLine":1,"endColumn":26},{"ruleId":"338","severity":1,"message":"348","line":1,"column":28,"nodeType":"340","messageId":"341","endLine":1,"endColumn":36},{"ruleId":"338","severity":1,"message":"364","line":9,"column":10,"nodeType":"340","messageId":"341","endLine":9,"endColumn":14},{"ruleId":"338","severity":1,"message":"349","line":3,"column":33,"nodeType":"340","messageId":"341","endLine":3,"endColumn":38},{"ruleId":"338","severity":1,"message":"350","line":3,"column":62,"nodeType":"340","messageId":"341","endLine":3,"endColumn":68},{"ruleId":"338","severity":1,"message":"365","line":64,"column":13,"nodeType":"340","messageId":"341","endLine":64,"endColumn":19},{"ruleId":"338","severity":1,"message":"365","line":196,"column":13,"nodeType":"340","messageId":"341","endLine":196,"endColumn":19},{"ruleId":"338","severity":1,"message":"363","line":1,"column":17,"nodeType":"340","messageId":"341","endLine":1,"endColumn":26},{"ruleId":"338","severity":1,"message":"348","line":1,"column":28,"nodeType":"340","messageId":"341","endLine":1,"endColumn":36},{"ruleId":"338","severity":1,"message":"366","line":2,"column":10,"nodeType":"340","messageId":"341","endLine":2,"endColumn":20},{"ruleId":"338","severity":1,"message":"367","line":3,"column":16,"nodeType":"340","messageId":"341","endLine":3,"endColumn":22},{"ruleId":"338","severity":1,"message":"368","line":6,"column":10,"nodeType":"340","messageId":"341","endLine":6,"endColumn":14},{"ruleId":"338","severity":1,"message":"369","line":6,"column":16,"nodeType":"340","messageId":"341","endLine":6,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":73,"column":24,"nodeType":"372","messageId":"373","endLine":73,"endColumn":26},{"ruleId":"374","severity":1,"message":"375","line":82,"column":6,"nodeType":"376","endLine":82,"endColumn":8,"suggestions":"377"},{"ruleId":"374","severity":1,"message":"378","line":35,"column":8,"nodeType":"376","endLine":35,"endColumn":10,"suggestions":"379"},{"ruleId":"338","severity":1,"message":"380","line":2,"column":28,"nodeType":"340","messageId":"341","endLine":2,"endColumn":36},{"ruleId":"338","severity":1,"message":"381","line":8,"column":28,"nodeType":"340","messageId":"341","endLine":8,"endColumn":54},{"ruleId":"338","severity":1,"message":"382","line":20,"column":8,"nodeType":"340","messageId":"341","endLine":20,"endColumn":21},{"ruleId":"370","severity":1,"message":"371","line":140,"column":43,"nodeType":"372","messageId":"373","endLine":140,"endColumn":45},{"ruleId":"374","severity":1,"message":"383","line":147,"column":8,"nodeType":"376","endLine":147,"endColumn":10,"suggestions":"384"},{"ruleId":"338","severity":1,"message":"385","line":157,"column":14,"nodeType":"340","messageId":"341","endLine":157,"endColumn":25},{"ruleId":"338","severity":1,"message":"386","line":170,"column":11,"nodeType":"340","messageId":"341","endLine":170,"endColumn":25},{"ruleId":"387","severity":1,"message":"388","line":205,"column":64,"nodeType":"389","endLine":205,"endColumn":94},{"ruleId":"370","severity":1,"message":"371","line":94,"column":28,"nodeType":"372","messageId":"373","endLine":94,"endColumn":30},{"ruleId":"370","severity":1,"message":"371","line":112,"column":29,"nodeType":"372","messageId":"373","endLine":112,"endColumn":31},{"ruleId":"374","severity":1,"message":"390","line":122,"column":8,"nodeType":"376","endLine":122,"endColumn":10,"suggestions":"391"},{"ruleId":"370","severity":1,"message":"371","line":160,"column":47,"nodeType":"372","messageId":"373","endLine":160,"endColumn":49},{"ruleId":"370","severity":1,"message":"371","line":169,"column":47,"nodeType":"372","messageId":"373","endLine":169,"endColumn":49},{"ruleId":"370","severity":1,"message":"371","line":186,"column":46,"nodeType":"372","messageId":"373","endLine":186,"endColumn":48},{"ruleId":"370","severity":1,"message":"371","line":192,"column":47,"nodeType":"372","messageId":"373","endLine":192,"endColumn":49},{"ruleId":"370","severity":1,"message":"371","line":199,"column":57,"nodeType":"372","messageId":"373","endLine":199,"endColumn":59},{"ruleId":"338","severity":1,"message":"363","line":1,"column":17,"nodeType":"340","messageId":"341","endLine":1,"endColumn":26},{"ruleId":"338","severity":1,"message":"364","line":9,"column":10,"nodeType":"340","messageId":"341","endLine":9,"endColumn":14},{"ruleId":"338","severity":1,"message":"392","line":23,"column":21,"nodeType":"340","messageId":"341","endLine":23,"endColumn":31},{"ruleId":"338","severity":1,"message":"363","line":1,"column":17,"nodeType":"340","messageId":"341","endLine":1,"endColumn":26},{"ruleId":"338","severity":1,"message":"348","line":1,"column":28,"nodeType":"340","messageId":"341","endLine":1,"endColumn":36},{"ruleId":"338","severity":1,"message":"366","line":2,"column":10,"nodeType":"340","messageId":"341","endLine":2,"endColumn":20},{"ruleId":"338","severity":1,"message":"367","line":3,"column":16,"nodeType":"340","messageId":"341","endLine":3,"endColumn":22},{"ruleId":"338","severity":1,"message":"393","line":1,"column":10,"nodeType":"340","messageId":"341","endLine":1,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":26,"column":35,"nodeType":"372","messageId":"373","endLine":26,"endColumn":37},{"ruleId":"338","severity":1,"message":"394","line":6,"column":7,"nodeType":"340","messageId":"341","endLine":6,"endColumn":16},{"ruleId":"338","severity":1,"message":"363","line":1,"column":27,"nodeType":"340","messageId":"341","endLine":1,"endColumn":36},{"ruleId":"338","severity":1,"message":"395","line":2,"column":21,"nodeType":"340","messageId":"341","endLine":2,"endColumn":32},{"ruleId":"338","severity":1,"message":"396","line":32,"column":11,"nodeType":"340","messageId":"341","endLine":32,"endColumn":19},{"ruleId":"370","severity":1,"message":"371","line":51,"column":36,"nodeType":"372","messageId":"373","endLine":51,"endColumn":38},{"ruleId":"338","severity":1,"message":"386","line":117,"column":11,"nodeType":"340","messageId":"341","endLine":117,"endColumn":25},{"ruleId":"387","severity":1,"message":"388","line":173,"column":130,"nodeType":"389","endLine":173,"endColumn":151},{"ruleId":"370","severity":1,"message":"397","line":35,"column":73,"nodeType":"372","messageId":"373","endLine":35,"endColumn":75},{"ruleId":"338","severity":1,"message":"386","line":48,"column":11,"nodeType":"340","messageId":"341","endLine":48,"endColumn":25},{"ruleId":"374","severity":1,"message":"398","line":60,"column":8,"nodeType":"376","endLine":60,"endColumn":10,"suggestions":"399"},{"ruleId":"370","severity":1,"message":"371","line":87,"column":54,"nodeType":"372","messageId":"373","endLine":87,"endColumn":56},{"ruleId":"370","severity":1,"message":"371","line":87,"column":107,"nodeType":"372","messageId":"373","endLine":87,"endColumn":109},{"ruleId":"338","severity":1,"message":"394","line":9,"column":7,"nodeType":"340","messageId":"341","endLine":9,"endColumn":16},{"ruleId":"370","severity":1,"message":"397","line":84,"column":49,"nodeType":"372","messageId":"373","endLine":84,"endColumn":51},{"ruleId":"370","severity":1,"message":"397","line":101,"column":49,"nodeType":"372","messageId":"373","endLine":101,"endColumn":51},{"ruleId":"370","severity":1,"message":"397","line":38,"column":73,"nodeType":"372","messageId":"373","endLine":38,"endColumn":75},{"ruleId":"338","severity":1,"message":"385","line":47,"column":14,"nodeType":"340","messageId":"341","endLine":47,"endColumn":25},{"ruleId":"338","severity":1,"message":"386","line":51,"column":11,"nodeType":"340","messageId":"341","endLine":51,"endColumn":25},{"ruleId":"338","severity":1,"message":"400","line":55,"column":11,"nodeType":"340","messageId":"341","endLine":55,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":87,"column":40,"nodeType":"372","messageId":"373","endLine":87,"endColumn":42},{"ruleId":"374","severity":1,"message":"401","line":96,"column":8,"nodeType":"376","endLine":96,"endColumn":10,"suggestions":"402"},{"ruleId":"370","severity":1,"message":"371","line":124,"column":54,"nodeType":"372","messageId":"373","endLine":124,"endColumn":56},{"ruleId":"370","severity":1,"message":"371","line":124,"column":107,"nodeType":"372","messageId":"373","endLine":124,"endColumn":109},{"ruleId":"338","severity":1,"message":"367","line":3,"column":49,"nodeType":"340","messageId":"341","endLine":3,"endColumn":55},{"ruleId":"338","severity":1,"message":"403","line":6,"column":8,"nodeType":"340","messageId":"341","endLine":6,"endColumn":15},{"ruleId":"338","severity":1,"message":"394","line":9,"column":7,"nodeType":"340","messageId":"341","endLine":9,"endColumn":16},{"ruleId":"338","severity":1,"message":"404","line":34,"column":13,"nodeType":"340","messageId":"341","endLine":34,"endColumn":18},{"ruleId":"338","severity":1,"message":"386","line":36,"column":11,"nodeType":"340","messageId":"341","endLine":36,"endColumn":25},{"ruleId":"338","severity":1,"message":"405","line":3,"column":10,"nodeType":"340","messageId":"341","endLine":3,"endColumn":19},{"ruleId":"338","severity":1,"message":"367","line":3,"column":27,"nodeType":"340","messageId":"341","endLine":3,"endColumn":33},{"ruleId":"338","severity":1,"message":"406","line":3,"column":59,"nodeType":"340","messageId":"341","endLine":3,"endColumn":68},{"ruleId":"338","severity":1,"message":"407","line":3,"column":70,"nodeType":"340","messageId":"341","endLine":3,"endColumn":74},{"ruleId":"338","severity":1,"message":"408","line":3,"column":94,"nodeType":"340","messageId":"341","endLine":3,"endColumn":108},{"ruleId":"338","severity":1,"message":"409","line":3,"column":110,"nodeType":"340","messageId":"341","endLine":3,"endColumn":118},{"ruleId":"338","severity":1,"message":"410","line":4,"column":8,"nodeType":"340","messageId":"341","endLine":4,"endColumn":18},{"ruleId":"338","severity":1,"message":"394","line":7,"column":7,"nodeType":"340","messageId":"341","endLine":7,"endColumn":16},{"ruleId":"338","severity":1,"message":"411","line":90,"column":11,"nodeType":"340","messageId":"341","endLine":90,"endColumn":24},{"ruleId":"338","severity":1,"message":"412","line":94,"column":11,"nodeType":"340","messageId":"341","endLine":94,"endColumn":24},{"ruleId":"338","severity":1,"message":"413","line":98,"column":11,"nodeType":"340","messageId":"341","endLine":98,"endColumn":24},{"ruleId":"338","severity":1,"message":"395","line":2,"column":21,"nodeType":"340","messageId":"341","endLine":2,"endColumn":32},{"ruleId":"338","severity":1,"message":"396","line":33,"column":11,"nodeType":"340","messageId":"341","endLine":33,"endColumn":19},{"ruleId":"370","severity":1,"message":"371","line":53,"column":36,"nodeType":"372","messageId":"373","endLine":53,"endColumn":38},{"ruleId":"374","severity":1,"message":"414","line":114,"column":8,"nodeType":"376","endLine":114,"endColumn":10,"suggestions":"415"},{"ruleId":"338","severity":1,"message":"386","line":157,"column":11,"nodeType":"340","messageId":"341","endLine":157,"endColumn":25},{"ruleId":"387","severity":1,"message":"388","line":213,"column":130,"nodeType":"389","endLine":213,"endColumn":151},{"ruleId":"338","severity":1,"message":"416","line":8,"column":8,"nodeType":"340","messageId":"341","endLine":8,"endColumn":24},{"ruleId":"370","severity":1,"message":"397","line":38,"column":73,"nodeType":"372","messageId":"373","endLine":38,"endColumn":75},{"ruleId":"370","severity":1,"message":"371","line":58,"column":19,"nodeType":"372","messageId":"373","endLine":58,"endColumn":21},{"ruleId":"338","severity":1,"message":"386","line":77,"column":11,"nodeType":"340","messageId":"341","endLine":77,"endColumn":25},{"ruleId":"374","severity":1,"message":"417","line":107,"column":8,"nodeType":"376","endLine":107,"endColumn":10,"suggestions":"418"},{"ruleId":"338","severity":1,"message":"416","line":8,"column":8,"nodeType":"340","messageId":"341","endLine":8,"endColumn":24},{"ruleId":"370","severity":1,"message":"397","line":38,"column":73,"nodeType":"372","messageId":"373","endLine":38,"endColumn":75},{"ruleId":"370","severity":1,"message":"371","line":60,"column":19,"nodeType":"372","messageId":"373","endLine":60,"endColumn":21},{"ruleId":"338","severity":1,"message":"386","line":92,"column":11,"nodeType":"340","messageId":"341","endLine":92,"endColumn":25},{"ruleId":"374","severity":1,"message":"419","line":143,"column":8,"nodeType":"376","endLine":143,"endColumn":10,"suggestions":"420"},{"ruleId":"387","severity":1,"message":"388","line":189,"column":130,"nodeType":"389","endLine":189,"endColumn":151},{"ruleId":"338","severity":1,"message":"421","line":9,"column":10,"nodeType":"340","messageId":"341","endLine":9,"endColumn":26},{"ruleId":"338","severity":1,"message":"422","line":16,"column":8,"nodeType":"340","messageId":"341","endLine":16,"endColumn":12},{"ruleId":"370","severity":1,"message":"371","line":129,"column":43,"nodeType":"372","messageId":"373","endLine":129,"endColumn":45},{"ruleId":"374","severity":1,"message":"423","line":136,"column":8,"nodeType":"376","endLine":136,"endColumn":10,"suggestions":"424"},{"ruleId":"338","severity":1,"message":"385","line":146,"column":14,"nodeType":"340","messageId":"341","endLine":146,"endColumn":25},{"ruleId":"425","severity":1,"message":"426","line":160,"column":38,"nodeType":"427","messageId":"428","endLine":160,"endColumn":40},{"ruleId":"338","severity":1,"message":"386","line":167,"column":11,"nodeType":"340","messageId":"341","endLine":167,"endColumn":25},{"ruleId":"338","severity":1,"message":"421","line":9,"column":10,"nodeType":"340","messageId":"341","endLine":9,"endColumn":26},{"ruleId":"338","severity":1,"message":"422","line":16,"column":8,"nodeType":"340","messageId":"341","endLine":16,"endColumn":12},{"ruleId":"370","severity":1,"message":"371","line":129,"column":43,"nodeType":"372","messageId":"373","endLine":129,"endColumn":45},{"ruleId":"374","severity":1,"message":"423","line":136,"column":8,"nodeType":"376","endLine":136,"endColumn":10,"suggestions":"429"},{"ruleId":"338","severity":1,"message":"385","line":146,"column":14,"nodeType":"340","messageId":"341","endLine":146,"endColumn":25},{"ruleId":"425","severity":1,"message":"426","line":160,"column":38,"nodeType":"427","messageId":"428","endLine":160,"endColumn":40},{"ruleId":"338","severity":1,"message":"386","line":167,"column":11,"nodeType":"340","messageId":"341","endLine":167,"endColumn":25},"no-unused-vars","'CardHeader' is defined but never used.","Identifier","unusedVar","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'handleExpandClick' is assigned a value but never used.","'handleClickAssessment' is defined but never used.","'useState' is defined but never used.","'Paper' is defined but never used.","'Avatar' is defined but never used.","'MateriCard' is defined but never used.","'secondPDF' is defined but never used.","no-native-reassign",["430"],"no-negated-in-lhs",["431"],["430"],["431"],"'Router' is defined but never used.","'useParams' is defined but never used.","'MateriSlideSequential' is defined but never used.","'MateriSlideIntSequential' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'height' is assigned a value but never used.","'useHistory' is defined but never used.","'Button' is defined but never used.","'blue' is defined but never used.","'pink' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'courses.length'. Either include it or remove the dependency array.","ArrayExpression",["432"],"React Hook useEffect has missing dependencies: 'isVerified', 'props', and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["433"],"'useTheme' is defined but never used.","'PDFViewerExampleSequential' is defined but never used.","'useMediaQuery' is defined but never used.","React Hook useEffect has missing dependencies: 'id_course', 'id_materi', 'materi', and 'post'. Either include them or remove the dependency array.",["434"],"'handleClick' is defined but never used.","'preventDefault' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'course', 'id_course', and 'material.length'. Either include them or remove the dependency array.",["435"],"'setIsLogin' is assigned a value but never used.","'authHeader' is defined but never used.","'useStyles' is assigned a value but never used.","'useLocation' is defined but never used.","'category' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'id_materi' and 'listPost'. Either include them or remove the dependency array.",["436"],"'converter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id_thread', 'post', and 'replies'. Either include them or remove the dependency array.",["437"],"'AddIcon' is defined but never used.","'Title' is assigned a value but never used.","'CardMedia' is defined but never used.","'FormGroup' is defined but never used.","'Card' is defined but never used.","'FormHelperText' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'handleChange1' is assigned a value but never used.","'handleChange2' is assigned a value but never used.","'handleChange3' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id_thread', 'post', and 'title'. Either include them or remove the dependency array.",["438"],"'TextFieldOutline' is defined but never used.","React Hook useEffect has missing dependencies: 'id_thread' and 'post'. Either include them or remove the dependency array.",["439"],"React Hook useEffect has missing dependencies: 'id_reply', 'id_thread', 'post', and 'reply'. Either include them or remove the dependency array.",["440"],"'PDFViewerExample' is defined but never used.","'file' is defined but never used.","React Hook useEffect has missing dependencies: 'id_materi', 'materi', and 'post'. Either include them or remove the dependency array.",["441"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["442"],"no-global-assign","no-unsafe-negation",{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"461","fix":"463"},"Update the dependencies array to be: [courses.length]",{"range":"464","text":"465"},"Update the dependencies array to be: [isVerified, props, token]",{"range":"466","text":"467"},"Update the dependencies array to be: [id_course, id_materi, materi, post]",{"range":"468","text":"469"},"Update the dependencies array to be: [course, id_course, material.length]",{"range":"470","text":"471"},"Update the dependencies array to be: [id_materi, listPost]",{"range":"472","text":"473"},"Update the dependencies array to be: [id_thread, post, replies]",{"range":"474","text":"475"},"Update the dependencies array to be: [id_thread, post, title]",{"range":"476","text":"477"},"Update the dependencies array to be: [id_thread, post]",{"range":"478","text":"479"},"Update the dependencies array to be: [id_reply, id_thread, post, reply]",{"range":"480","text":"481"},"Update the dependencies array to be: [id_materi, materi, post]",{"range":"482","text":"483"},{"range":"484","text":"483"},[2232,2234],"[courses.length]",[1006,1008],"[isVerified, props, token]",[5734,5736],"[id_course, id_materi, materi, post]",[4040,4042],"[course, id_course, material.length]",[2242,2244],"[id_materi, listPost]",[3688,3690],"[id_thread, post, replies]",[4367,4369],"[id_thread, post, title]",[3936,3938],"[id_thread, post]",[5454,5456],"[id_reply, id_thread, post, reply]",[5381,5383],"[id_materi, materi, post]",[5384,5386]]