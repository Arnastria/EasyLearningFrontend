[{"D:\\Arnas\\Code\\skripz\\src\\components\\MateriCard.js":"1","D:\\Arnas\\Code\\skripz\\src\\pages\\materiSlide.js":"2","D:\\Arnas\\Code\\skripz\\src\\index.js":"3","D:\\Arnas\\Code\\skripz\\src\\components\\Breadcrumb.js":"4","D:\\Arnas\\Code\\skripz\\src\\routes\\index.js":"5","D:\\Arnas\\Code\\skripz\\src\\components\\appbar.js":"6","D:\\Arnas\\Code\\skripz\\src\\components\\PDFViewer.js":"7","D:\\Arnas\\Code\\skripz\\src\\pages\\home.js":"8","D:\\Arnas\\Code\\skripz\\src\\App.js":"9","D:\\Arnas\\Code\\skripz\\src\\reportWebVitals.js":"10","D:\\Arnas\\Code\\skripz\\src\\pages\\DashboardPage.js":"11","D:\\Arnas\\Code\\skripz\\src\\pages\\LoginSuccessPage.js":"12","D:\\Arnas\\Code\\skripz\\src\\pages\\MateriSlide.js":"13","D:\\Arnas\\Code\\skripz\\src\\pages\\MatkulPage.js":"14","D:\\Arnas\\Code\\skripz\\src\\pages\\PreQuizPage.js":"15","D:\\Arnas\\Code\\skripz\\src\\components\\Appbar.js":"16","D:\\Arnas\\Code\\skripz\\src\\pages\\Home.js":"17","D:\\Arnas\\Code\\skripz\\src\\utils\\UserService.js":"18","D:\\Arnas\\Code\\skripz\\src\\utils\\APIUtility.js":"19","D:\\Arnas\\Code\\skripz\\src\\utils\\AuthHeader.js":"20","D:\\Arnas\\Code\\skripz\\src\\pages\\Logout.js":"21","D:\\Arnas\\Code\\skripz\\src\\components\\AnnouncementCard.js":"22","D:\\Arnas\\Code\\skripz\\src\\pages\\WriteThreadPage.js":"23","D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadListPage.js":"24","D:\\Arnas\\Code\\skripz\\src\\components\\ThreadCard.js":"25","D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadPage.js":"26","D:\\Arnas\\Code\\skripz\\src\\components\\ThreadReplyCard.js":"27","D:\\Arnas\\Code\\skripz\\src\\components\\QuestionItem.js":"28","D:\\Arnas\\Code\\skripz\\src\\pages\\StartAssessment.js":"29","D:\\Arnas\\Code\\skripz\\src\\pages\\AssessmentPage.js":"30","D:\\Arnas\\Code\\skripz\\src\\pages\\EditThreadPage.js":"31","D:\\Arnas\\Code\\skripz\\src\\pdf\\DesainInteraksi.js":"32","D:\\Arnas\\Code\\skripz\\src\\utils\\WindowDimension.js":"33","D:\\Arnas\\Code\\skripz\\src\\components\\TextFieldOutline.js":"34","D:\\Arnas\\Code\\skripz\\src\\pages\\WriteReplyPage.js":"35","D:\\Arnas\\Code\\skripz\\src\\pages\\EditReplyPage.js":"36","D:\\Arnas\\Code\\skripz\\src\\pdf\\PdfHandler.js":"37","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi1.js":"38","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi3.js":"39","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi5.js":"40","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi4.js":"41","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi2.js":"42","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi6.js":"43","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi7.js":"44","D:\\Arnas\\Code\\skripz\\src\\pages\\SearchPage.js":"45"},{"size":7549,"mtime":1618822214728,"results":"46","hashOfConfig":"47"},{"size":10163,"mtime":1612508900675,"results":"48","hashOfConfig":"49"},{"size":500,"mtime":1611207899531,"results":"50","hashOfConfig":"47"},{"size":1140,"mtime":1613459980538,"results":"51","hashOfConfig":"47"},{"size":5393,"mtime":1619492491484,"results":"52","hashOfConfig":"47"},{"size":3528,"mtime":1612341417179,"results":"53","hashOfConfig":"49"},{"size":15572,"mtime":1618222942983,"results":"54","hashOfConfig":"47"},{"size":736,"mtime":1612845977613,"results":"55","hashOfConfig":"49"},{"size":764,"mtime":1613372636237,"results":"56","hashOfConfig":"47"},{"size":362,"mtime":1611207899531,"results":"57","hashOfConfig":"47"},{"size":11069,"mtime":1619421556996,"results":"58","hashOfConfig":"47"},{"size":2160,"mtime":1618812940536,"results":"59","hashOfConfig":"47"},{"size":23334,"mtime":1619851596630,"results":"60","hashOfConfig":"47"},{"size":11521,"mtime":1618821996898,"results":"61","hashOfConfig":"47"},{"size":13461,"mtime":1619851545238,"results":"62","hashOfConfig":"47"},{"size":4399,"mtime":1618902122662,"results":"63","hashOfConfig":"47"},{"size":736,"mtime":1612847873878,"results":"64","hashOfConfig":"49"},{"size":1623,"mtime":1612855762292,"results":"65","hashOfConfig":"47"},{"size":807,"mtime":1618902120280,"results":"66","hashOfConfig":"47"},{"size":255,"mtime":1612852464766,"results":"67","hashOfConfig":"47"},{"size":259,"mtime":1612859345558,"results":"68","hashOfConfig":"47"},{"size":2623,"mtime":1618808925976,"results":"69","hashOfConfig":"47"},{"size":10177,"mtime":1619851301489,"results":"70","hashOfConfig":"47"},{"size":8562,"mtime":1619851361073,"results":"71","hashOfConfig":"47"},{"size":5038,"mtime":1619708954878,"results":"72","hashOfConfig":"47"},{"size":10007,"mtime":1618298651427,"results":"73","hashOfConfig":"47"},{"size":2822,"mtime":1619493087968,"results":"74","hashOfConfig":"47"},{"size":2133,"mtime":1613365804406,"results":"75","hashOfConfig":"49"},{"size":6301,"mtime":1619851722580,"results":"76","hashOfConfig":"47"},{"size":27962,"mtime":1619851556617,"results":"77","hashOfConfig":"47"},{"size":13918,"mtime":1619851245298,"results":"78","hashOfConfig":"47"},{"size":1424403,"mtime":1618209066360,"results":"79","hashOfConfig":"80"},{"size":648,"mtime":1613462354582,"results":"81","hashOfConfig":"47"},{"size":776,"mtime":1613629909646,"results":"82","hashOfConfig":"47"},{"size":10466,"mtime":1619851213221,"results":"83","hashOfConfig":"47"},{"size":13666,"mtime":1619851124360,"results":"84","hashOfConfig":"47"},{"size":439,"mtime":1618211443662,"results":"85","hashOfConfig":"47"},{"size":1424409,"mtime":1618210746147,"results":"86","hashOfConfig":"47"},{"size":1665789,"mtime":1618210671305,"results":"87","hashOfConfig":"47"},{"size":2562501,"mtime":1618210792996,"results":"88","hashOfConfig":"47"},{"size":2999069,"mtime":1618210771359,"results":"89","hashOfConfig":"47"},{"size":3049465,"mtime":1618209176694,"results":"90","hashOfConfig":"47"},{"size":3328933,"mtime":1618210809368,"results":"91","hashOfConfig":"47"},{"size":4155257,"mtime":1618210828058,"results":"92","hashOfConfig":"47"},{"size":10512,"mtime":1619421758937,"results":"93","hashOfConfig":"47"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"6afyyz",{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"by9dd7",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"97"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"97"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"97"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"97"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"97"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"97"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"12qmxe1",{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"97"},"D:\\Arnas\\Code\\skripz\\src\\components\\MateriCard.js",["204","205","206","207","208","209"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CardMedia, Grid, Button, CardHeader, CardContent, Card, CardActionArea, CardActions, GridList, GridListTile } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: '100%'\r\n    },\r\n    root2: {\r\n        maxWidth: 445,\r\n        height: '100%'\r\n    },\r\n    media: {\r\n        width: 180,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    media2: {\r\n        height: 50,\r\n        width: 180,\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function MateriCard(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    function handleClickMateri() {\r\n        props.changePage(\"/course/\" + props.gayaBelajar + \"/\" + props.courseId + \"/materi/\" + props.materiID)\r\n    }\r\n\r\n    function handleClickAssessment() {\r\n        props.changePage(\"/course/\" + props.gayaBelajar + \"/\" + props.courseId + \"/materi/\" + props.materiID + \"/assessment/start\")\r\n    }\r\n    if (props.isLong) {\r\n        return (\r\n            <div>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item>\r\n                        <Card className={classes.root}>\r\n                            <div style={{ paddingLeft: '12px' }}><h1 style={{ margin: '0', padding: '0' }}>{props.number ?? 0}</h1></div>\r\n                            <Grid container justify=\"center\" alignItems=\"center\" alignContent=\"center\">\r\n                                <Grid item>\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={props.image}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography component=\"div\" style={{ width: '8px' }} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Card className={classes.root2}>\r\n                            <CardContent>\r\n                                <Grid container direction=\"column\"\r\n                                    justify=\"space-between\" >\r\n                                    <Grid item>\r\n                                        <Typography variant=\"head\" color=\"textSecondary\" component=\"b\">\r\n                                            {props.judul ?? \"-\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n\r\n                                    <Grid item >\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                            {props.description.length > 200 ? props.description.split(' ').slice(0, 25).join(' ') + \"...\" : props.description}\r\n                                        </Typography>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <Grid container justify=\"center\" alignItems=\"center\" alignContent=\"center\">\r\n                                            <Grid item style={{ width: '100%', margin: '12px 0px' }}>\r\n                                                <Button variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    fullWidth\r\n                                                    onClick={handleClickMateri}\r\n                                                    disableElevation>Lihat Materi</Button>\r\n                                            </Grid>\r\n                                            <Grid item style={{ width: '100%' }}>\r\n                                                <Button variant=\"outlined\"\r\n                                                    color=\"secondary\"\r\n                                                    fullWidth\r\n                                                    onClick={handleClickAssessment}\r\n                                                >\r\n                                                    Uji Pemahamanmu\r\n                        </Button>\r\n\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n    return (\r\n        <Card className={classes.root}>\r\n            <div style={{ paddingLeft: '12px' }}><h1 style={{ margin: '0', padding: '0' }}>{props.number ?? 0}</h1></div>\r\n            <Grid container justify=\"center\" alignItems=\"center\" alignContent=\"center\">\r\n                <Grid item>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={props.image}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <CardContent>\r\n                <Grid container direction=\"column\"\r\n                    justify=\"space-between\" >\r\n                    <Grid item>\r\n                        <Typography variant=\"head\" color=\"textSecondary\" component=\"b\">\r\n                            {props.judul ?? \"-\"}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item >\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {props.description.length > 200 ? props.description.split(' ').slice(0, 25).join(' ') + \"...\" : props.description}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Grid container justify=\"center\" alignItems=\"center\" alignContent=\"center\">\r\n                            <Grid item style={{ width: '100%', margin: '12px 0px' }}>\r\n                                <Button variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    fullWidth\r\n                                    onClick={handleClickMateri}\r\n                                    disableElevation>Lihat Materi</Button>\r\n                            </Grid>\r\n                            <Grid item style={{ width: '100%' }}>\r\n                                <Button variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    fullWidth\r\n                                    onClick={handleClickAssessment}\r\n                                >\r\n                                    Uji Pemahamanmu\r\n                        </Button>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n            </CardContent>\r\n\r\n        </Card>\r\n    );\r\n}\r\n",["210","211"],"D:\\Arnas\\Code\\skripz\\src\\pages\\materiSlide.js",["212","213","214","215","216","217","218","219","220"],"import React, { useState } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { CardMedia, Grid, Button, Container, Paper, Avatar, Card, CardActionArea, CardActions, GridList, GridListTile } from '@material-ui/core';\r\n// import { Document, Page, pdfjs } from 'react-pdf';\r\nimport { Appbar } from '../components/appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport { PDFViewerExample } from '../components/PDFViewer';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MateriCard from '../components/MateriCard';\r\nimport materiPDF from '../pdf/MSI01.pdf';\r\nimport secondPDF from '../pdf/K.pdf'\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    media: {\r\n        width: '246px',\r\n        height: '177px'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.55),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.75),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nfunction MateriSlide(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const list = [\r\n        { color: \"inherit\", link: \"/sister\", name: \"Sistem Interaksi\" },\r\n        { color: \"primary\", link: \"/materi\", name: \"Bab 1. Pengantar Sistem Informasi\" },\r\n    ];\r\n\r\n    function handleClick() {\r\n        props.changePage(\"/prequiz\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '30vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={list} />\r\n                    <Grid item xs style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"space-around\"\r\n                                // justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                style={{ padding: '30px' }}\r\n                            >\r\n\r\n                                <Grid item xs>\r\n                                    <Grid container justify=\"center\">\r\n                                        <Grid item>\r\n                                            <CardMedia\r\n                                                className={classes.media}\r\n                                                image=\"https://files.catbox.moe/qfaut0.svg\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={8}>\r\n                                    <Grid container spacing={1} direction=\"column\">\r\n                                        <Grid item>\r\n                                            <b style={{ fontSize: '24px', marginRight: '12px' }} >1</b>\r\n                                            <b style={{ fontSize: '24px' }} >Pengantar Sistem Interaksi</b>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <b style={{ fontSize: '14px' }} >Bagaimana raksasa teknologi seperti Google mengembangkan produk yang menarik dan mudah digunakan oleh jutaan penggunanya ?</b>\r\n                                        </Grid>\r\n                                        <Grid item >\r\n                                            <Typography variant=\"body\" color=\"white\" component=\"p\" style={{ fontSize: '12px' }}>\r\n                                                Pada bab ini kamu akan belajar mengenai dasar-dasar desain interaksi, istilah-istilah yang mungkin pernah kamu dengar seperti UI/UX, dan penerapannya dalam pengembangan produk digital, seperti website dan mobile apps\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item style={{ marginTop: '14px' }}>\r\n                                            <Grid container spacing={3} direction=\"row\">\r\n                                                <Grid item xs>\r\n                                                    <Button style={{ width: '100%' }} variant=\"outlined\" color=\"primary\" startIcon={<ArrowBackIcon />} onClick={handleClick}>Pre-Quiz</Button>\r\n                                                </Grid>\r\n                                                <Grid item xs >\r\n                                                    <Button style={{ width: '100%' }} variant=\"contained\" color=\"primary\" startIcon={<PlayArrowIcon />}>Lihat Video Intro</Button>\r\n                                                </Grid>\r\n                                                <Grid item xs >\r\n                                                    <Button style={{ width: '100%' }} variant=\"contained\" color=\"primary\" startIcon={<AssignmentIcon />}>Peta Konsep</Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"div\" style={{ height: '16px' }} />\r\n                    </Container>\r\n                    <Grid item>\r\n                        <Card>\r\n                            <PDFViewerExample pdf={materiPDF} />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"div\" style={{ height: '16px' }} />\r\n                    </Container>\r\n                    <Grid item>\r\n                        <Card>\r\n                            <PDFViewerExample pdf={'https://files.catbox.moe/071fl9.pdf'} />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"div\" style={{ height: '16px' }} />\r\n                    </Container>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 0px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <b>Materi Pengayaan / Suplemen</b>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px' }}\r\n                            >\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\">[VIDEO] Meet the UX Researcher : Gita</Button>\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\">[VIDEO] Meet the UX Researcher : Gita</Button>\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\">[VIDEO] Meet the UX Researcher : Gita</Button>\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                            </Grid>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { MateriSlide };",["221","222"],"D:\\Arnas\\Code\\skripz\\src\\index.js",[],"D:\\Arnas\\Code\\skripz\\src\\components\\Breadcrumb.js",[],"D:\\Arnas\\Code\\skripz\\src\\routes\\index.js",["223","224"],"import React from \"react\";\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n    BrowserRouter as Router,\r\n    Redirect,\r\n    useParams,\r\n    useRouteMatch,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport { Dashboard } from \"../pages/DashboardPage\";\r\n\r\nimport { Matkul } from \"../pages/MatkulPage\";\r\nimport { MateriSlide } from \"../pages/MateriSlide\";\r\nimport { PreQuiz } from '../pages/PreQuizPage';\r\nimport { LoginSuccess } from \"../pages/LoginSuccessPage\";\r\nimport { userService } from '../utils/UserService';\r\nimport { Logout } from \"../pages/Logout\";\r\nimport { WriteThreadPage } from \"../pages/WriteThreadPage\";\r\nimport { ThreadListPage } from \"../pages/ThreadListPage\";\r\nimport { ThreadPage } from \"../pages/ThreadPage\";\r\nimport { StartAssessment } from \"../pages/StartAssessment\";\r\nimport { AssessmentPage } from \"../pages/AssessmentPage\";\r\nimport { EditThreadPage } from \"../pages/EditThreadPage\";\r\nimport { WriteReplyPage } from \"../pages/WriteReplyPage\";\r\nimport { EditReplyPage } from \"../pages/EditReplyPage\";\r\nimport { SearchPage } from \"../pages/SearchPage\";\r\n\r\nfunction AuthRoute(props) {\r\n    const { path, children, exact, render } = props;\r\n\r\n    const isAuthed = userService.getLocalData() != null;\r\n    // const isAuthed = true;\r\n\r\n\r\n    const authMessage = \"You must be logged in to view this page\";\r\n\r\n    const matchPath = useRouteMatch(path);\r\n\r\n    if (!isAuthed)\r\n        return (\r\n            <Route\r\n                exact={exact}\r\n                path={path}\r\n                render={(props) => (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: {\r\n                                authMessage,\r\n                                requestedPath: matchPath.url,\r\n                            },\r\n                        }}\r\n                    />\r\n                )}\r\n            />\r\n        );\r\n\r\n\r\n    return (\r\n        <Route exact={exact} path={path} render={render != null ? render : null}>\r\n            {children}\r\n        </Route>\r\n    );\r\n}\r\n\r\nexport function AppSwitch(props) {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/loginSuccess/:token\">\r\n                <LoginSuccess changePage={history.push} backToPrevious={history.goBack} />\r\n            </Route>\r\n            <Route path=\"/logout\">\r\n                <Logout onSuccess={history.push} backToPrevious={history.goBack} />\r\n            </Route>\r\n            <Route path=\"/search/q/:querySearch\">\r\n                <SearchPage changePage={history.push} backToPrevious={history.goBack} />\r\n            </Route>\r\n            <AuthRoute path=\"/course/:id_gaya_belajar/:id_course/materi/:id_materi/thread/details/:id_thread\">\r\n                <ThreadPage changePage={history.push} backToPrevious={history.goBack} />\r\n            </AuthRoute>\r\n            <AuthRoute path=\"/course/:id_gaya_belajar/:id_course/materi/:id_materi/thread/:id_thread/reply/new\">\r\n                <WriteReplyPage changePage={history.push} backToPrevious={history.goBack} />\r\n            </AuthRoute>\r\n            <AuthRoute path=\"/course/:id_gaya_belajar/:id_course/materi/:id_materi/thread/:id_thread/reply/:id_reply/edit\">\r\n                <EditReplyPage changePage={history.push} backToPrevious={history.goBack} />\r\n            </AuthRoute>\r\n            <AuthRoute path=\"/course/:id_gaya_belajar/:id_course/materi/:id_materi/thread/new\">\r\n                <WriteThreadPage changePage={history.push} backToPrevious={history.goBack} />\r\n            </AuthRoute>\r\n            <AuthRoute path=\"/course/:id_gaya_belajar/:id_course/materi/:id_materi/thread/edit/:id_thread\">\r\n                <EditThreadPage changePage={history.push} backToPrevious={history.goBack} />\r\n            </AuthRoute>\r\n            <AuthRoute path=\"/course/:id_gaya_belajar/:id_course/materi/:id_materi/thread\">\r\n                <ThreadListPage changePage={history.push} backToPrevious={history.goBack} />\r\n            </AuthRoute>\r\n            <AuthRoute path=\"/course/:id_gaya_belajar/:id_course/materi/:id_materi/prequiz\">\r\n                <PreQuiz changePage={history.push} backToPrevious={history.goBack} />\r\n            </AuthRoute>\r\n            <AuthRoute path=\"/course/:id_gaya_belajar/:id_course/materi/:id_materi/assessment/start\">\r\n                <StartAssessment changePage={history.push} backToPrevious={history.goBack} />\r\n            </AuthRoute>\r\n            <AuthRoute path=\"/course/:id_gaya_belajar/:id_course/materi/:id_materi/assessment\">\r\n                <AssessmentPage changePage={history.push} backToPrevious={history.goBack} />\r\n            </AuthRoute>\r\n            <AuthRoute path=\"/course/:id_gaya_belajar/:id_course/materi/:id_materi\">\r\n                <MateriSlide changePage={history.push} backToPrevious={history.goBack} />\r\n            </AuthRoute>\r\n            <AuthRoute path=\"/course/:id_gaya_belajar/:id_course\">\r\n                <Matkul changePage={history.push} backToPrevious={history.goBack} />\r\n            </AuthRoute>\r\n            <Route path=\"/500-error\">\r\n                <h1>Error 500</h1>\r\n            </Route>\r\n            <Route path=\"/404-error\">\r\n                <h1>Error 404</h1>\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Dashboard changePage={history.push} backToPrevious={history.goBack} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}","D:\\Arnas\\Code\\skripz\\src\\components\\appbar.js",["225","226","227"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { Grid, Button, Menu, MenuItem, Avatar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    separator: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Appbar(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function handleClickBeranda() {\r\n        props.changePage(\"/\")\r\n    }\r\n\r\n    const classes = useStyles();\r\n    //TODO : https://medium.com/better-programming/making-a-basic-header-responsive-with-materialui-and-react-2198fac923c8\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar >\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" style={{ flexGrow: 0.1 }}>\r\n                        Skripz\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Beranda</Button>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Tentang</Button>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>FAQ</Button>\r\n                    <div className={classes.separator} />\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{ backgroundColor: \"white\" }}\r\n                            disableElevation\r\n                            startIcon={<Avatar>A</Avatar>}\r\n                            endIcon={<KeyboardArrowDownIcon />}\r\n                            onClick={handleClick}\r\n                        >\r\n                            <b style={{ color: '#3D7DCA' }} >Fulan Bin Fulan</b>\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"appbar-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            getContentAnchorEl={null}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem onClick={handleClose}>Profil</MenuItem>\r\n                            <MenuItem onClick={handleClose}>Pengaturan</MenuItem>\r\n                            <MenuItem onClick={handleClose}>Keluar</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <NotificationsIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Appbar };","D:\\Arnas\\Code\\skripz\\src\\components\\PDFViewer.js",["228","229","230","231"],"import React, { useState } from \"react\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport { Box, Grid, IconButton, Paper, Card, CardActionArea, Avatar, } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport useWindowDimensions from '../utils/WindowDimension';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nfunction PDFViewer(props) {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1); //setting 1 to show fisrt page\r\n\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n    }\r\n\r\n    function changePage(offset) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n    }\r\n\r\n    function previousPage() {\r\n        changePage(-1);\r\n    }\r\n\r\n    function nextPage() {\r\n        changePage(1);\r\n    }\r\n\r\n    const { pdf } = props;\r\n\r\n    return (\r\n        <>\r\n            <Document\r\n                file={pdf}\r\n                onLoadSuccess={onDocumentLoadSuccess}\r\n\r\n            >\r\n                <Page pageNumber={pageNumber} />\r\n            </Document>\r\n            <div>\r\n                <p>\r\n                    Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\r\n                </p>\r\n                <button type=\"button\" disabled={pageNumber <= 1} onClick={previousPage}>\r\n                    Previous\r\n        </button>\r\n                <button\r\n                    type=\"button\"\r\n                    disabled={pageNumber >= numPages}\r\n                    onClick={nextPage}\r\n                >\r\n                    Next\r\n        </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction PDFViewerExample(props) {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [renderedPageNumber, setRenderedPageNumber] = useState(null);\r\n    const { height, width } = useWindowDimensions();\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n    }\r\n\r\n    function changePage(offset) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n    }\r\n\r\n    function previousPage() {\r\n        changePage(-1);\r\n    }\r\n\r\n    function nextPage() {\r\n        changePage(1);\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        setPageNumber(i);\r\n    }\r\n    const isLoading = renderedPageNumber !== pageNumber;\r\n    const { pdf } = props;\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\">\r\n                <Grid item xs style={{ padding: '20px 20px' }}>\r\n                    <Grid container\r\n                        spacing={2}\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        alignContent=\"center\"\r\n                        style={{ padding: '12px' }}\r\n                    >\r\n                        <Grid item>\r\n                            <h4 style={{ margin: 0 }}>Daftar topik</h4>\r\n\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <p style={{ margin: 0, fontSize: '12px', color: '#8F8F8F' }}>Bantuan : Klik pada topik untuk loncat ke topik pada slides</p>\r\n                        </Grid>\r\n                        {props.chapterList === undefined ?\r\n                            <Grid item style={{ width: '100%' }}>\r\n                                <Card style={{ backgroundColor: '#6e6d6a' }}>\r\n                                    <CardActionArea >\r\n                                        <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"center\" >\r\n                                            <Grid item>\r\n                                                <h4 style={{ color: 'white' }}>Daftar Topik tidak tersedia</h4>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                            :\r\n                            props.chapterList.map((chapter, i) => {\r\n                                let chapterData = chapter.split(\"-\")\r\n                                return (\r\n                                    <Grid item style={{ width: '100%' }}>\r\n                                        <Card style={{ backgroundColor: '#3D7DCA' }}>\r\n                                            <CardActionArea onClick={() => { handleClick(parseInt(chapterData[0])) }}>\r\n                                                <Grid container direction=\"row\" spacing={0} alignItems=\"center\"  >\r\n                                                    <Grid item style={{ padding: '6px' }}>\r\n                                                        <h4 style={{ color: 'white' }}>{i + 1 + \". \" + chapterData[1]}</h4>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </Grid>);\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={9} style={{ padding: '20px 20px' }}>\r\n                    <Box >\r\n                        <Box elevation={0} style={{ backgroundColor: \"#6e6d6a\" }}>\r\n                            <Grid container justify=\"center\" alignItems=\"center\" >\r\n                                <Grid item>\r\n                                    <IconButton onClick={previousPage} disabled={pageNumber <= 1}>\r\n                                        <ArrowBackIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <p style={{ color: \"white\", margin: 0 }}>\r\n                                        {pageNumber || (numPages ? 1 : \"--\")} / {numPages || \"--\"}\r\n                                    </p>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <IconButton onClick={nextPage} disabled={pageNumber >= numPages}>\r\n                                        <ArrowForwardIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n\r\n                        <Grid container justify=\"center\" alignItems=\"center\" style={{ backgroundColor: \"#C4C4C4\" }}>\r\n                            <Grid item>\r\n                                <Box overflow=\"auto\" style={{ maxWidth: '65vw' }}>\r\n                                    <Document file={pdf} onLoadSuccess={onDocumentLoadSuccess} onLoadError={console.error}\r\n                                    >\r\n                                        {isLoading && renderedPageNumber ? (\r\n                                            <Page\r\n                                                key={renderedPageNumber}\r\n                                                className=\"prevPage\"\r\n                                                pageNumber={renderedPageNumber}\r\n                                                width={0.45 * width}\r\n                                            />\r\n                                        ) : null}\r\n                                        <Page\r\n                                            key={pageNumber}\r\n                                            pageNumber={pageNumber}\r\n                                            onRenderSuccess={() => setRenderedPageNumber(pageNumber)}\r\n                                            width={0.45 * width}\r\n                                        />\r\n                                    </Document>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nfunction PDFViewerExampleSequential(props) {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [renderedPageNumber, setRenderedPageNumber] = useState(null);\r\n    const { height, width } = useWindowDimensions();\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n    }\r\n\r\n    function changePage(offset) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n        props.chapterCheckList[pageNumber + offset] = true;\r\n    }\r\n\r\n    function previousPage() {\r\n        changePage(-1);\r\n    }\r\n\r\n    function nextPage() {\r\n        changePage(1);\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        setPageNumber(i);\r\n        props.chapterCheckList[i] = true;\r\n    }\r\n    const isLoading = renderedPageNumber !== pageNumber;\r\n    const { pdf } = props;\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\">\r\n                <Grid item xs style={{ padding: '20px 20px' }}>\r\n                    <Grid container\r\n                        spacing={2}\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        alignContent=\"center\"\r\n                        style={{ padding: '12px' }}\r\n                    >\r\n                        <Grid item>\r\n                            <h4 style={{ margin: 0 }}>Daftar topik</h4>\r\n\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <p style={{ margin: 0, fontSize: '12px', color: '#8F8F8F' }}>Bantuan : Klik pada topik untuk loncat ke topik pada slides</p>\r\n                        </Grid>\r\n                        {props.chapterList === undefined ?\r\n                            <Grid item style={{ width: '100%' }}>\r\n                                <Card style={{ backgroundColor: '#6e6d6a' }}>\r\n                                    <CardActionArea >\r\n                                        <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"center\" >\r\n                                            <Grid item>\r\n                                                <h4 style={{ color: 'white' }}>Daftar Topik tidak tersedia</h4>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                            :\r\n                            props.chapterList.map((chapter, i) => {\r\n                                let chapterData = chapter.split(\"-\")\r\n                                return (\r\n                                    <Grid item style={{ width: '100%' }}>\r\n                                        <Card style={\r\n                                            props.chapterCheckList[parseInt(chapterData[0])] ?\r\n                                                { backgroundColor: '#3D7DCA' } :\r\n                                                { backgroundColor: '#7c7e82' }\r\n\r\n                                        }>\r\n                                            <CardActionArea onClick={\r\n                                                props.chapterCheckList[parseInt(chapterData[0])] ?\r\n                                                    () => { handleClick(parseInt(chapterData[0])) }\r\n                                                    :\r\n                                                    () => { }\r\n\r\n                                            }>\r\n                                                <Grid container direction=\"row\" spacing={0} alignItems=\"center\"  >\r\n                                                    <Grid item style={{ padding: '6px' }}>\r\n                                                        <h4 style={{ color: 'white' }}>{i + 1 + \". \" + chapterData[1]}</h4>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </Grid>);\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={9} style={{ padding: '20px 20px' }}>\r\n                    <Box >\r\n                        <Box elevation={0} style={{ backgroundColor: \"#6e6d6a\" }}>\r\n                            <Grid container justify=\"center\" alignItems=\"center\" >\r\n                                <Grid item>\r\n                                    <IconButton onClick={previousPage} disabled={pageNumber <= 1}>\r\n                                        <ArrowBackIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <p style={{ color: \"white\", margin: 0 }}>\r\n                                        {pageNumber || (numPages ? 1 : \"--\")} / {numPages || \"--\"}\r\n                                    </p>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <IconButton onClick={nextPage} disabled={pageNumber >= numPages}>\r\n                                        <ArrowForwardIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n\r\n                        <Grid container justify=\"center\" alignItems=\"center\" style={{ backgroundColor: \"#C4C4C4\" }}>\r\n                            <Grid item>\r\n                                <Box overflow=\"auto\" style={{ maxWidth: '65vw' }}>\r\n                                    <Document file={pdf} onLoadSuccess={onDocumentLoadSuccess} onLoadError={console.error}\r\n                                    >\r\n                                        {isLoading && renderedPageNumber ? (\r\n                                            <Page\r\n                                                key={renderedPageNumber}\r\n                                                className=\"prevPage\"\r\n                                                pageNumber={renderedPageNumber}\r\n                                                width={0.45 * width}\r\n                                            />\r\n                                        ) : null}\r\n                                        <Page\r\n                                            key={pageNumber}\r\n                                            pageNumber={pageNumber}\r\n                                            onRenderSuccess={() => setRenderedPageNumber(pageNumber)}\r\n                                            width={0.45 * width}\r\n                                        />\r\n                                    </Document>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport { PDFViewer, PDFViewerExample, PDFViewerExampleSequential };","D:\\Arnas\\Code\\skripz\\src\\pages\\home.js",["232","233","234","235"],"D:\\Arnas\\Code\\skripz\\src\\App.js",["236","237"],"import React from \"react\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AppSwitch } from \"./routes\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, pink } from \"@material-ui/core/colors\";\nimport './index.css';\n\nfunction App() {\n  const theme = createMuiTheme({\n    overrides: {\n      MuiButton: {\n        root: {\n          borderRadius: 25,\n        },\n      },\n    },\n    palette: {\n      primary: {\n        main: '#5D97DB'\n      },\n      secondary: {\n        main: '#3D7DCA'\n      },\n    },\n  });\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <AppSwitch />\n      </Router>\n    </ThemeProvider>\n\n    /* <Router>\n    <AppSwitch/>\n    </Router> */\n  );\n}\n\nexport default App;","D:\\Arnas\\Code\\skripz\\src\\reportWebVitals.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\DashboardPage.js",["238","239","240","241"],"import React, { useState, useEffect } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { InputBase, Grid, Paper, Avatar, Card, CardActionArea, CircularProgress } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Appbar } from '../components/Appbar';\r\nimport { userService } from '../utils/UserService';\r\nimport AnnouncementCard from '../components/AnnouncementCard';\r\nimport APIUtility from '../utils/APIUtility';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.55),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.75),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Dashboard(props) {\r\n\r\n  const classes = useStyles();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [courses, setCourses] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n\r\n  function handleClick(pk, gayaBelajar) {\r\n    props.changePage(\"/course/\" + gayaBelajar + \"/\" + pk)\r\n  }\r\n\r\n  const changeSearch = (props) => (event) => {\r\n    setSearch(event.target.value);\r\n  }\r\n\r\n  const enterSearch = (event) => {\r\n    if (event.keyCode === 13) {\r\n      console.log(search)\r\n      props.changePage(\"/search/q/\" + search)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (courses.length == 0 && userService.getLocalData() != null) {\r\n      console.log(\"fetching courses\")\r\n      APIUtility.get('/api/course/get/', {}).then((response) => {\r\n        let coursesJSON = JSON.parse(response.data.model)\r\n\r\n        setCourses(coursesJSON);\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Appbar changePage={props.changePage} />\r\n\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ backgroundColor: '#3D7DCA', minHeight: '30vh', marginTop: '60px' }}\r\n        >\r\n\r\n          {userService.getLocalData() != null ?\r\n            <Grid item xs={12} >\r\n              <h2 style={{ color: 'white' }}>\r\n                {userService.getLocalData() != null ? 'Halo ' + userService.getName().split(' ')[0] + ', mau belajar apa hari ini ?' : ''}\r\n              </h2>\r\n            </Grid>\r\n            :\r\n            <>\r\n              <Grid item xs={12} >\r\n                <h2 style={{ color: 'white', margin: 0 }} > EasyLearning</h2>\r\n              </Grid>\r\n              <Grid item xs={12} >\r\n                <h4 style={{ color: 'white', marginTop: 0 }}> E-Learning yang sesuai dengan kebutuhanmu</h4>\r\n              </Grid>\r\n            </>\r\n          }\r\n\r\n\r\n          <Grid item xs={3} >\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                value={search}\r\n                onChange={changeSearch('search')}\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                onKeyDown={enterSearch}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          style={{ margin: '30px 0px' }}\r\n        >\r\n          <Grid item xs={2} style={{ margin: '0px 8px' }}>\r\n            <Paper>\r\n              <Grid container\r\n                spacing={2}\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                style={{ padding: '12px' }}\r\n              >\r\n                <Grid item>\r\n                  <h3 style={{ margin: 0 }}>Mata Kuliah Tersedia</h3>\r\n                </Grid>\r\n                {isLoading ?\r\n                  <Grid item>\r\n                    <p style={{ color: 'gray' }}>Tidak ada Mata Kuliah Tersedia untuk saat ini. </p><p style={{ color: 'gray' }}>Silahkan Login atau cari mata kuliah terkait dan bergabung di kelasnya.</p>\r\n                  </Grid>\r\n                  :\r\n                  courses.length == 0 ?\r\n                    <Grid item>\r\n                      <p style={{ color: 'gray' }}>Tidak ada Mata Kuliah Tersedia untuk saat ini. </p><p style={{ color: 'gray' }}>Silahkan Login atau cari mata kuliah terkait dan bergabung di kelasnya.</p>\r\n                    </Grid>\r\n                    :\r\n                    <>\r\n                      {courses.map((course, i) => {\r\n                        return (\r\n                          <>\r\n                            <Grid item>\r\n                              <Card style={{ backgroundColor: '#3D7DCA' }}>\r\n                                <CardActionArea onClick={() => { handleClick(course.pk, \"A\") }}>\r\n                                  <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"space-around\" >\r\n                                    <Grid item>\r\n                                      <Avatar>{course.fields.name.split(\" \")[0][0]}</Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                      <h4 style={{ color: 'white' }}>{course.fields.name + \" A\"}</h4>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </CardActionArea>\r\n                              </Card>\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                              <Card style={{ backgroundColor: '#3D7DCA' }}>\r\n                                <CardActionArea onClick={() => { handleClick(course.pk, \"B\") }}>\r\n                                  <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"space-around\" >\r\n                                    <Grid item>\r\n                                      <Avatar>{course.fields.name.split(\" \")[0][0]}</Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                      <h4 style={{ color: 'white' }}>{course.fields.name + \" B\"}</h4>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </CardActionArea>\r\n                              </Card>\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                              <Card style={{ backgroundColor: '#3D7DCA' }}>\r\n                                <CardActionArea onClick={() => { handleClick(course.pk, \"C\") }}>\r\n                                  <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"space-around\" >\r\n                                    <Grid item>\r\n                                      <Avatar>{course.fields.name.split(\" \")[0][0]}</Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                      <h4 style={{ color: 'white' }}>{course.fields.name + \" C\"}</h4>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </CardActionArea>\r\n                              </Card>\r\n                            </Grid>\r\n                          </>\r\n\r\n                        );\r\n                      })}\r\n                    </>\r\n                }\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} style={{ margin: '0px 8px' }}>\r\n            <Paper>\r\n              <Grid container\r\n                spacing={2}\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                style={{ padding: '12px' }}\r\n              >\r\n                <Grid item>\r\n                  <h3 style={{ margin: 0 }}>Pengumuman</h3>\r\n                </Grid>\r\n                <Grid item style={{ margin: '6px 0px' }}>\r\n                  <AnnouncementCard\r\n                    Title={'Selamat datang di EasyLearning !'}\r\n                    Author={'Ariq Naufal Satria'}\r\n                    Text={\"Dear seluruh mahasiswa<br><br>Selamat datang di platform *e-Learning* EasyLearning! <br>Platform ini menawarkan pengalaman menggunakan *e-Learning* yang berbeda dan diharapkan lebih baik dari sebelumnya. Silahkan pelajari dan gunakan platform ini sebaik-baiknya.<br><br>Demikian informasi ini disampaikan,<br>**Tim pengembang EasyLearning**\"} />\r\n                </Grid>\r\n\r\n                <Grid item style={{ margin: '6px 0px' }}>\r\n                  <AnnouncementCard\r\n                    Title={'Pembukaan kelas Sistem Interaksi'}\r\n                    Author={'Andi Setiawan'}\r\n                    Text={\"Dear seluruh mahasiswa<br><br> Diberitahukan bahwa kelas Sistem Interaksi telah dibuka di platform EasyLearning. Silahkan lihat kelasnya pada daftar kelas yang tersedia. Selama masa pembukaan kelas Sistem Interaksi akan dibuka untuk seluruh mahasiswa. Seluruh mahasiswa juga dipersilahkan untuk membaca materi yang ada disana.<br><br>Demikian informasi ini disampaikan,<br> **Tim dosen dan Asdos Sister**\"} />\r\n                </Grid>\r\n                <Grid item style={{ margin: '6px 0px' }}>\r\n                  <AnnouncementCard\r\n                    Title={'Kuis I Bab 1 Metodologi Penelitian dan Penulisan Ilmiah sudah dibuka ! '}\r\n                    Author={'Zaki Marzuki'}\r\n                    Text={\"Dear seluruh mahasiswa kelas MPPI <br><br> Diberitahukan bahwa jadwal kuis perdana kita untuk semester ini sudah dipublikasikan. Silahkan persiapkan diri anda dan jangan lupa mempelajari materi Bab 1-5. Mahasiswa juga dipersilahkan untuk membuat catatan untuk digunakan saat mengerjakan kuis. Informasi selanjutnya dapat dilihat pada halaman kelas MPPI.<br><br>Demikian informasi ini disampaikan,<br>**Tim dosen dan Asdos MPPI**\"} />\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Dashboard };","D:\\Arnas\\Code\\skripz\\src\\pages\\LoginSuccessPage.js",["242","243","244","245","246"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { userService } from '../utils/UserService';\r\nimport APIUtility from '../utils/APIUtility';\r\n\r\nfunction LoginSuccess(props) {\r\n    const [isVerified, setIsVerified] = useState(false);\r\n    const handleClick = () => {\r\n        APIUtility.get('/sample-restricted').then((response) => {\r\n            console.log(response)\r\n        });\r\n    }\r\n    const handleClick3 = () => {\r\n        console.log(userService.getProfile());\r\n    }\r\n    const handleClick2 = () => {\r\n        userService.logout();\r\n    }\r\n    const { token } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (isVerified) {\r\n            return;\r\n        }\r\n        console.log(\"verifying..\");\r\n        userService.login(token).then(value => {\r\n            if (value) {\r\n                setIsVerified(true)\r\n                props.changePage(\"/\")\r\n            }\r\n        })\r\n\r\n\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{ minHeight: '100vh' }}\r\n            >\r\n\r\n                <Grid item xs={3} >\r\n                    {/* <h1 style={{ color: 'black' }}>\r\n                        {token}\r\n                    </h1> */}\r\n                    {isVerified ?\r\n                        <h1>Selamat Datang {userService.getName()}!</h1>\r\n                        :\r\n                        <p>Verifying...</p>\r\n                    }\r\n                    {/* <Button variant=\"contained\" onClick={handleClick}>\r\n                        Verify\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={handleClick3}>\r\n                        Profile\r\n                    </Button>\r\n\r\n                    <Button variant=\"contained\" onClick={handleClick2}>\r\n                        clear\r\n                    </Button> */}\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { LoginSuccess };","D:\\Arnas\\Code\\skripz\\src\\pages\\MateriSlide.js",["247","248","249","250","251","252","253","254","255","256"],"D:\\Arnas\\Code\\skripz\\src\\pages\\MatkulPage.js",["257","258","259","260","261","262","263","264","265"],"import React, { useState, useEffect } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { CardMedia, Grid, Button, } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { Appbar } from '../components/Appbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MateriCard from '../components/MateriCard';\r\nimport { useParams } from 'react-router-dom';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport APIUtility from '../utils/APIUtility';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: '#E5E5E5',\r\n        minHeight: '100vh'\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    media: {\r\n        width: 130,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.55),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.75),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nfunction Matkul(props) {\r\n    const { id_gaya_belajar, id_course } = useParams();\r\n    const classes = useStyles();\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isLoadingMaterial, setIsLoadingMaterial] = useState(true);\r\n    const [course, setCourse] = useState({\r\n        'code': '',\r\n        'name': '',\r\n        'aliasName': '',\r\n        'intro': '',\r\n        'description': '',\r\n        'links': '',\r\n    });\r\n\r\n    const [material, setMaterial] = useState([]);\r\n\r\n    // console.log(\"welcome to matkul id \")\r\n    // console.log(id_course)\r\n    function openSilabus() {\r\n        window.location.replace(\"https://\" + course.links.silabus);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (course['code'] == '') {\r\n            APIUtility.get('/api/course/' + id_course, {}).then((response) => {\r\n                let courseJSON = JSON.parse(response.data.model)\r\n                // console.log(courseJSON)\r\n                let courseObject = {\r\n                    'code': courseJSON[0]['fields']['code'],\r\n                    'name': courseJSON[0]['fields']['name'],\r\n                    'aliasName': courseJSON[0]['fields']['aliasName'],\r\n                    'intro': courseJSON[0]['fields']['intro'],\r\n                    'description': courseJSON[0]['fields']['description'],\r\n                    'links': JSON.parse(courseJSON[0]['fields']['links']),\r\n                };\r\n                // console.log(courseObject);\r\n                setCourse(courseObject);\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n\r\n        if (material.length == 0) {\r\n            console.log(\"fetching material\")\r\n            APIUtility.get('/api/material/get-by-course/' + id_course, {}).then((response) => {\r\n                let materialsJSON = JSON.parse(response.data.materials)\r\n\r\n                console.log(materialsJSON);\r\n                materialsJSON.sort((a, b) => (a.pk > b.pk) ? 1 : ((b.pk > a.pk) ? -1 : 0))\r\n                setMaterial(materialsJSON);\r\n            });\r\n            setIsLoadingMaterial(false);\r\n        }\r\n    }, [])\r\n\r\n\r\n    if (isLoading) {\r\n        return (<>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ minHeight: '100vh', marginTop: '60px', padding: '30px 0px' }}\r\n                >\r\n                    <Grid item>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </>);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"row\"\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ backgroundColor: '#3D7DCA', minHeight: '30vh', marginTop: '60px', padding: '30px 0px' }}\r\n                >\r\n                    <Grid item xs={2}>\r\n                        <Grid container spacing={3} alignItems=\"center\"\r\n                            justify=\"center\" direction=\"column\">\r\n                            <Grid item>\r\n                                {course.links == '' ?\r\n                                    <Skeleton width={100} height={100} variant=\"circle\" animation=\"wave\" />\r\n                                    : <CardMedia\r\n                                        className={classes.media}\r\n                                        image={course.links.icon}\r\n                                    />}\r\n\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {course.links == '' ?\r\n                                    <div >\r\n                                        <Skeleton width={120} height={40} variant=\"rect\" animation=\"wave\" />\r\n                                    </div>\r\n\r\n                                    : <Button variant=\"contained\"\r\n                                        style={{ backgroundColor: \"white\" }}\r\n                                        onClick={openSilabus}\r\n                                        disableElevation>Lihat Silabus</Button>}\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Grid container spacing={1} direction=\"column\">\r\n                            <Grid item>\r\n                                {course.name == '' ?\r\n                                    <Skeleton variant=\"text\" />\r\n                                    : <b style={{ color: 'white', fontSize: '36px' }} >{course.name}</b>\r\n                                }\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {course.intro == '' ?\r\n                                    <Skeleton variant=\"text\" />\r\n                                    : <b style={{ color: 'white', fontSize: '18px' }} >{course.intro}</b>\r\n                                }\r\n                            </Grid>\r\n                            <Grid item style={{ color: 'white' }}>\r\n                                <Typography variant=\"body\" color=\"white\" component=\"p\">\r\n                                    {course.description == '' ?\r\n                                        <Skeleton variant=\"text\" />\r\n                                        : <>{course.description}</>\r\n                                    }\r\n\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {isLoadingMaterial ?\r\n                    <Grid container spacing={1} style={{ minHeight: '30vh', maxWidth: \"100%\", padding: \"16px 160px\" }}>\r\n                        <Grid item>\r\n                            <CircularProgress />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    :\r\n                    id_gaya_belajar == \"A\" ?\r\n                        <>\r\n                            <Grid container justify=\"center\"\r\n                                spacing={1} style={{ minHeight: '30vh', maxWidth: \"100%\", padding: \"16px 160px\" }}>\r\n                                {material.map((materi, i) => {\r\n                                    const links = JSON.parse(materi.fields.links)\r\n                                    return (\r\n                                        <>\r\n                                            <Grid item>\r\n                                                <MateriCard\r\n                                                    changePage={props.changePage}\r\n                                                    gayaBelajar={id_gaya_belajar}\r\n                                                    number={i + 1}\r\n                                                    image={links['link-list'][0].split(\"-\")[1]}\r\n                                                    courseId={id_course}\r\n                                                    materiID={materi.pk}\r\n                                                    judul={materi.fields.name}\r\n                                                    description={materi.fields.description}\r\n                                                />\r\n                                            </Grid>\r\n                                        </>\r\n                                    );\r\n                                })}\r\n                            </Grid>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Grid container direction='column'\r\n                                justify=\"center\" alignItems=\"center\" spacing={1} style={{ minHeight: '30vh', maxWidth: \"100%\", padding: \"16px 160px\" }}\r\n                            >\r\n                                {material.map((materi, i) => {\r\n                                    const links = JSON.parse(materi.fields.links)\r\n                                    return (\r\n                                        <>\r\n                                            <Grid item >\r\n                                                <MateriCard\r\n                                                    changePage={props.changePage}\r\n                                                    gayaBelajar={id_gaya_belajar}\r\n                                                    number={i + 1}\r\n                                                    isLong={true}\r\n                                                    image={links['link-list'][0].split(\"-\")[1]}\r\n                                                    courseId={id_course}\r\n                                                    materiID={materi.pk}\r\n                                                    judul={materi.fields.name}\r\n                                                    description={materi.fields.description}\r\n                                                />\r\n                                            </Grid>\r\n                                        </>\r\n                                    );\r\n                                })}\r\n                            </Grid>\r\n                        </>\r\n\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Matkul };","D:\\Arnas\\Code\\skripz\\src\\pages\\PreQuizPage.js",["266","267"],"D:\\Arnas\\Code\\skripz\\src\\components\\Appbar.js",["268","269","270"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { Grid, Button, Menu, MenuItem, Avatar } from '@material-ui/core';\r\nimport { userService } from '../utils/UserService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    separator: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Appbar(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [isLogin, setIsLogin] = useState(userService.getLocalData() != null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function handleClickBeranda() {\r\n        props.changePage(\"/\");\r\n    }\r\n\r\n    function handleClickLogout() {\r\n        setAnchorEl(null);\r\n        props.changePage(\"/logout\")\r\n    }\r\n\r\n    const handleClickLogin = () => {\r\n        window.location.replace(\"http://localhost:8000/login/\");\r\n    }\r\n\r\n    const classes = useStyles();\r\n    //TODO : https://medium.com/better-programming/making-a-basic-header-responsive-with-materialui-and-react-2198fac923c8\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar >\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" style={{ flexGrow: 0.1 }}>\r\n                        Easy-Learning\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Beranda</Button>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Tentang</Button>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Panduan</Button>\r\n                    <div className={classes.separator} />\r\n                    <div>\r\n                        {!isLogin ?\r\n                            <Button color=\"inherit\" onClick={handleClickLogin}>Login</Button>\r\n                            :\r\n                            <>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={{ backgroundColor: \"white\" }}\r\n                                    disableElevation\r\n                                    startIcon={<Avatar>{userService.getName().split(\" \")[0][0]}</Avatar>}\r\n                                    endIcon={<KeyboardArrowDownIcon />}\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    <b style={{ color: '#3D7DCA' }} >{userService.getName()}</b>\r\n                                </Button>\r\n                                <Menu\r\n                                    id=\"appbar-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    getContentAnchorEl={null}\r\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem onClick={handleClose}>Profil</MenuItem>\r\n                                    <MenuItem onClick={handleClose}>Pengaturan</MenuItem>\r\n                                    <MenuItem onClick={handleClickLogout}>Keluar</MenuItem>\r\n                                </Menu>\r\n                            </>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <NotificationsIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Appbar };\r\n","D:\\Arnas\\Code\\skripz\\src\\pages\\Home.js",["271","272","273","274"],"D:\\Arnas\\Code\\skripz\\src\\utils\\UserService.js",["275"],"import { authHeader } from \"./AuthHeader\";\r\nimport APIUtility from \"./APIUtility\";\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    getLocalData,\r\n    getName,\r\n    getProfile,\r\n    getLearningModel,\r\n}\r\n\r\nfunction login(token) {\r\n    let user = localStorage.getItem('user');\r\n    console.log(user)\r\n    if (!user) {\r\n        let userObject = {\r\n            token: token,\r\n        };\r\n        localStorage.setItem(\"user\", JSON.stringify(userObject));\r\n    }\r\n    return APIUtility.get(\"/profile\")\r\n        .then(function (response) {\r\n            const profile = JSON.parse(response.data['profile'])\r\n            localStorage.setItem('profile', JSON.stringify(profile[0]))\r\n            console.log(\"===?\")\r\n            console.log(response)\r\n            return response.data;\r\n        }).catch(function (error) {\r\n\r\n            localStorage.removeItem(\"user\");\r\n            console.log(error.message);\r\n            console.log(\"removing user\");\r\n            window.location.replace(\"/500-error\");\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"profile\");\r\n    console.log(\"removing user\");\r\n    console.log(\"removing profile\");\r\n    console.log('success logout');\r\n}\r\n\r\nfunction getLocalData() {\r\n    return localStorage.getItem(\"user\");\r\n}\r\n\r\nfunction getProfile() {\r\n    return JSON.parse(localStorage.getItem(\"profile\"));\r\n}\r\n\r\nfunction getName() {\r\n    return JSON.parse(localStorage.getItem(\"profile\"))['fields']['name'];\r\n}\r\n\r\nfunction getLearningModel() {\r\n    return JSON.parse(localStorage.getItem(\"profile\"))['fields']['learning_model'];\r\n}","D:\\Arnas\\Code\\skripz\\src\\utils\\APIUtility.js",["276"],"import axios from \"axios\";\r\nimport { authHeader } from \"./AuthHeader\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:8000/\",\r\n    responseType: \"json\",\r\n    headers: {\r\n        ...authHeader(),\r\n        \"Accept\": \"application/json\",\r\n    },\r\n});\r\n\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n    const token = authHeader().Authorization;\r\n    config.headers.Authorization = token;\r\n\r\n    return config;\r\n})\r\n\r\ninstance.interceptors.response.use(function (response) {\r\n    return response;\r\n}, function (error) {\r\n    try {\r\n        if (error.response.status == 500) {\r\n            window.location.replace(\"/500-error\");\r\n        }\r\n    } catch {\r\n        window.location.replace(\"/404-error\");\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default instance;","D:\\Arnas\\Code\\skripz\\src\\utils\\AuthHeader.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\Logout.js",[],"D:\\Arnas\\Code\\skripz\\src\\components\\AnnouncementCard.js",["277","278"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Avatar, Typography, Link } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport MarkdownView from 'react-showdown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: '100%'\r\n    },\r\n    media: {\r\n        width: 180,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function AnnouncementCard(props) {\r\n    const { Title, Author, Text, TimeStamp } = props;\r\n\r\n    const preventDefault = (event) => event.preventDefault();\r\n\r\n    return (\r\n        <Paper>\r\n            <Grid container direction=\"row\" spacing={2} style={{ padding: '12px' }} alignItems=\"flex-start\" alignContent=\"center\" >\r\n                <Grid item xs={1}>\r\n                    <Avatar>{Author[0]}</Avatar>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {Title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <b>{Author}</b>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <MarkdownView\r\n                                markdown={Text}\r\n                                options={{ tables: true, emoji: true }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        <Grid item>\r\n\r\n                            <Link style={{ color: '#8F8F8F' }} href=\"#\" onClick={preventDefault}>\r\n                                <b >Lihat selengkapnya</b>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n","D:\\Arnas\\Code\\skripz\\src\\pages\\WriteThreadPage.js",["279","280","281","282","283","284","285"],"D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadListPage.js",["286","287","288","289","290","291","292"],"D:\\Arnas\\Code\\skripz\\src\\components\\ThreadCard.js",["293"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Avatar, Typography, Link, Button } from '@material-ui/core';\r\nimport MarkdownView from 'react-showdown';\r\nimport { red } from '@material-ui/core/colors';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Moment from 'react-moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: '100%'\r\n    },\r\n    media: {\r\n        width: 180,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function ThreadCard(props) {\r\n    const { Title, Author, Text, TimeStamp, isOutlined, isPreview, id_gaya_belajar, id_course, id_materi, id_post, isThreadStarter, isEditable } = props;\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/details/\" + id_post);\r\n    };\r\n\r\n    const handleEdit = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/edit/\" + id_post);\r\n    };\r\n\r\n    const handleComment = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/\" + id_post + \"/reply/new\");\r\n    }\r\n\r\n    return (\r\n        <Paper variant={isOutlined ? \"outlined\" : \"\"}>\r\n            <Grid container direction=\"row\" spacing={2} style={{ padding: '12px' }} alignItems=\"flex-start\" alignContent=\"center\" >\r\n                <Grid item xs={1}>\r\n                    <Avatar>{Author[0]}</Avatar>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography style={{ margin: '0px' }} variant=\"h6\" gutterBottom>\r\n                                <b>{Title}</b>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <p style={{ margin: '0px', color: '#8F8F8F' }}>{Author} - <Moment format=\"DD MMM YYYY hh:mm\" >{TimeStamp}</Moment></p>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <MarkdownView\r\n                                markdown={Text}\r\n                                options={{ tables: true, emoji: true }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        {isPreview ?\r\n                            <Grid item>\r\n                                <Grid container direction=\"row\" spacing={2}>\r\n                                    <Grid item>\r\n                                        <Link style={{ color: '#5D97DB' }} href='' onClick={handleClick}>\r\n                                            <b >Lihat selengkapnya</b>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    {isEditable ? <Grid item>\r\n                                        <Link style={{ color: '#bdbdbd' }} href='' onClick={handleEdit}>\r\n                                            <b >Edit</b>\r\n                                        </Link>\r\n                                    </Grid> : <></>}\r\n\r\n                                </Grid>\r\n\r\n                            </Grid> : <> </>}\r\n                        {isThreadStarter ?\r\n                            <Grid item>\r\n                                <Grid container direction=\"row\" spacing={2} alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Link style={{ color: '#8F8F8F' }}  >\r\n                                            <Button style={{ width: '100%' }} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\" onClick={handleComment}>Komentar</Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    {isEditable ? <Grid item>\r\n                                        <Link style={{ color: '#bdbdbd' }} href='' onClick={handleEdit}>\r\n                                            <b >Edit</b>\r\n                                        </Link>\r\n                                    </Grid> : <></>}\r\n                                </Grid>\r\n                            </Grid> : <></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n","D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadPage.js",["294","295","296","297","298","299","300","301","302"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, Card, Snackbar } from '@material-ui/core';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { Appbar } from '../components/Appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport * as Showdown from \"showdown\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'react-mde/lib/styles/css/react-mde-all.css';\r\nimport ThreadReplyCard from '../components/ThreadReplyCard';\r\nimport ThreadCard from '../components/ThreadCard';\r\nimport APIUtility from '../utils/APIUtility';\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { userService } from '../utils/UserService';\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n}));\r\n\r\nfunction ThreadPage(props) {\r\n\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const { id_gaya_belajar, id_course, id_materi, id_thread } = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [replies, setReplies] = useState(null);\r\n    const [isLoadingReplies, setIsLoadingReplies] = useState(true);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(query.get('state') != undefined);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [listBreadCrumb, setListBreadCrumb] = useState(\r\n        [\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course, name: \"Sistem Interaksi\" },\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi, name: \"Materi\" },\r\n            { color: \"primary\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread\", name: \"Forum Diskusi\" },\r\n        ]\r\n    );\r\n\r\n    function handleClick() {\r\n        props.changePage(\"/thread/new\")\r\n    }\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    const converter = new Showdown.Converter({\r\n        tables: true,\r\n        simplifiedAutoLink: true,\r\n        strikethrough: true,\r\n        tasklists: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (post === null) {\r\n            APIUtility.get('/api/post/' + id_thread, {}).then((response) => {\r\n                let postJSON = JSON.parse(response.data.model)\r\n                let postObject = {\r\n                    'pk': postJSON[0]['pk'],\r\n                    'material': postJSON[0]['fields']['material'],\r\n                    'profile': postJSON[0]['fields']['profile'],\r\n                    'author_name': postJSON[0]['fields']['author_name'],\r\n                    'title': postJSON[0]['fields']['title'],\r\n                    'body': postJSON[0]['fields']['body'],\r\n                    'category': postJSON[0]['fields']['category'],\r\n                    'date': postJSON[0]['fields']['date'],\r\n                    'last_modified': postJSON[0]['fields']['last_modified'],\r\n                };\r\n                setPost(postObject)\r\n                // console.log(postObject)\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n\r\n        if (replies === null) {\r\n            APIUtility.get('/api/reply/get-by-post/' + id_thread, {}).then((response) => {\r\n                console.log(response.data)\r\n                let repliesJSON = JSON.parse(response.data.replies)\r\n                if (repliesJSON.length == 0) {\r\n                    return;\r\n                }\r\n                setReplies(repliesJSON)\r\n                // console.log(repliesJSON)\r\n            });\r\n            setIsLoadingReplies(false);\r\n        }\r\n\r\n    }, [])\r\n    if (isLoading) {\r\n        return (<>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ minHeight: '100vh', marginTop: '60px', padding: '30px 0px' }}\r\n                >\r\n                    <Grid item>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </>);\r\n    }\r\n    return (\r\n        <>\r\n            {isDialogOpen && (\r\n                <Snackbar\r\n                    open={isDialogOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={() => setIsDialogOpen(false)}\r\n                >\r\n                    <Alert severity=\"success\" onClose={() => setIsDialogOpen(false)}>\r\n                        Berhasil {query.get('state') == \"success-create\" ? \"menulis\" : query.get('state') == \"success-edit\" ? \"Mengubah\" : \"menghapus\"} komentar !\r\n                </Alert>\r\n                </Snackbar>\r\n            )}\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '100vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={listBreadCrumb} />\r\n                    <Grid item style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button onClick={props.backToPrevious} variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 16px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <h2 style={{ margin: \"0 10px 10px 10px\" }}>Forum Diskusi</h2>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    {post == null ?\r\n                                        <Skeleton variant=\"text\" />\r\n                                        : <h3 style={{ margin: \"0 10px 0 10px\" }}>{post.title}</h3>\r\n                                    }\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ height: '16px' }} />\r\n\r\n                                <Grid item style={{ padding: '5px 10px', width: \"100%\" }}>\r\n                                    {post == null ?\r\n                                        <CircularProgress />\r\n                                        :\r\n                                        <ThreadCard\r\n                                            isOutlined={true}\r\n                                            Title={post['title']}\r\n                                            TimeStamp={post['last_modified']}\r\n                                            Author={post['author_name']}\r\n                                            changePage={props.changePage}\r\n                                            id_gaya_belajar={id_gaya_belajar}\r\n                                            id_course={id_course}\r\n                                            id_materi={id_materi}\r\n                                            id_post={post['pk']}\r\n                                            isThreadStarter={true}\r\n                                            Text={post['body']}\r\n                                            isEditable={userService.getName().toLowerCase() === post['author_name'].toLowerCase()}\r\n                                        />\r\n                                    }\r\n\r\n                                </Grid>\r\n                                {isLoadingReplies || replies == null ?\r\n                                    <></>\r\n                                    :\r\n                                    replies.map((reply) => {\r\n                                        return (\r\n                                            <Grid item style={{ padding: '5px 10px 5px 30px ', width: \"100%\" }}>\r\n                                                <ThreadReplyCard\r\n                                                    TimeStamp={reply['fields']['last_modified']}\r\n                                                    Author={reply['fields']['author_name']}\r\n                                                    Text={reply['fields'].body}\r\n                                                    changePage={props.changePage}\r\n                                                    id_gaya_belajar={id_gaya_belajar}\r\n                                                    id_course={id_course}\r\n                                                    id_materi={id_materi}\r\n                                                    id_post={id_thread}\r\n                                                    id_reply={reply.pk}\r\n                                                    isEditable={userService.getName().toLowerCase() === reply['fields']['author_name'].toLowerCase()}\r\n                                                />\r\n                                            </Grid>\r\n                                        );\r\n                                    })\r\n\r\n                                }\r\n                            </Grid>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { ThreadPage };","D:\\Arnas\\Code\\skripz\\src\\components\\ThreadReplyCard.js",["303","304","305","306","307"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Avatar, Typography, Link, Button } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport MarkdownView from 'react-showdown';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Moment from 'react-moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: '100%'\r\n    },\r\n    media: {\r\n        width: 180,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function ThreadReplyCard(props) {\r\n    const { Title, Author, Text, TimeStamp, isEditable, id_course, id_materi, id_post, id_reply, id_gaya_belajar } = props;\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n        console.log(\"ayy\")\r\n    };\r\n\r\n    const handleEdit = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/\" + id_post + \"/reply/\" + id_reply + \"/edit\");\r\n    };\r\n\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Grid container direction=\"row\" spacing={2} style={{ padding: '12px' }} alignItems=\"flex-start\" alignContent=\"center\" >\r\n                <Grid item xs={1}>\r\n                    <Avatar>{Author[0]}</Avatar>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <p style={{ margin: '0px', color: '#8F8F8F' }}>{Author} - <Moment format=\"DD MMM YYYY hh:mm\" >{TimeStamp}</Moment></p>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <MarkdownView\r\n                                markdown={Text}\r\n                                options={{ tables: true, emoji: true }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        {isEditable ? <Grid item xs={3}>\r\n                            <Link style={{ color: '#bdbdbd' }} href='' onClick={handleEdit}>\r\n                                <b >Edit</b>\r\n                            </Link>\r\n                        </Grid> : <></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n","D:\\Arnas\\Code\\skripz\\src\\components\\QuestionItem.js",["308","309","310","311","312","313","314","315"],"D:\\Arnas\\Code\\skripz\\src\\pages\\StartAssessment.js",["316"],"D:\\Arnas\\Code\\skripz\\src\\pages\\AssessmentPage.js",["317"],"D:\\Arnas\\Code\\skripz\\src\\pages\\EditThreadPage.js",["318","319","320","321","322","323","324"],"D:\\Arnas\\Code\\skripz\\src\\pdf\\DesainInteraksi.js",[],["325","326"],"D:\\Arnas\\Code\\skripz\\src\\utils\\WindowDimension.js",[],"D:\\Arnas\\Code\\skripz\\src\\components\\TextFieldOutline.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\WriteReplyPage.js",["327","328","329","330","331","332","333"],"D:\\Arnas\\Code\\skripz\\src\\pages\\EditReplyPage.js",["334","335","336","337","338","339","340"],"D:\\Arnas\\Code\\skripz\\src\\pdf\\PdfHandler.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi1.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi3.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi5.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi4.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi2.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi6.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi7.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\SearchPage.js",["341","342","343","344","345"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { InputBase, Grid, Paper, Avatar, Card, CardActionArea, Typography } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Appbar } from '../components/Appbar';\r\nimport { userService } from '../utils/UserService';\r\nimport AnnouncementCard from '../components/AnnouncementCard';\r\nimport APIUtility from '../utils/APIUtility';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  media: {\r\n    width: 130,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.55),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.75),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SearchPage(props) {\r\n\r\n  const classes = useStyles();\r\n  const { querySearch } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [courses, setCourses] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n\r\n  function handleClick(pk, gayaBelajar) {\r\n    props.changePage(\"/course/\" + gayaBelajar + \"/\" + pk)\r\n  }\r\n\r\n  const changeSearch = (props) => (event) => {\r\n    setSearch(event.target.value);\r\n  }\r\n\r\n  const enterSearch = (event) => {\r\n    if (event.keyCode === 13) {\r\n      console.log(search)\r\n      props.changePage(\"/search/q/\" + search)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (courses.length == 0 && userService.getLocalData() != null) {\r\n      APIUtility.get('/api/course/get/', {}).then((response) => {\r\n        let coursesJSON = JSON.parse(response.data.model)\r\n        console.log(coursesJSON)\r\n        setCourses(coursesJSON);\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Appbar changePage={props.changePage} />\r\n\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ backgroundColor: '#3D7DCA', minHeight: '30vh', marginTop: '60px' }}\r\n        >\r\n          {userService.getLocalData() != null ?\r\n            <Grid item xs={12} >\r\n              <h2 style={{ color: 'white' }}>\r\n                {userService.getLocalData() != null ? 'Halo ' + userService.getName().split(' ')[0] + ', mau belajar apa hari ini ?' : ''}\r\n              </h2>\r\n            </Grid>\r\n            :\r\n            <>\r\n              <Grid item xs={12} >\r\n                <h2 style={{ color: 'white', margin: 0 }} > EasyLearning</h2>\r\n              </Grid>\r\n              <Grid item xs={12} >\r\n                <h4 style={{ color: 'white', marginTop: 0 }}> E-Learning yang sesuai dengan kebutuhanmu</h4>\r\n              </Grid>\r\n            </>\r\n          }\r\n          <Grid item xs={3} >\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                value={search}\r\n                onChange={changeSearch('')}\r\n                onKeyDown={enterSearch}\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          style={{ margin: '30px 0px' }}\r\n        >\r\n\r\n          <Grid item style={{ margin: '0px 8px' }}>\r\n            <Paper>\r\n              <Grid container\r\n                spacing={2}\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                style={{ padding: '12px' }}\r\n              >\r\n                <Grid item>\r\n                  <h3 style={{ margin: 0 }}>Hasil Pencarian '{querySearch}' </h3>\r\n                </Grid>\r\n                {isLoading ?\r\n                  <Grid item>\r\n                    <p style={{ color: 'gray' }}>Tidak ada Mata Kuliah yang dapat dilihat publik saat ini. </p><p style={{ color: 'gray' }}>Silahkan Login untuk mencari kelas.</p>\r\n                  </Grid>\r\n                  :\r\n                  courses.length == 0 ?\r\n                    <Grid item>\r\n                      <p style={{ color: 'gray' }}>Tidak ada Mata Kuliah yang dapat dilihat publik saat ini. </p><p style={{ color: 'gray' }}>Silahkan Login untuk mencari kelas.</p>\r\n                    </Grid>\r\n                    :\r\n                    <>\r\n                      <Grid item>\r\n                        <p style={{ color: 'gray' }}>Untuk sementara seluruh kelas ditampilkan pada halaman pencarian ini</p>\r\n                      </Grid>\r\n                      {courses.map((course, i) => {\r\n                        return (\r\n                          <>\r\n                            <Grid item>\r\n                              <Card style={{ backgroundColor: '#3D7DCA' }}>\r\n                                <CardActionArea onClick={() => { handleClick(course.pk, \"A\") }}>\r\n                                  <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"left\" >\r\n                                    <Grid item>\r\n                                      <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                      <Avatar>{course.fields.name.split(\" \")[0][0]}</Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                      <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                    </Grid>\r\n                                    <Grid item >\r\n                                      <h4 style={{ color: 'white', marginBottom: 0 }}>{course.fields.name + \" A\"}</h4>\r\n                                      <p style={{ color: 'white', marginTop: 0 }}>{course.fields.aliasName} - {course.fields.code}</p>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </CardActionArea>\r\n                              </Card>\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                              <Card style={{ backgroundColor: '#3D7DCA' }}>\r\n                                <CardActionArea onClick={() => { handleClick(course.pk, \"B\") }}>\r\n                                  <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"left\" >\r\n                                    <Grid item>\r\n                                      <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                      <Avatar>{course.fields.name.split(\" \")[0][0]}</Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                      <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                    </Grid>\r\n                                    <Grid item >\r\n                                      <h4 style={{ color: 'white', marginBottom: 0 }}>{course.fields.name + \" B\"}</h4>\r\n                                      <p style={{ color: 'white', marginTop: 0 }}>{course.fields.aliasName} - {course.fields.code}</p>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </CardActionArea>\r\n                              </Card>\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                              <Card style={{ backgroundColor: '#3D7DCA' }}>\r\n                                <CardActionArea onClick={() => { handleClick(course.pk, \"C\") }}>\r\n                                  <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"left\" >\r\n                                    <Grid item>\r\n                                      <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                      <Avatar>{course.fields.name.split(\" \")[0][0]}</Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                      <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                    </Grid>\r\n                                    <Grid item >\r\n                                      <h4 style={{ color: 'white', marginBottom: 0 }}>{course.fields.name + \" C\"}</h4>\r\n                                      <p style={{ color: 'white', marginTop: 0 }}>{course.fields.aliasName} - {course.fields.code}</p>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </CardActionArea>\r\n                              </Card>\r\n                            </Grid>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </>\r\n                }\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { SearchPage };",{"ruleId":"346","severity":1,"message":"347","line":3,"column":35,"nodeType":"348","messageId":"349","endLine":3,"endColumn":45},{"ruleId":"346","severity":1,"message":"350","line":3,"column":66,"nodeType":"348","messageId":"349","endLine":3,"endColumn":80},{"ruleId":"346","severity":1,"message":"351","line":3,"column":82,"nodeType":"348","messageId":"349","endLine":3,"endColumn":93},{"ruleId":"346","severity":1,"message":"352","line":3,"column":95,"nodeType":"348","messageId":"349","endLine":3,"endColumn":103},{"ruleId":"346","severity":1,"message":"353","line":3,"column":105,"nodeType":"348","messageId":"349","endLine":3,"endColumn":117},{"ruleId":"346","severity":1,"message":"354","line":43,"column":11,"nodeType":"348","messageId":"349","endLine":43,"endColumn":28},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","replacedBy":"358"},{"ruleId":"346","severity":1,"message":"359","line":1,"column":17,"nodeType":"348","messageId":"349","endLine":1,"endColumn":25},{"ruleId":"346","severity":1,"message":"360","line":3,"column":46,"nodeType":"348","messageId":"349","endLine":3,"endColumn":51},{"ruleId":"346","severity":1,"message":"361","line":3,"column":53,"nodeType":"348","messageId":"349","endLine":3,"endColumn":59},{"ruleId":"346","severity":1,"message":"350","line":3,"column":67,"nodeType":"348","messageId":"349","endLine":3,"endColumn":81},{"ruleId":"346","severity":1,"message":"351","line":3,"column":83,"nodeType":"348","messageId":"349","endLine":3,"endColumn":94},{"ruleId":"346","severity":1,"message":"352","line":3,"column":96,"nodeType":"348","messageId":"349","endLine":3,"endColumn":104},{"ruleId":"346","severity":1,"message":"353","line":3,"column":106,"nodeType":"348","messageId":"349","endLine":3,"endColumn":118},{"ruleId":"346","severity":1,"message":"362","line":12,"column":8,"nodeType":"348","messageId":"349","endLine":12,"endColumn":18},{"ruleId":"346","severity":1,"message":"363","line":14,"column":8,"nodeType":"348","messageId":"349","endLine":14,"endColumn":17},{"ruleId":"355","replacedBy":"364"},{"ruleId":"357","replacedBy":"365"},{"ruleId":"346","severity":1,"message":"366","line":6,"column":22,"nodeType":"348","messageId":"349","endLine":6,"endColumn":28},{"ruleId":"346","severity":1,"message":"367","line":8,"column":5,"nodeType":"348","messageId":"349","endLine":8,"endColumn":14},{"ruleId":"346","severity":1,"message":"368","line":1,"column":17,"nodeType":"348","messageId":"349","endLine":1,"endColumn":26},{"ruleId":"346","severity":1,"message":"359","line":1,"column":28,"nodeType":"348","messageId":"349","endLine":1,"endColumn":36},{"ruleId":"346","severity":1,"message":"369","line":9,"column":10,"nodeType":"348","messageId":"349","endLine":9,"endColumn":14},{"ruleId":"346","severity":1,"message":"360","line":3,"column":33,"nodeType":"348","messageId":"349","endLine":3,"endColumn":38},{"ruleId":"346","severity":1,"message":"361","line":3,"column":62,"nodeType":"348","messageId":"349","endLine":3,"endColumn":68},{"ruleId":"346","severity":1,"message":"370","line":64,"column":13,"nodeType":"348","messageId":"349","endLine":64,"endColumn":19},{"ruleId":"346","severity":1,"message":"370","line":196,"column":13,"nodeType":"348","messageId":"349","endLine":196,"endColumn":19},{"ruleId":"346","severity":1,"message":"368","line":1,"column":17,"nodeType":"348","messageId":"349","endLine":1,"endColumn":26},{"ruleId":"346","severity":1,"message":"359","line":1,"column":28,"nodeType":"348","messageId":"349","endLine":1,"endColumn":36},{"ruleId":"346","severity":1,"message":"371","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":20},{"ruleId":"346","severity":1,"message":"372","line":3,"column":16,"nodeType":"348","messageId":"349","endLine":3,"endColumn":22},{"ruleId":"346","severity":1,"message":"373","line":6,"column":10,"nodeType":"348","messageId":"349","endLine":6,"endColumn":14},{"ruleId":"346","severity":1,"message":"374","line":6,"column":16,"nodeType":"348","messageId":"349","endLine":6,"endColumn":20},{"ruleId":"346","severity":1,"message":"375","line":3,"column":64,"nodeType":"348","messageId":"349","endLine":3,"endColumn":80},{"ruleId":"376","severity":1,"message":"377","line":85,"column":24,"nodeType":"378","messageId":"379","endLine":85,"endColumn":26},{"ruleId":"380","severity":1,"message":"381","line":94,"column":6,"nodeType":"382","endLine":94,"endColumn":8,"suggestions":"383"},{"ruleId":"376","severity":1,"message":"377","line":170,"column":34,"nodeType":"378","messageId":"379","endLine":170,"endColumn":36},{"ruleId":"346","severity":1,"message":"372","line":3,"column":16,"nodeType":"348","messageId":"349","endLine":3,"endColumn":22},{"ruleId":"346","severity":1,"message":"384","line":9,"column":11,"nodeType":"348","messageId":"349","endLine":9,"endColumn":22},{"ruleId":"346","severity":1,"message":"385","line":14,"column":11,"nodeType":"348","messageId":"349","endLine":14,"endColumn":23},{"ruleId":"346","severity":1,"message":"386","line":17,"column":11,"nodeType":"348","messageId":"349","endLine":17,"endColumn":23},{"ruleId":"380","severity":1,"message":"387","line":35,"column":8,"nodeType":"382","endLine":35,"endColumn":10,"suggestions":"388"},{"ruleId":"346","severity":1,"message":"389","line":2,"column":28,"nodeType":"348","messageId":"349","endLine":2,"endColumn":36},{"ruleId":"346","severity":1,"message":"390","line":20,"column":8,"nodeType":"348","messageId":"349","endLine":20,"endColumn":21},{"ruleId":"376","severity":1,"message":"377","line":139,"column":43,"nodeType":"378","messageId":"379","endLine":139,"endColumn":45},{"ruleId":"380","severity":1,"message":"391","line":146,"column":8,"nodeType":"382","endLine":146,"endColumn":10,"suggestions":"392"},{"ruleId":"393","severity":1,"message":"394","line":150,"column":38,"nodeType":"395","messageId":"396","endLine":150,"endColumn":40},{"ruleId":"346","severity":1,"message":"397","line":165,"column":14,"nodeType":"348","messageId":"349","endLine":165,"endColumn":25},{"ruleId":"346","severity":1,"message":"398","line":178,"column":11,"nodeType":"348","messageId":"349","endLine":178,"endColumn":25},{"ruleId":"399","severity":1,"message":"400","line":213,"column":64,"nodeType":"401","endLine":213,"endColumn":94},{"ruleId":"376","severity":1,"message":"377","line":292,"column":85,"nodeType":"378","messageId":"379","endLine":292,"endColumn":87},{"ruleId":"376","severity":1,"message":"377","line":314,"column":49,"nodeType":"378","messageId":"379","endLine":314,"endColumn":51},{"ruleId":"376","severity":1,"message":"377","line":93,"column":28,"nodeType":"378","messageId":"379","endLine":93,"endColumn":30},{"ruleId":"376","severity":1,"message":"377","line":111,"column":29,"nodeType":"378","messageId":"379","endLine":111,"endColumn":31},{"ruleId":"380","severity":1,"message":"402","line":122,"column":8,"nodeType":"382","endLine":122,"endColumn":10,"suggestions":"403"},{"ruleId":"376","severity":1,"message":"377","line":160,"column":47,"nodeType":"378","messageId":"379","endLine":160,"endColumn":49},{"ruleId":"376","severity":1,"message":"377","line":169,"column":47,"nodeType":"378","messageId":"379","endLine":169,"endColumn":49},{"ruleId":"376","severity":1,"message":"377","line":186,"column":46,"nodeType":"378","messageId":"379","endLine":186,"endColumn":48},{"ruleId":"376","severity":1,"message":"377","line":192,"column":47,"nodeType":"378","messageId":"379","endLine":192,"endColumn":49},{"ruleId":"376","severity":1,"message":"377","line":199,"column":57,"nodeType":"378","messageId":"379","endLine":199,"endColumn":59},{"ruleId":"376","severity":1,"message":"377","line":217,"column":37,"nodeType":"378","messageId":"379","endLine":217,"endColumn":39},{"ruleId":"376","severity":1,"message":"377","line":103,"column":21,"nodeType":"378","messageId":"379","endLine":103,"endColumn":23},{"ruleId":"376","severity":1,"message":"377","line":109,"column":24,"nodeType":"378","messageId":"379","endLine":109,"endColumn":26},{"ruleId":"346","severity":1,"message":"368","line":1,"column":17,"nodeType":"348","messageId":"349","endLine":1,"endColumn":26},{"ruleId":"346","severity":1,"message":"369","line":9,"column":10,"nodeType":"348","messageId":"349","endLine":9,"endColumn":14},{"ruleId":"346","severity":1,"message":"404","line":23,"column":21,"nodeType":"348","messageId":"349","endLine":23,"endColumn":31},{"ruleId":"346","severity":1,"message":"368","line":1,"column":17,"nodeType":"348","messageId":"349","endLine":1,"endColumn":26},{"ruleId":"346","severity":1,"message":"359","line":1,"column":28,"nodeType":"348","messageId":"349","endLine":1,"endColumn":36},{"ruleId":"346","severity":1,"message":"371","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":20},{"ruleId":"346","severity":1,"message":"372","line":3,"column":16,"nodeType":"348","messageId":"349","endLine":3,"endColumn":22},{"ruleId":"346","severity":1,"message":"405","line":1,"column":10,"nodeType":"348","messageId":"349","endLine":1,"endColumn":20},{"ruleId":"376","severity":1,"message":"377","line":26,"column":35,"nodeType":"378","messageId":"379","endLine":26,"endColumn":37},{"ruleId":"346","severity":1,"message":"406","line":7,"column":7,"nodeType":"348","messageId":"349","endLine":7,"endColumn":16},{"ruleId":"346","severity":1,"message":"407","line":32,"column":34,"nodeType":"348","messageId":"349","endLine":32,"endColumn":43},{"ruleId":"346","severity":1,"message":"368","line":1,"column":27,"nodeType":"348","messageId":"349","endLine":1,"endColumn":36},{"ruleId":"346","severity":1,"message":"408","line":2,"column":21,"nodeType":"348","messageId":"349","endLine":2,"endColumn":32},{"ruleId":"346","severity":1,"message":"409","line":32,"column":11,"nodeType":"348","messageId":"349","endLine":32,"endColumn":19},{"ruleId":"346","severity":1,"message":"410","line":38,"column":28,"nodeType":"348","messageId":"349","endLine":38,"endColumn":45},{"ruleId":"376","severity":1,"message":"377","line":53,"column":36,"nodeType":"378","messageId":"379","endLine":53,"endColumn":38},{"ruleId":"346","severity":1,"message":"398","line":119,"column":11,"nodeType":"348","messageId":"349","endLine":119,"endColumn":25},{"ruleId":"399","severity":1,"message":"400","line":175,"column":121,"nodeType":"401","endLine":175,"endColumn":142},{"ruleId":"376","severity":1,"message":"411","line":35,"column":73,"nodeType":"378","messageId":"379","endLine":35,"endColumn":75},{"ruleId":"346","severity":1,"message":"410","line":36,"column":28,"nodeType":"348","messageId":"349","endLine":36,"endColumn":45},{"ruleId":"346","severity":1,"message":"412","line":44,"column":11,"nodeType":"348","messageId":"349","endLine":44,"endColumn":15},{"ruleId":"346","severity":1,"message":"398","line":58,"column":11,"nodeType":"348","messageId":"349","endLine":58,"endColumn":25},{"ruleId":"380","severity":1,"message":"413","line":70,"column":8,"nodeType":"382","endLine":70,"endColumn":10,"suggestions":"414"},{"ruleId":"376","severity":1,"message":"377","line":97,"column":54,"nodeType":"378","messageId":"379","endLine":97,"endColumn":56},{"ruleId":"376","severity":1,"message":"377","line":97,"column":107,"nodeType":"378","messageId":"379","endLine":97,"endColumn":109},{"ruleId":"346","severity":1,"message":"406","line":9,"column":7,"nodeType":"348","messageId":"349","endLine":9,"endColumn":16},{"ruleId":"376","severity":1,"message":"411","line":38,"column":73,"nodeType":"378","messageId":"379","endLine":38,"endColumn":75},{"ruleId":"346","severity":1,"message":"410","line":40,"column":28,"nodeType":"348","messageId":"349","endLine":40,"endColumn":45},{"ruleId":"346","severity":1,"message":"397","line":48,"column":14,"nodeType":"348","messageId":"349","endLine":48,"endColumn":25},{"ruleId":"346","severity":1,"message":"398","line":52,"column":11,"nodeType":"348","messageId":"349","endLine":52,"endColumn":25},{"ruleId":"346","severity":1,"message":"415","line":56,"column":11,"nodeType":"348","messageId":"349","endLine":56,"endColumn":20},{"ruleId":"376","severity":1,"message":"377","line":88,"column":40,"nodeType":"378","messageId":"379","endLine":88,"endColumn":42},{"ruleId":"380","severity":1,"message":"416","line":97,"column":8,"nodeType":"382","endLine":97,"endColumn":10,"suggestions":"417"},{"ruleId":"376","severity":1,"message":"377","line":125,"column":54,"nodeType":"378","messageId":"379","endLine":125,"endColumn":56},{"ruleId":"376","severity":1,"message":"377","line":125,"column":107,"nodeType":"378","messageId":"379","endLine":125,"endColumn":109},{"ruleId":"346","severity":1,"message":"372","line":3,"column":49,"nodeType":"348","messageId":"349","endLine":3,"endColumn":55},{"ruleId":"346","severity":1,"message":"418","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":15},{"ruleId":"346","severity":1,"message":"406","line":9,"column":7,"nodeType":"348","messageId":"349","endLine":9,"endColumn":16},{"ruleId":"346","severity":1,"message":"419","line":34,"column":13,"nodeType":"348","messageId":"349","endLine":34,"endColumn":18},{"ruleId":"346","severity":1,"message":"398","line":36,"column":11,"nodeType":"348","messageId":"349","endLine":36,"endColumn":25},{"ruleId":"346","severity":1,"message":"420","line":3,"column":10,"nodeType":"348","messageId":"349","endLine":3,"endColumn":19},{"ruleId":"346","severity":1,"message":"372","line":3,"column":27,"nodeType":"348","messageId":"349","endLine":3,"endColumn":33},{"ruleId":"346","severity":1,"message":"421","line":3,"column":59,"nodeType":"348","messageId":"349","endLine":3,"endColumn":68},{"ruleId":"346","severity":1,"message":"422","line":3,"column":70,"nodeType":"348","messageId":"349","endLine":3,"endColumn":74},{"ruleId":"346","severity":1,"message":"423","line":3,"column":94,"nodeType":"348","messageId":"349","endLine":3,"endColumn":108},{"ruleId":"346","severity":1,"message":"424","line":3,"column":110,"nodeType":"348","messageId":"349","endLine":3,"endColumn":118},{"ruleId":"346","severity":1,"message":"425","line":4,"column":8,"nodeType":"348","messageId":"349","endLine":4,"endColumn":18},{"ruleId":"346","severity":1,"message":"406","line":7,"column":7,"nodeType":"348","messageId":"349","endLine":7,"endColumn":16},{"ruleId":"346","severity":1,"message":"359","line":1,"column":17,"nodeType":"348","messageId":"349","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"377","line":100,"column":21,"nodeType":"378","messageId":"379","endLine":100,"endColumn":23},{"ruleId":"346","severity":1,"message":"408","line":2,"column":21,"nodeType":"348","messageId":"349","endLine":2,"endColumn":32},{"ruleId":"346","severity":1,"message":"409","line":33,"column":11,"nodeType":"348","messageId":"349","endLine":33,"endColumn":19},{"ruleId":"346","severity":1,"message":"410","line":40,"column":28,"nodeType":"348","messageId":"349","endLine":40,"endColumn":45},{"ruleId":"376","severity":1,"message":"377","line":56,"column":36,"nodeType":"378","messageId":"379","endLine":56,"endColumn":38},{"ruleId":"380","severity":1,"message":"426","line":117,"column":8,"nodeType":"382","endLine":117,"endColumn":10,"suggestions":"427"},{"ruleId":"346","severity":1,"message":"398","line":160,"column":11,"nodeType":"348","messageId":"349","endLine":160,"endColumn":25},{"ruleId":"399","severity":1,"message":"400","line":216,"column":121,"nodeType":"401","endLine":216,"endColumn":142},{"ruleId":"355","replacedBy":"428"},{"ruleId":"357","replacedBy":"429"},{"ruleId":"346","severity":1,"message":"430","line":8,"column":8,"nodeType":"348","messageId":"349","endLine":8,"endColumn":24},{"ruleId":"376","severity":1,"message":"411","line":38,"column":73,"nodeType":"378","messageId":"379","endLine":38,"endColumn":75},{"ruleId":"346","severity":1,"message":"410","line":42,"column":28,"nodeType":"348","messageId":"349","endLine":42,"endColumn":45},{"ruleId":"376","severity":1,"message":"377","line":60,"column":19,"nodeType":"378","messageId":"379","endLine":60,"endColumn":21},{"ruleId":"346","severity":1,"message":"398","line":79,"column":11,"nodeType":"348","messageId":"349","endLine":79,"endColumn":25},{"ruleId":"380","severity":1,"message":"431","line":109,"column":8,"nodeType":"382","endLine":109,"endColumn":10,"suggestions":"432"},{"ruleId":"399","severity":1,"message":"400","line":155,"column":121,"nodeType":"401","endLine":155,"endColumn":142},{"ruleId":"346","severity":1,"message":"430","line":8,"column":8,"nodeType":"348","messageId":"349","endLine":8,"endColumn":24},{"ruleId":"376","severity":1,"message":"411","line":38,"column":73,"nodeType":"378","messageId":"379","endLine":38,"endColumn":75},{"ruleId":"346","severity":1,"message":"410","line":45,"column":28,"nodeType":"348","messageId":"349","endLine":45,"endColumn":45},{"ruleId":"376","severity":1,"message":"377","line":63,"column":19,"nodeType":"378","messageId":"379","endLine":63,"endColumn":21},{"ruleId":"346","severity":1,"message":"398","line":95,"column":11,"nodeType":"348","messageId":"349","endLine":95,"endColumn":25},{"ruleId":"380","severity":1,"message":"433","line":146,"column":8,"nodeType":"382","endLine":146,"endColumn":10,"suggestions":"434"},{"ruleId":"399","severity":1,"message":"400","line":192,"column":121,"nodeType":"401","endLine":192,"endColumn":142},{"ruleId":"346","severity":1,"message":"435","line":4,"column":8,"nodeType":"348","messageId":"349","endLine":4,"endColumn":16},{"ruleId":"346","severity":1,"message":"436","line":9,"column":8,"nodeType":"348","messageId":"349","endLine":9,"endColumn":24},{"ruleId":"376","severity":1,"message":"377","line":92,"column":24,"nodeType":"378","messageId":"379","endLine":92,"endColumn":26},{"ruleId":"380","severity":1,"message":"381","line":100,"column":6,"nodeType":"382","endLine":100,"endColumn":8,"suggestions":"437"},{"ruleId":"376","severity":1,"message":"377","line":174,"column":34,"nodeType":"378","messageId":"379","endLine":174,"endColumn":36},"no-unused-vars","'CardHeader' is defined but never used.","Identifier","unusedVar","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'handleExpandClick' is assigned a value but never used.","no-native-reassign",["438"],"no-negated-in-lhs",["439"],"'useState' is defined but never used.","'Paper' is defined but never used.","'Avatar' is defined but never used.","'MateriCard' is defined but never used.","'secondPDF' is defined but never used.",["438"],["439"],"'Router' is defined but never used.","'useParams' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'height' is assigned a value but never used.","'useHistory' is defined but never used.","'Button' is defined but never used.","'blue' is defined but never used.","'pink' is defined but never used.","'CircularProgress' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'courses.length'. Either include it or remove the dependency array.","ArrayExpression",["440"],"'handleClick' is assigned a value but never used.","'handleClick3' is assigned a value but never used.","'handleClick2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isVerified', 'props', and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["441"],"'useTheme' is defined but never used.","'useMediaQuery' is defined but never used.","React Hook useEffect has missing dependencies: 'id_course', 'id_gaya_belajar', 'id_materi', 'materi', and 'post'. Either include them or remove the dependency array.",["442"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleClick' is defined but never used.","'preventDefault' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'course', 'id_course', and 'material.length'. Either include them or remove the dependency array.",["443"],"'setIsLogin' is assigned a value but never used.","'authHeader' is defined but never used.","'useStyles' is assigned a value but never used.","'TimeStamp' is assigned a value but never used.","'useLocation' is defined but never used.","'category' is assigned a value but never used.","'setListBreadCrumb' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'list' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id_materi' and 'listPost'. Either include them or remove the dependency array.",["444"],"'converter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id_thread', 'post', and 'replies'. Either include them or remove the dependency array.",["445"],"'AddIcon' is defined but never used.","'Title' is assigned a value but never used.","'CardMedia' is defined but never used.","'FormGroup' is defined but never used.","'Card' is defined but never used.","'FormHelperText' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has missing dependencies: 'id_thread', 'post', and 'title'. Either include them or remove the dependency array.",["446"],["438"],["439"],"'TextFieldOutline' is defined but never used.","React Hook useEffect has missing dependencies: 'id_thread' and 'post'. Either include them or remove the dependency array.",["447"],"React Hook useEffect has missing dependencies: 'id_reply', 'id_thread', 'post', and 'reply'. Either include them or remove the dependency array.",["448"],"'Skeleton' is defined but never used.","'AnnouncementCard' is defined but never used.",["449"],"no-global-assign","no-unsafe-negation",{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"450","fix":"468"},"Update the dependencies array to be: [courses.length]",{"range":"469","text":"470"},"Update the dependencies array to be: [isVerified, props, token]",{"range":"471","text":"472"},"Update the dependencies array to be: [id_course, id_gaya_belajar, id_materi, materi, post]",{"range":"473","text":"474"},"Update the dependencies array to be: [course, id_course, material.length]",{"range":"475","text":"476"},"Update the dependencies array to be: [id_materi, listPost]",{"range":"477","text":"478"},"Update the dependencies array to be: [id_thread, post, replies]",{"range":"479","text":"480"},"Update the dependencies array to be: [id_thread, post, title]",{"range":"481","text":"482"},"Update the dependencies array to be: [id_thread, post]",{"range":"483","text":"484"},"Update the dependencies array to be: [id_reply, id_thread, post, reply]",{"range":"485","text":"486"},{"range":"487","text":"470"},[2596,2598],"[courses.length]",[1006,1008],"[isVerified, props, token]",[5805,5807],"[id_course, id_gaya_belajar, id_materi, materi, post]",[4134,4136],"[course, id_course, material.length]",[2806,2808],"[id_materi, listPost]",[3922,3924],"[id_thread, post, replies]",[4989,4991],"[id_thread, post, title]",[4567,4569],"[id_thread, post]",[6106,6108],"[id_reply, id_thread, post, reply]",[2792,2794]]