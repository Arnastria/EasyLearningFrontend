[{"D:\\Arnas\\Code\\skripz\\src\\components\\MateriCard.js":"1","D:\\Arnas\\Code\\skripz\\src\\pages\\materiSlide.js":"2","D:\\Arnas\\Code\\skripz\\src\\index.js":"3","D:\\Arnas\\Code\\skripz\\src\\components\\Breadcrumb.js":"4","D:\\Arnas\\Code\\skripz\\src\\routes\\index.js":"5","D:\\Arnas\\Code\\skripz\\src\\components\\appbar.js":"6","D:\\Arnas\\Code\\skripz\\src\\components\\PDFViewer.js":"7","D:\\Arnas\\Code\\skripz\\src\\pages\\home.js":"8","D:\\Arnas\\Code\\skripz\\src\\App.js":"9","D:\\Arnas\\Code\\skripz\\src\\reportWebVitals.js":"10","D:\\Arnas\\Code\\skripz\\src\\pages\\DashboardPage.js":"11","D:\\Arnas\\Code\\skripz\\src\\pages\\LoginSuccessPage.js":"12","D:\\Arnas\\Code\\skripz\\src\\pages\\MateriSlide.js":"13","D:\\Arnas\\Code\\skripz\\src\\pages\\MatkulPage.js":"14","D:\\Arnas\\Code\\skripz\\src\\pages\\PreQuizPage.js":"15","D:\\Arnas\\Code\\skripz\\src\\components\\Appbar.js":"16","D:\\Arnas\\Code\\skripz\\src\\pages\\Home.js":"17","D:\\Arnas\\Code\\skripz\\src\\utils\\UserService.js":"18","D:\\Arnas\\Code\\skripz\\src\\utils\\APIUtility.js":"19","D:\\Arnas\\Code\\skripz\\src\\utils\\AuthHeader.js":"20","D:\\Arnas\\Code\\skripz\\src\\pages\\Logout.js":"21","D:\\Arnas\\Code\\skripz\\src\\components\\AnnouncementCard.js":"22","D:\\Arnas\\Code\\skripz\\src\\pages\\WriteThreadPage.js":"23","D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadListPage.js":"24","D:\\Arnas\\Code\\skripz\\src\\components\\ThreadCard.js":"25","D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadPage.js":"26","D:\\Arnas\\Code\\skripz\\src\\components\\ThreadReplyCard.js":"27","D:\\Arnas\\Code\\skripz\\src\\components\\QuestionItem.js":"28","D:\\Arnas\\Code\\skripz\\src\\pages\\StartAssessment.js":"29","D:\\Arnas\\Code\\skripz\\src\\pages\\AssessmentPage.js":"30","D:\\Arnas\\Code\\skripz\\src\\pages\\EditThreadPage.js":"31","D:\\Arnas\\Code\\skripz\\src\\pdf\\DesainInteraksi.js":"32","D:\\Arnas\\Code\\skripz\\src\\utils\\WindowDimension.js":"33","D:\\Arnas\\Code\\skripz\\src\\components\\TextFieldOutline.js":"34","D:\\Arnas\\Code\\skripz\\src\\pages\\WriteReplyPage.js":"35","D:\\Arnas\\Code\\skripz\\src\\pages\\EditReplyPage.js":"36","D:\\Arnas\\Code\\skripz\\src\\pdf\\PdfHandler.js":"37","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi1.js":"38","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi3.js":"39","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi5.js":"40","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi4.js":"41","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi2.js":"42","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi6.js":"43","D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi7.js":"44"},{"size":7549,"mtime":1618822214728,"results":"45","hashOfConfig":"46"},{"size":10163,"mtime":1612508900675,"results":"47","hashOfConfig":"48"},{"size":500,"mtime":1611207899531,"results":"49","hashOfConfig":"46"},{"size":1140,"mtime":1613459980538,"results":"50","hashOfConfig":"46"},{"size":5161,"mtime":1618812645744,"results":"51","hashOfConfig":"46"},{"size":3528,"mtime":1612341417179,"results":"52","hashOfConfig":"48"},{"size":15572,"mtime":1618222942983,"results":"53","hashOfConfig":"46"},{"size":736,"mtime":1612845977613,"results":"54","hashOfConfig":"48"},{"size":764,"mtime":1613372636237,"results":"55","hashOfConfig":"46"},{"size":362,"mtime":1611207899531,"results":"56","hashOfConfig":"46"},{"size":9581,"mtime":1618814431638,"results":"57","hashOfConfig":"46"},{"size":2160,"mtime":1618812940536,"results":"58","hashOfConfig":"46"},{"size":23308,"mtime":1618808241848,"results":"59","hashOfConfig":"46"},{"size":11521,"mtime":1618821996898,"results":"60","hashOfConfig":"46"},{"size":10955,"mtime":1618808246077,"results":"61","hashOfConfig":"46"},{"size":4414,"mtime":1618815499119,"results":"62","hashOfConfig":"46"},{"size":736,"mtime":1612847873878,"results":"63","hashOfConfig":"48"},{"size":1623,"mtime":1612855762292,"results":"64","hashOfConfig":"46"},{"size":822,"mtime":1618815489847,"results":"65","hashOfConfig":"46"},{"size":255,"mtime":1612852464766,"results":"66","hashOfConfig":"46"},{"size":259,"mtime":1612859345558,"results":"67","hashOfConfig":"46"},{"size":2623,"mtime":1618808925976,"results":"68","hashOfConfig":"46"},{"size":10076,"mtime":1618299001317,"results":"69","hashOfConfig":"46"},{"size":8519,"mtime":1618298613579,"results":"70","hashOfConfig":"46"},{"size":5064,"mtime":1618292444242,"results":"71","hashOfConfig":"46"},{"size":10007,"mtime":1618298651427,"results":"72","hashOfConfig":"46"},{"size":2781,"mtime":1613718370231,"results":"73","hashOfConfig":"46"},{"size":2133,"mtime":1613365804406,"results":"74","hashOfConfig":"48"},{"size":6073,"mtime":1618441017560,"results":"75","hashOfConfig":"46"},{"size":11045,"mtime":1618289323163,"results":"76","hashOfConfig":"46"},{"size":13312,"mtime":1618292810206,"results":"77","hashOfConfig":"46"},{"size":1424403,"mtime":1618209066360,"results":"78","hashOfConfig":"79"},{"size":648,"mtime":1613462354582,"results":"80","hashOfConfig":"46"},{"size":776,"mtime":1613629909646,"results":"81","hashOfConfig":"46"},{"size":10343,"mtime":1618298913973,"results":"82","hashOfConfig":"46"},{"size":13046,"mtime":1618292589726,"results":"83","hashOfConfig":"46"},{"size":439,"mtime":1618211443662,"results":"84","hashOfConfig":"46"},{"size":1424409,"mtime":1618210746147,"results":"85","hashOfConfig":"46"},{"size":1665789,"mtime":1618210671305,"results":"86","hashOfConfig":"46"},{"size":2562501,"mtime":1618210792996,"results":"87","hashOfConfig":"46"},{"size":2999069,"mtime":1618210771359,"results":"88","hashOfConfig":"46"},{"size":3049465,"mtime":1618209176694,"results":"89","hashOfConfig":"46"},{"size":3328933,"mtime":1618210809368,"results":"90","hashOfConfig":"46"},{"size":4155257,"mtime":1618210828058,"results":"91","hashOfConfig":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6afyyz",{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"by9dd7",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"12qmxe1",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"D:\\Arnas\\Code\\skripz\\src\\components\\MateriCard.js",["199","200","201","202","203","204"],"D:\\Arnas\\Code\\skripz\\src\\pages\\materiSlide.js",["205","206","207","208","209","210","211","212","213"],"import React, { useState } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { CardMedia, Grid, Button, Container, Paper, Avatar, Card, CardActionArea, CardActions, GridList, GridListTile } from '@material-ui/core';\r\n// import { Document, Page, pdfjs } from 'react-pdf';\r\nimport { Appbar } from '../components/appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport { PDFViewerExample } from '../components/PDFViewer';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MateriCard from '../components/MateriCard';\r\nimport materiPDF from '../pdf/MSI01.pdf';\r\nimport secondPDF from '../pdf/K.pdf'\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    media: {\r\n        width: '246px',\r\n        height: '177px'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.55),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.75),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nfunction MateriSlide(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const list = [\r\n        { color: \"inherit\", link: \"/sister\", name: \"Sistem Interaksi\" },\r\n        { color: \"primary\", link: \"/materi\", name: \"Bab 1. Pengantar Sistem Informasi\" },\r\n    ];\r\n\r\n    function handleClick() {\r\n        props.changePage(\"/prequiz\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '30vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={list} />\r\n                    <Grid item xs style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"space-around\"\r\n                                // justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                style={{ padding: '30px' }}\r\n                            >\r\n\r\n                                <Grid item xs>\r\n                                    <Grid container justify=\"center\">\r\n                                        <Grid item>\r\n                                            <CardMedia\r\n                                                className={classes.media}\r\n                                                image=\"https://files.catbox.moe/qfaut0.svg\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={8}>\r\n                                    <Grid container spacing={1} direction=\"column\">\r\n                                        <Grid item>\r\n                                            <b style={{ fontSize: '24px', marginRight: '12px' }} >1</b>\r\n                                            <b style={{ fontSize: '24px' }} >Pengantar Sistem Interaksi</b>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <b style={{ fontSize: '14px' }} >Bagaimana raksasa teknologi seperti Google mengembangkan produk yang menarik dan mudah digunakan oleh jutaan penggunanya ?</b>\r\n                                        </Grid>\r\n                                        <Grid item >\r\n                                            <Typography variant=\"body\" color=\"white\" component=\"p\" style={{ fontSize: '12px' }}>\r\n                                                Pada bab ini kamu akan belajar mengenai dasar-dasar desain interaksi, istilah-istilah yang mungkin pernah kamu dengar seperti UI/UX, dan penerapannya dalam pengembangan produk digital, seperti website dan mobile apps\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item style={{ marginTop: '14px' }}>\r\n                                            <Grid container spacing={3} direction=\"row\">\r\n                                                <Grid item xs>\r\n                                                    <Button style={{ width: '100%' }} variant=\"outlined\" color=\"primary\" startIcon={<ArrowBackIcon />} onClick={handleClick}>Pre-Quiz</Button>\r\n                                                </Grid>\r\n                                                <Grid item xs >\r\n                                                    <Button style={{ width: '100%' }} variant=\"contained\" color=\"primary\" startIcon={<PlayArrowIcon />}>Lihat Video Intro</Button>\r\n                                                </Grid>\r\n                                                <Grid item xs >\r\n                                                    <Button style={{ width: '100%' }} variant=\"contained\" color=\"primary\" startIcon={<AssignmentIcon />}>Peta Konsep</Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"div\" style={{ height: '16px' }} />\r\n                    </Container>\r\n                    <Grid item>\r\n                        <Card>\r\n                            <PDFViewerExample pdf={materiPDF} />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"div\" style={{ height: '16px' }} />\r\n                    </Container>\r\n                    <Grid item>\r\n                        <Card>\r\n                            <PDFViewerExample pdf={'https://files.catbox.moe/071fl9.pdf'} />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"div\" style={{ height: '16px' }} />\r\n                    </Container>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 0px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <b>Materi Pengayaan / Suplemen</b>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px' }}\r\n                            >\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\">[VIDEO] Meet the UX Researcher : Gita</Button>\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\">[VIDEO] Meet the UX Researcher : Gita</Button>\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\">[VIDEO] Meet the UX Researcher : Gita</Button>\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ width: '16px' }} />\r\n                            </Grid>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { MateriSlide };",["214","215"],"D:\\Arnas\\Code\\skripz\\src\\index.js",[],["216","217"],"D:\\Arnas\\Code\\skripz\\src\\components\\Breadcrumb.js",[],"D:\\Arnas\\Code\\skripz\\src\\routes\\index.js",["218","219"],"D:\\Arnas\\Code\\skripz\\src\\components\\appbar.js",["220","221","222"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { Grid, Button, Menu, MenuItem, Avatar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    separator: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Appbar(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function handleClickBeranda() {\r\n        props.changePage(\"/\")\r\n    }\r\n\r\n    const classes = useStyles();\r\n    //TODO : https://medium.com/better-programming/making-a-basic-header-responsive-with-materialui-and-react-2198fac923c8\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar >\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" style={{ flexGrow: 0.1 }}>\r\n                        Skripz\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Beranda</Button>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>Tentang</Button>\r\n                    <Button color=\"inherit\" onClick={handleClickBeranda}>FAQ</Button>\r\n                    <div className={classes.separator} />\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{ backgroundColor: \"white\" }}\r\n                            disableElevation\r\n                            startIcon={<Avatar>A</Avatar>}\r\n                            endIcon={<KeyboardArrowDownIcon />}\r\n                            onClick={handleClick}\r\n                        >\r\n                            <b style={{ color: '#3D7DCA' }} >Fulan Bin Fulan</b>\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"appbar-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            getContentAnchorEl={null}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem onClick={handleClose}>Profil</MenuItem>\r\n                            <MenuItem onClick={handleClose}>Pengaturan</MenuItem>\r\n                            <MenuItem onClick={handleClose}>Keluar</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <NotificationsIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Appbar };","D:\\Arnas\\Code\\skripz\\src\\components\\PDFViewer.js",["223","224","225","226"],"import React, { useState } from \"react\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport { Box, Grid, IconButton, Paper, Card, CardActionArea, Avatar, } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport useWindowDimensions from '../utils/WindowDimension';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nfunction PDFViewer(props) {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1); //setting 1 to show fisrt page\r\n\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n    }\r\n\r\n    function changePage(offset) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n    }\r\n\r\n    function previousPage() {\r\n        changePage(-1);\r\n    }\r\n\r\n    function nextPage() {\r\n        changePage(1);\r\n    }\r\n\r\n    const { pdf } = props;\r\n\r\n    return (\r\n        <>\r\n            <Document\r\n                file={pdf}\r\n                onLoadSuccess={onDocumentLoadSuccess}\r\n\r\n            >\r\n                <Page pageNumber={pageNumber} />\r\n            </Document>\r\n            <div>\r\n                <p>\r\n                    Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\r\n                </p>\r\n                <button type=\"button\" disabled={pageNumber <= 1} onClick={previousPage}>\r\n                    Previous\r\n        </button>\r\n                <button\r\n                    type=\"button\"\r\n                    disabled={pageNumber >= numPages}\r\n                    onClick={nextPage}\r\n                >\r\n                    Next\r\n        </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction PDFViewerExample(props) {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [renderedPageNumber, setRenderedPageNumber] = useState(null);\r\n    const { height, width } = useWindowDimensions();\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n    }\r\n\r\n    function changePage(offset) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n    }\r\n\r\n    function previousPage() {\r\n        changePage(-1);\r\n    }\r\n\r\n    function nextPage() {\r\n        changePage(1);\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        setPageNumber(i);\r\n    }\r\n    const isLoading = renderedPageNumber !== pageNumber;\r\n    const { pdf } = props;\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\">\r\n                <Grid item xs style={{ padding: '20px 20px' }}>\r\n                    <Grid container\r\n                        spacing={2}\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        alignContent=\"center\"\r\n                        style={{ padding: '12px' }}\r\n                    >\r\n                        <Grid item>\r\n                            <h4 style={{ margin: 0 }}>Daftar topik</h4>\r\n\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <p style={{ margin: 0, fontSize: '12px', color: '#8F8F8F' }}>Bantuan : Klik pada topik untuk loncat ke topik pada slides</p>\r\n                        </Grid>\r\n                        {props.chapterList === undefined ?\r\n                            <Grid item style={{ width: '100%' }}>\r\n                                <Card style={{ backgroundColor: '#6e6d6a' }}>\r\n                                    <CardActionArea >\r\n                                        <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"center\" >\r\n                                            <Grid item>\r\n                                                <h4 style={{ color: 'white' }}>Daftar Topik tidak tersedia</h4>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                            :\r\n                            props.chapterList.map((chapter, i) => {\r\n                                let chapterData = chapter.split(\"-\")\r\n                                return (\r\n                                    <Grid item style={{ width: '100%' }}>\r\n                                        <Card style={{ backgroundColor: '#3D7DCA' }}>\r\n                                            <CardActionArea onClick={() => { handleClick(parseInt(chapterData[0])) }}>\r\n                                                <Grid container direction=\"row\" spacing={0} alignItems=\"center\"  >\r\n                                                    <Grid item style={{ padding: '6px' }}>\r\n                                                        <h4 style={{ color: 'white' }}>{i + 1 + \". \" + chapterData[1]}</h4>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </Grid>);\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={9} style={{ padding: '20px 20px' }}>\r\n                    <Box >\r\n                        <Box elevation={0} style={{ backgroundColor: \"#6e6d6a\" }}>\r\n                            <Grid container justify=\"center\" alignItems=\"center\" >\r\n                                <Grid item>\r\n                                    <IconButton onClick={previousPage} disabled={pageNumber <= 1}>\r\n                                        <ArrowBackIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <p style={{ color: \"white\", margin: 0 }}>\r\n                                        {pageNumber || (numPages ? 1 : \"--\")} / {numPages || \"--\"}\r\n                                    </p>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <IconButton onClick={nextPage} disabled={pageNumber >= numPages}>\r\n                                        <ArrowForwardIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n\r\n                        <Grid container justify=\"center\" alignItems=\"center\" style={{ backgroundColor: \"#C4C4C4\" }}>\r\n                            <Grid item>\r\n                                <Box overflow=\"auto\" style={{ maxWidth: '65vw' }}>\r\n                                    <Document file={pdf} onLoadSuccess={onDocumentLoadSuccess} onLoadError={console.error}\r\n                                    >\r\n                                        {isLoading && renderedPageNumber ? (\r\n                                            <Page\r\n                                                key={renderedPageNumber}\r\n                                                className=\"prevPage\"\r\n                                                pageNumber={renderedPageNumber}\r\n                                                width={0.45 * width}\r\n                                            />\r\n                                        ) : null}\r\n                                        <Page\r\n                                            key={pageNumber}\r\n                                            pageNumber={pageNumber}\r\n                                            onRenderSuccess={() => setRenderedPageNumber(pageNumber)}\r\n                                            width={0.45 * width}\r\n                                        />\r\n                                    </Document>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nfunction PDFViewerExampleSequential(props) {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [renderedPageNumber, setRenderedPageNumber] = useState(null);\r\n    const { height, width } = useWindowDimensions();\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n    }\r\n\r\n    function changePage(offset) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n        props.chapterCheckList[pageNumber + offset] = true;\r\n    }\r\n\r\n    function previousPage() {\r\n        changePage(-1);\r\n    }\r\n\r\n    function nextPage() {\r\n        changePage(1);\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        setPageNumber(i);\r\n        props.chapterCheckList[i] = true;\r\n    }\r\n    const isLoading = renderedPageNumber !== pageNumber;\r\n    const { pdf } = props;\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\">\r\n                <Grid item xs style={{ padding: '20px 20px' }}>\r\n                    <Grid container\r\n                        spacing={2}\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        alignContent=\"center\"\r\n                        style={{ padding: '12px' }}\r\n                    >\r\n                        <Grid item>\r\n                            <h4 style={{ margin: 0 }}>Daftar topik</h4>\r\n\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <p style={{ margin: 0, fontSize: '12px', color: '#8F8F8F' }}>Bantuan : Klik pada topik untuk loncat ke topik pada slides</p>\r\n                        </Grid>\r\n                        {props.chapterList === undefined ?\r\n                            <Grid item style={{ width: '100%' }}>\r\n                                <Card style={{ backgroundColor: '#6e6d6a' }}>\r\n                                    <CardActionArea >\r\n                                        <Grid container direction=\"row\" spacing={0} alignItems=\"center\" justify=\"center\" >\r\n                                            <Grid item>\r\n                                                <h4 style={{ color: 'white' }}>Daftar Topik tidak tersedia</h4>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                            :\r\n                            props.chapterList.map((chapter, i) => {\r\n                                let chapterData = chapter.split(\"-\")\r\n                                return (\r\n                                    <Grid item style={{ width: '100%' }}>\r\n                                        <Card style={\r\n                                            props.chapterCheckList[parseInt(chapterData[0])] ?\r\n                                                { backgroundColor: '#3D7DCA' } :\r\n                                                { backgroundColor: '#7c7e82' }\r\n\r\n                                        }>\r\n                                            <CardActionArea onClick={\r\n                                                props.chapterCheckList[parseInt(chapterData[0])] ?\r\n                                                    () => { handleClick(parseInt(chapterData[0])) }\r\n                                                    :\r\n                                                    () => { }\r\n\r\n                                            }>\r\n                                                <Grid container direction=\"row\" spacing={0} alignItems=\"center\"  >\r\n                                                    <Grid item style={{ padding: '6px' }}>\r\n                                                        <h4 style={{ color: 'white' }}>{i + 1 + \". \" + chapterData[1]}</h4>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </Grid>);\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={9} style={{ padding: '20px 20px' }}>\r\n                    <Box >\r\n                        <Box elevation={0} style={{ backgroundColor: \"#6e6d6a\" }}>\r\n                            <Grid container justify=\"center\" alignItems=\"center\" >\r\n                                <Grid item>\r\n                                    <IconButton onClick={previousPage} disabled={pageNumber <= 1}>\r\n                                        <ArrowBackIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <p style={{ color: \"white\", margin: 0 }}>\r\n                                        {pageNumber || (numPages ? 1 : \"--\")} / {numPages || \"--\"}\r\n                                    </p>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <IconButton onClick={nextPage} disabled={pageNumber >= numPages}>\r\n                                        <ArrowForwardIosIcon style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n\r\n                        <Grid container justify=\"center\" alignItems=\"center\" style={{ backgroundColor: \"#C4C4C4\" }}>\r\n                            <Grid item>\r\n                                <Box overflow=\"auto\" style={{ maxWidth: '65vw' }}>\r\n                                    <Document file={pdf} onLoadSuccess={onDocumentLoadSuccess} onLoadError={console.error}\r\n                                    >\r\n                                        {isLoading && renderedPageNumber ? (\r\n                                            <Page\r\n                                                key={renderedPageNumber}\r\n                                                className=\"prevPage\"\r\n                                                pageNumber={renderedPageNumber}\r\n                                                width={0.45 * width}\r\n                                            />\r\n                                        ) : null}\r\n                                        <Page\r\n                                            key={pageNumber}\r\n                                            pageNumber={pageNumber}\r\n                                            onRenderSuccess={() => setRenderedPageNumber(pageNumber)}\r\n                                            width={0.45 * width}\r\n                                        />\r\n                                    </Document>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport { PDFViewer, PDFViewerExample, PDFViewerExampleSequential };","D:\\Arnas\\Code\\skripz\\src\\pages\\home.js",["227","228","229","230"],"D:\\Arnas\\Code\\skripz\\src\\App.js",["231","232"],"import React from \"react\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AppSwitch } from \"./routes\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, pink } from \"@material-ui/core/colors\";\nimport './index.css';\n\nfunction App() {\n  const theme = createMuiTheme({\n    overrides: {\n      MuiButton: {\n        root: {\n          borderRadius: 25,\n        },\n      },\n    },\n    palette: {\n      primary: {\n        main: '#5D97DB'\n      },\n      secondary: {\n        main: '#3D7DCA'\n      },\n    },\n  });\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <AppSwitch />\n      </Router>\n    </ThemeProvider>\n\n    /* <Router>\n    <AppSwitch/>\n    </Router> */\n  );\n}\n\nexport default App;","D:\\Arnas\\Code\\skripz\\src\\reportWebVitals.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\DashboardPage.js",["233","234","235"],"D:\\Arnas\\Code\\skripz\\src\\pages\\LoginSuccessPage.js",["236","237","238","239","240"],"D:\\Arnas\\Code\\skripz\\src\\pages\\MateriSlide.js",["241","242","243","244","245","246","247","248","249","250"],"D:\\Arnas\\Code\\skripz\\src\\pages\\MatkulPage.js",["251","252","253","254","255","256","257","258","259"],"D:\\Arnas\\Code\\skripz\\src\\pages\\PreQuizPage.js",[],"D:\\Arnas\\Code\\skripz\\src\\components\\Appbar.js",["260","261","262"],"D:\\Arnas\\Code\\skripz\\src\\pages\\Home.js",["263","264","265","266"],"D:\\Arnas\\Code\\skripz\\src\\utils\\UserService.js",["267"],"import { authHeader } from \"./AuthHeader\";\r\nimport APIUtility from \"./APIUtility\";\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    getLocalData,\r\n    getName,\r\n    getProfile,\r\n    getLearningModel,\r\n}\r\n\r\nfunction login(token) {\r\n    let user = localStorage.getItem('user');\r\n    console.log(user)\r\n    if (!user) {\r\n        let userObject = {\r\n            token: token,\r\n        };\r\n        localStorage.setItem(\"user\", JSON.stringify(userObject));\r\n    }\r\n    return APIUtility.get(\"/profile\")\r\n        .then(function (response) {\r\n            const profile = JSON.parse(response.data['profile'])\r\n            localStorage.setItem('profile', JSON.stringify(profile[0]))\r\n            console.log(\"===?\")\r\n            console.log(response)\r\n            return response.data;\r\n        }).catch(function (error) {\r\n\r\n            localStorage.removeItem(\"user\");\r\n            console.log(error.message);\r\n            console.log(\"removing user\");\r\n            window.location.replace(\"/500-error\");\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"profile\");\r\n    console.log(\"removing user\");\r\n    console.log(\"removing profile\");\r\n    console.log('success logout');\r\n}\r\n\r\nfunction getLocalData() {\r\n    return localStorage.getItem(\"user\");\r\n}\r\n\r\nfunction getProfile() {\r\n    return JSON.parse(localStorage.getItem(\"profile\"));\r\n}\r\n\r\nfunction getName() {\r\n    return JSON.parse(localStorage.getItem(\"profile\"))['fields']['name'];\r\n}\r\n\r\nfunction getLearningModel() {\r\n    return JSON.parse(localStorage.getItem(\"profile\"))['fields']['learning_model'];\r\n}","D:\\Arnas\\Code\\skripz\\src\\utils\\APIUtility.js",["268"],"import axios from \"axios\";\r\nimport { authHeader } from \"./AuthHeader\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://skripz-backend.herokuapp.com/\",\r\n    responseType: \"json\",\r\n    headers: {\r\n        ...authHeader(),\r\n        \"Accept\": \"application/json\",\r\n    },\r\n});\r\n\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n    const token = authHeader().Authorization;\r\n    config.headers.Authorization = token;\r\n\r\n    return config;\r\n})\r\n\r\ninstance.interceptors.response.use(function (response) {\r\n    return response;\r\n}, function (error) {\r\n    try {\r\n        if (error.response.status == 500) {\r\n            window.location.replace(\"/500-error\");\r\n        }\r\n    } catch {\r\n        window.location.replace(\"/404-error\");\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default instance;","D:\\Arnas\\Code\\skripz\\src\\utils\\AuthHeader.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\Logout.js",[],"D:\\Arnas\\Code\\skripz\\src\\components\\AnnouncementCard.js",["269","270"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Avatar, Typography, Link } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport MarkdownView from 'react-showdown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: '100%'\r\n    },\r\n    media: {\r\n        width: 180,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function AnnouncementCard(props) {\r\n    const { Title, Author, Text, TimeStamp } = props;\r\n\r\n    const preventDefault = (event) => event.preventDefault();\r\n\r\n    return (\r\n        <Paper>\r\n            <Grid container direction=\"row\" spacing={2} style={{ padding: '12px' }} alignItems=\"flex-start\" alignContent=\"center\" >\r\n                <Grid item xs={1}>\r\n                    <Avatar>{Author[0]}</Avatar>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {Title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <b>{Author}</b>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <MarkdownView\r\n                                markdown={Text}\r\n                                options={{ tables: true, emoji: true }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        <Grid item>\r\n\r\n                            <Link style={{ color: '#8F8F8F' }} href=\"#\" onClick={preventDefault}>\r\n                                <b >Lihat selengkapnya</b>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n","D:\\Arnas\\Code\\skripz\\src\\pages\\WriteThreadPage.js",["271","272","273","274","275","276","277"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { Redirect } from \"react-router\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, Card, Snackbar } from '@material-ui/core';\r\nimport { Appbar } from '../components/Appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport TextFieldOutline from '../components/TextFieldOutline';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'react-mde/lib/styles/css/react-mde-all.css';\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport APIUtility from '../utils/APIUtility';\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n}));\r\n\r\nfunction WriteThreadPage(props) {\r\n\r\n    const classes = useStyles();\r\n    const { id_gaya_belajar, id_course, id_materi } = useParams();\r\n    const [value, setValue] = useState(\"**Hello world!!!**\");\r\n    const [selectedTab, setSelectedTab] = useState(\"write\");\r\n    const title = useForm(\"\");\r\n    const category = useForm(0);\r\n    const [nextState, setNextState] = useState(\"\");\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n    const [isSuccessDialogOpen, setIsSuccessDialogOpen] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [listBreadCrumb, setListBreadCrumb] = useState(\r\n        [\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course, name: \"Sistem Interaksi\" },\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi, name: \"Materi\" },\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread\", name: \"Forum Diskusi\" },\r\n            { color: \"primary\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/new\", name: \"Buat Thread\" },\r\n        ]\r\n    );\r\n\r\n    function useForm(defaultValue, regex) {\r\n        const [value, setValue] = useState(defaultValue);\r\n        const [isError, setIsError] = useState(false);\r\n        const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n        const handleChange = (event, value) => {\r\n            if (event.target.value == \"\") {\r\n                setIsError(true);\r\n                setErrorMessage(\"Tidak boleh kosong\");\r\n            } else {\r\n                setIsError(false);\r\n                setErrorMessage(\"\");\r\n            }\r\n            setValue(event.target.value);\r\n        };\r\n\r\n        const handleChangeMultiSelector = (event, value) => {\r\n            event.persist();\r\n            setValue(value);\r\n        };\r\n\r\n        const handleChangeSelector = (event, value) => {\r\n            event.persist();\r\n            if (value == null) {\r\n                return;\r\n            }\r\n            setValue(value);\r\n        };\r\n\r\n        return {\r\n            value,\r\n            setValue,\r\n            isError,\r\n            setIsError,\r\n            errorMessage,\r\n            setErrorMessage,\r\n            handleChange,\r\n            handleChangeMultiSelector,\r\n            handleChangeSelector,\r\n        };\r\n    }\r\n\r\n    const handleClick = () => {\r\n\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        console.log(value)\r\n        setIsLoading(true);\r\n        if (\r\n            !title.value ||\r\n            title.isError\r\n        ) {\r\n            setIsDialogOpen(true);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        await APIUtility.post('/api/material/' + id_materi + '/createpost/',\r\n            {\r\n                title: title.value,\r\n                category: 0,\r\n                body: value\r\n            }\r\n        ).then((response) => {\r\n            setIsLoading(false);\r\n            setNextState(\"success-create\");\r\n            setIsSuccessDialogOpen(true);\r\n        });\r\n        // setIsLoading(false);\r\n        // props.changePage(\"/thread\")\r\n    }\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    const converter = new Showdown.Converter({\r\n        tables: true,\r\n        simplifiedAutoLink: true,\r\n        strikethrough: true,\r\n        tasklists: true\r\n    });\r\n\r\n\r\n    if (isSuccessDialogOpen) {\r\n        return (\r\n            <>\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/\",\r\n                        search: \"?state=\" + nextState,\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n    if (isLoading) {\r\n        return (<>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ minHeight: '100vh', marginTop: '60px', padding: '30px 0px' }}\r\n                >\r\n                    <Grid item>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </>);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '100vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={listBreadCrumb} />\r\n                    <Grid item style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button onClick={props.backToPrevious} variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />} onClick={handleClick}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 16px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <h2 style={{ margin: '10px 0px 0px 0px' }}>Buat Thread</h2>\r\n                                </Grid>\r\n                                <Grid item style={{ width: '80%', padding: '10px' }}>\r\n                                    <TextFieldOutline\r\n                                        value={title.value}\r\n                                        error={title.isError}\r\n                                        helperText={title.errorMessage}\r\n                                        fullWidth\r\n                                        id=\"outlined-basic\"\r\n                                        name=\"title\"\r\n                                        labels=\"Judul Diskusi *\"\r\n                                        onChange={title.handleChange}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item style={{ width: '100%', padding: '10px' }}>\r\n                                    <ReactMde\r\n                                        value={value}\r\n                                        onChange={setValue}\r\n                                        selectedTab={selectedTab}\r\n                                        onTabChange={setSelectedTab}\r\n                                        generateMarkdownPreview={markdown =>\r\n                                            Promise.resolve(converter.makeHtml(markdown))\r\n                                        }\r\n                                        childProps={{\r\n                                            writeButton: {\r\n                                                tabIndex: -1\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ height: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button style={{ width: '100%' }} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Tulis diskusi</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <Snackbar\r\n                open={isSuccessDialogOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => {\r\n                    setIsSuccessDialogOpen(false);\r\n                }}\r\n            >\r\n                <Alert\r\n                    severity=\"success\"\r\n                    onClose={() => {\r\n                        setIsSuccessDialogOpen(false);\r\n                    }}\r\n                >\r\n                    Berhasil menulis thread !\r\n            </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n                open={isDialogOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => {\r\n                    setIsDialogOpen(false);\r\n                }}\r\n            >\r\n                <Alert\r\n                    severity=\"error\"\r\n                    onClose={() => {\r\n                        setIsDialogOpen(false);\r\n                    }}\r\n                >\r\n                    Pastikan kamu mengisi data dengan benar\r\n            </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { WriteThreadPage };","D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadListPage.js",["278","279","280","281","282","283","284"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { Grid, Button, Card, Snackbar } from '@material-ui/core';\r\nimport { Appbar } from '../components/Appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'react-mde/lib/styles/css/react-mde-all.css';\r\nimport ThreadCard from '../components/ThreadCard';\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport APIUtility from '../utils/APIUtility';\r\nimport { userService } from '../utils/UserService';\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n}));\r\n\r\nfunction ThreadListPage(props) {\r\n\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const { id_gaya_belajar, id_course, id_materi } = useParams();\r\n    const [listPost, setListPost] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(query.get('state') != undefined);\r\n    const [listBreadCrumb, setListBreadCrumb] = useState(\r\n        [\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course, name: \"Sistem Interaksi\" },\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi, name: \"Materi\" },\r\n            { color: \"primary\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread\", name: \"Forum Diskusi\" },\r\n        ]\r\n    );\r\n\r\n    const list = [\r\n        { color: \"inherit\", link: \"/sister\", name: \"Sistem Interaksi\" },\r\n        { color: \"inherit\", link: \"/materi\", name: \"Bab 1. Pengantar Sistem Informasi\" },\r\n        { color: \"primary\", link: \"/thread\", name: \"Forum Diskusi\" },\r\n    ];\r\n\r\n    function handleClick() {\r\n        props.changePage(\"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/new\")\r\n    }\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n    };\r\n    useEffect(() => {\r\n        if (listPost == null) {\r\n            console.log(\"fetching material\")\r\n            APIUtility.get('/api/post/get-by-material/' + id_materi, {}).then((response) => {\r\n                let listPostJSON = JSON.parse(response.data.post)\r\n                setListPost(listPostJSON);\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n    }, [])\r\n    if (isLoading) {\r\n        return (<>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ minHeight: '100vh', marginTop: '60px', padding: '30px 0px' }}\r\n                >\r\n                    <Grid item>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>);\r\n    }\r\n    return (\r\n        <>\r\n            {isDialogOpen && (\r\n                <Snackbar\r\n                    open={isDialogOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={() => setIsDialogOpen(false)}\r\n                >\r\n                    <Alert severity=\"success\" onClose={() => setIsDialogOpen(false)}>\r\n                        Berhasil {query.get('state') == \"success-create\" ? \"menulis\" : query.get('state') == \"success-edit\" ? \"Mengubah\" : \"menghapus\"} thread !\r\n                </Alert>\r\n                </Snackbar>\r\n            )}\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '100vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={listBreadCrumb} />\r\n                    <Grid item style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button onClick={props.backToPrevious} variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 16px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <h2>Forum Diskusi</h2>\r\n                                </Grid>\r\n                                <Grid item style={{ width: '100%', padding: '10px' }}>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"row\"\r\n                                    >\r\n                                        <Grid item>\r\n                                            <Button style={{ width: '100%' }} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\" onClick={handleClick}>Tulis diskusi</Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography style={{ width: '16px' }}></Typography>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button style={{ width: '100%' }} variant=\"outlined\" color=\"primary\" onClick={handleClick}>Filter</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ height: '16px' }} />\r\n                                {isLoading || listPost == null ?\r\n                                    <CircularProgress />\r\n                                    :\r\n                                    listPost.map((post) => {\r\n                                        let pk = post.pk\r\n                                        post = post.fields\r\n                                        return (\r\n                                            <Grid item style={{ padding: '10px ', width: '100%' }}>\r\n                                                <ThreadCard\r\n                                                    isOutlined={true}\r\n                                                    Title={post['title']}\r\n                                                    TimeStamp={post['last_modified']}\r\n                                                    Author={post['author_name']}\r\n                                                    changePage={props.changePage}\r\n                                                    id_gaya_belajar={id_gaya_belajar}\r\n                                                    id_course={id_course}\r\n                                                    id_materi={id_materi}\r\n                                                    id_post={pk}\r\n                                                    isPreview={true}\r\n                                                    isEditable={userService.getName().toLowerCase() === post['author_name'].toLowerCase()}\r\n                                                    Text={post['body'].length > 200 ? post['body'].split(' ').slice(0, 75).join(' ') + \"...\" : post['body']}\r\n                                                />\r\n                                            </Grid>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </Grid>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { ThreadListPage };","D:\\Arnas\\Code\\skripz\\src\\components\\ThreadCard.js",["285","286","287"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Avatar, Typography, Link, Button } from '@material-ui/core';\r\nimport MarkdownView from 'react-showdown';\r\nimport { red } from '@material-ui/core/colors';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Moment from 'react-moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: '100%'\r\n    },\r\n    media: {\r\n        width: 180,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function ThreadCard(props) {\r\n    const { Title, Author, Text, TimeStamp, isOutlined, isPreview, id_gaya_belajar, id_course, id_materi, id_post, isThreadStarter, isEditable } = props;\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/details/\" + id_post);\r\n    };\r\n\r\n    const handleEdit = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/edit/\" + id_post);\r\n    };\r\n\r\n    const handleComment = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/\" + id_post + \"/reply/new\");\r\n    }\r\n\r\n    return (\r\n        <Paper variant={isOutlined ? \"outlined\" : \"\"}>\r\n            <Grid container direction=\"row\" spacing={2} style={{ padding: '12px' }} alignItems=\"flex-start\" alignContent=\"center\" >\r\n                <Grid item xs={1}>\r\n                    <Avatar>{Author[0]}</Avatar>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography style={{ margin: '0px' }} variant=\"h6\" gutterBottom>\r\n                                <b>{Title}</b>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <p style={{ margin: '0px', color: '#8F8F8F' }}>{Author} - <Moment format=\"DD MMM YYYY hh:mm\" >{TimeStamp}</Moment></p>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <MarkdownView\r\n                                markdown={Text}\r\n                                options={{ tables: true, emoji: true }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        {isPreview ?\r\n                            <Grid item>\r\n                                <Grid container direction=\"row\" spacing={2}>\r\n                                    <Grid item>\r\n                                        <Link style={{ color: '#5D97DB' }} href='' onClick={handleClick}>\r\n                                            <b >Lihat selengkapnya</b>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    {isEditable != undefined ? <Grid item>\r\n                                        <Link style={{ color: '#bdbdbd' }} href='' onClick={handleEdit}>\r\n                                            <b >Edit</b>\r\n                                        </Link>\r\n                                    </Grid> : <></>}\r\n\r\n                                </Grid>\r\n\r\n                            </Grid> : <> </>}\r\n                        {isThreadStarter ?\r\n                            <Grid item>\r\n                                <Grid container direction=\"row\" spacing={2} alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Link style={{ color: '#8F8F8F' }}  >\r\n                                            <Button style={{ width: '100%' }} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\" onClick={handleComment}>Komentar</Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    {isEditable != undefined ? <Grid item>\r\n                                        <Link style={{ color: '#bdbdbd' }} href='' onClick={handleEdit}>\r\n                                            <b >Edit</b>\r\n                                        </Link>\r\n                                    </Grid> : <></>}\r\n                                </Grid>\r\n                            </Grid> : <></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n","D:\\Arnas\\Code\\skripz\\src\\pages\\ThreadPage.js",["288","289","290","291","292","293","294","295","296"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, Card, Snackbar } from '@material-ui/core';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { Appbar } from '../components/Appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport * as Showdown from \"showdown\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'react-mde/lib/styles/css/react-mde-all.css';\r\nimport ThreadReplyCard from '../components/ThreadReplyCard';\r\nimport ThreadCard from '../components/ThreadCard';\r\nimport APIUtility from '../utils/APIUtility';\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { userService } from '../utils/UserService';\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n}));\r\n\r\nfunction ThreadPage(props) {\r\n\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const { id_gaya_belajar, id_course, id_materi, id_thread } = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [replies, setReplies] = useState(null);\r\n    const [isLoadingReplies, setIsLoadingReplies] = useState(true);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(query.get('state') != undefined);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [listBreadCrumb, setListBreadCrumb] = useState(\r\n        [\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course, name: \"Sistem Interaksi\" },\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi, name: \"Materi\" },\r\n            { color: \"primary\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread\", name: \"Forum Diskusi\" },\r\n        ]\r\n    );\r\n\r\n    function handleClick() {\r\n        props.changePage(\"/thread/new\")\r\n    }\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    const converter = new Showdown.Converter({\r\n        tables: true,\r\n        simplifiedAutoLink: true,\r\n        strikethrough: true,\r\n        tasklists: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (post === null) {\r\n            APIUtility.get('/api/post/' + id_thread, {}).then((response) => {\r\n                let postJSON = JSON.parse(response.data.model)\r\n                let postObject = {\r\n                    'pk': postJSON[0]['pk'],\r\n                    'material': postJSON[0]['fields']['material'],\r\n                    'profile': postJSON[0]['fields']['profile'],\r\n                    'author_name': postJSON[0]['fields']['author_name'],\r\n                    'title': postJSON[0]['fields']['title'],\r\n                    'body': postJSON[0]['fields']['body'],\r\n                    'category': postJSON[0]['fields']['category'],\r\n                    'date': postJSON[0]['fields']['date'],\r\n                    'last_modified': postJSON[0]['fields']['last_modified'],\r\n                };\r\n                setPost(postObject)\r\n                // console.log(postObject)\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n\r\n        if (replies === null) {\r\n            APIUtility.get('/api/reply/get-by-post/' + id_thread, {}).then((response) => {\r\n                console.log(response.data)\r\n                let repliesJSON = JSON.parse(response.data.replies)\r\n                if (repliesJSON.length == 0) {\r\n                    return;\r\n                }\r\n                setReplies(repliesJSON)\r\n                // console.log(repliesJSON)\r\n            });\r\n            setIsLoadingReplies(false);\r\n        }\r\n\r\n    }, [])\r\n    if (isLoading) {\r\n        return (<>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ minHeight: '100vh', marginTop: '60px', padding: '30px 0px' }}\r\n                >\r\n                    <Grid item>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </>);\r\n    }\r\n    return (\r\n        <>\r\n            {isDialogOpen && (\r\n                <Snackbar\r\n                    open={isDialogOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={() => setIsDialogOpen(false)}\r\n                >\r\n                    <Alert severity=\"success\" onClose={() => setIsDialogOpen(false)}>\r\n                        Berhasil {query.get('state') == \"success-create\" ? \"menulis\" : query.get('state') == \"success-edit\" ? \"Mengubah\" : \"menghapus\"} komentar !\r\n                </Alert>\r\n                </Snackbar>\r\n            )}\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '100vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={listBreadCrumb} />\r\n                    <Grid item style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button onClick={props.backToPrevious} variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 16px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <h2 style={{ margin: \"0 10px 10px 10px\" }}>Forum Diskusi</h2>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    {post == null ?\r\n                                        <Skeleton variant=\"text\" />\r\n                                        : <h3 style={{ margin: \"0 10px 0 10px\" }}>{post.title}</h3>\r\n                                    }\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ height: '16px' }} />\r\n\r\n                                <Grid item style={{ padding: '5px 10px', width: \"100%\" }}>\r\n                                    {post == null ?\r\n                                        <CircularProgress />\r\n                                        :\r\n                                        <ThreadCard\r\n                                            isOutlined={true}\r\n                                            Title={post['title']}\r\n                                            TimeStamp={post['last_modified']}\r\n                                            Author={post['author_name']}\r\n                                            changePage={props.changePage}\r\n                                            id_gaya_belajar={id_gaya_belajar}\r\n                                            id_course={id_course}\r\n                                            id_materi={id_materi}\r\n                                            id_post={post['pk']}\r\n                                            isThreadStarter={true}\r\n                                            Text={post['body']}\r\n                                            isEditable={userService.getName().toLowerCase() === post['author_name'].toLowerCase()}\r\n                                        />\r\n                                    }\r\n\r\n                                </Grid>\r\n                                {isLoadingReplies || replies == null ?\r\n                                    <></>\r\n                                    :\r\n                                    replies.map((reply) => {\r\n                                        return (\r\n                                            <Grid item style={{ padding: '5px 10px 5px 30px ', width: \"100%\" }}>\r\n                                                <ThreadReplyCard\r\n                                                    TimeStamp={reply['fields']['last_modified']}\r\n                                                    Author={reply['fields']['author_name']}\r\n                                                    Text={reply['fields'].body}\r\n                                                    changePage={props.changePage}\r\n                                                    id_gaya_belajar={id_gaya_belajar}\r\n                                                    id_course={id_course}\r\n                                                    id_materi={id_materi}\r\n                                                    id_post={id_thread}\r\n                                                    id_reply={reply.pk}\r\n                                                    isEditable={userService.getName().toLowerCase() === reply['fields']['author_name'].toLowerCase()}\r\n                                                />\r\n                                            </Grid>\r\n                                        );\r\n                                    })\r\n\r\n                                }\r\n                            </Grid>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { ThreadPage };","D:\\Arnas\\Code\\skripz\\src\\components\\ThreadReplyCard.js",["297","298","299","300","301"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Avatar, Typography, Link, Button } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport MarkdownView from 'react-showdown';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Moment from 'react-moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: '100%'\r\n    },\r\n    media: {\r\n        width: 180,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function ThreadReplyCard(props) {\r\n    const { Title, Author, Text, TimeStamp, isEditable, id_course, id_materi, id_post, id_reply } = props;\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n        console.log(\"ayy\")\r\n    };\r\n\r\n    const handleEdit = (event) => {\r\n        event.preventDefault()\r\n        props.changePage(\"/course/\" + id_course + \"/materi/\" + id_materi + \"/thread/\" + id_post + \"/reply/\" + id_reply + \"/edit\");\r\n    };\r\n\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Grid container direction=\"row\" spacing={2} style={{ padding: '12px' }} alignItems=\"flex-start\" alignContent=\"center\" >\r\n                <Grid item xs={1}>\r\n                    <Avatar>{Author[0]}</Avatar>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <p style={{ margin: '0px', color: '#8F8F8F' }}>{Author} - <Moment format=\"DD MMM YYYY hh:mm\" >{TimeStamp}</Moment></p>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <MarkdownView\r\n                                markdown={Text}\r\n                                options={{ tables: true, emoji: true }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ height: '6px' }} gutterBottom />\r\n                        </Grid>\r\n                        {isEditable ? <Grid item xs={3}>\r\n                            <Link style={{ color: '#bdbdbd' }} href='' onClick={handleEdit}>\r\n                                <b >Edit</b>\r\n                            </Link>\r\n                        </Grid> : <></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n","D:\\Arnas\\Code\\skripz\\src\\components\\QuestionItem.js",["302","303","304","305","306","307","308","309"],"D:\\Arnas\\Code\\skripz\\src\\pages\\StartAssessment.js",["310"],"import React, { useState } from 'react';\r\nimport { fade, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, Card } from '@material-ui/core';\r\nimport { Appbar } from '../components/Appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    media: {\r\n        width: '246px',\r\n        height: '177px'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.55),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.75),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nfunction StartAssessment(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const list = [\r\n        { color: \"inherit\", link: \"/sister\", name: \"Sistem Interaksi\" },\r\n        { color: \"inherit\", link: \"/materi\", name: \"Bab 1. Pengantar Sistem Informasi\" },\r\n        { color: \"primary\", link: \"/assessment/start\", name: \"Uji Pemahaman\" },\r\n    ];\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: theme.palette.getContrastText(red[500]),\r\n            backgroundColor: red[500],\r\n            '&:hover': {\r\n                backgroundColor: red[700],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n\r\n    function handleClickAssessment() {\r\n        props.changePage(\"/course/\" + props.gayaBelajar + \"/\" + props.courseId + \"/materi/\" + props.materiID + \"/assessment\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '30vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={list} />\r\n                    <Grid item xs style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button onClick={props.backToPrevious} variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Card style={{ padding: '0px 150px' }}>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 0px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <b style={{ fontSize: '24px' }}>Uji Pemahaman : Pengantar Sistem Interaksi</b>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <p style={{ margin: '4px', fontSize: '12px' }}>Quiz uji pemahaman ini terdiri dari 10 soal pilihan ganda. Soal dipilih secara acak dari bank soal latihan</p>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                            <Typography component=\"div\" style={{ height: '36px' }} />\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 16px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleClickAssessment}>\r\n                                        Mulai Quiz\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography component=\"div\" style={{ width: '16px' }} />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <ColorButton variant=\"contained\" startIcon={<ArrowBackIcon />} onClick={props.backToPrevious}>\r\n                                        Batal\r\n                                    </ColorButton>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <Typography component=\"div\" style={{ height: '60vh' }} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { StartAssessment };","D:\\Arnas\\Code\\skripz\\src\\pages\\AssessmentPage.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\EditThreadPage.js",["311","312","313","314","315","316"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { Redirect } from \"react-router\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, Card, Snackbar, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions, } from '@material-ui/core';\r\nimport { Appbar } from '../components/Appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport TextFieldOutline from '../components/TextFieldOutline';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'react-mde/lib/styles/css/react-mde-all.css';\r\nimport { Alert, Skeleton } from \"@material-ui/lab\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport APIUtility from '../utils/APIUtility';\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n}));\r\n\r\nfunction EditThreadPage(props) {\r\n\r\n    const classes = useStyles();\r\n    const { id_gaya_belajar, id_course, id_materi, id_thread } = useParams();\r\n    const [value, setValue] = useState(\"**Hello world!!!**\");\r\n    const [selectedTab, setSelectedTab] = useState(\"write\");\r\n    const [nextState, setNextState] = useState(\"\");\r\n    const title = useForm(\"\");\r\n    const category = useForm(0);\r\n    const [post, setPost] = useState(null);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n    const [isSuccessDialogOpen, setIsSuccessDialogOpen] = useState(false);\r\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const list = [\r\n        { color: \"inherit\", link: \"/sister\", name: \"Sistem Interaksi\" },\r\n        { color: \"inherit\", link: \"/materi\", name: \"Bab 1. Pengantar Sistem Informasi\" },\r\n        { color: \"inherit\", link: \"/thread\", name: \"Forum Diskusi\" },\r\n        { color: \"primary\", link: \"/thread/new\", name: \"Buat Thread\" },\r\n    ];\r\n\r\n    function useForm(defaultValue, regex) {\r\n        const [value, setValue] = useState(defaultValue);\r\n        const [isError, setIsError] = useState(false);\r\n        const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n        const handleChange = (event, value) => {\r\n            if (event.target.value == \"\") {\r\n                setIsError(true);\r\n                setErrorMessage(\"Tidak boleh kosong\");\r\n            } else {\r\n                setIsError(false);\r\n                setErrorMessage(\"\");\r\n            }\r\n            setValue(event.target.value);\r\n        };\r\n\r\n        const handleChangeMultiSelector = (event, value) => {\r\n            event.persist();\r\n            setValue(value);\r\n        };\r\n\r\n        const handleChangeSelector = (event, value) => {\r\n            event.persist();\r\n            if (value == null) {\r\n                return;\r\n            }\r\n            setValue(value);\r\n        };\r\n\r\n        return {\r\n            value,\r\n            setValue,\r\n            isError,\r\n            setIsError,\r\n            errorMessage,\r\n            setErrorMessage,\r\n            handleChange,\r\n            handleChangeMultiSelector,\r\n            handleChangeSelector,\r\n        };\r\n    }\r\n\r\n    const handleClick = () => {\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (post === null) {\r\n            APIUtility.get('/api/post/' + id_thread, {}).then((response) => {\r\n                let postJSON = JSON.parse(response.data.model)\r\n                let postObject = {\r\n                    'pk': postJSON[0]['pk'],\r\n                    'material': postJSON[0]['fields']['material'],\r\n                    'profile': postJSON[0]['fields']['profile'],\r\n                    'author_name': postJSON[0]['fields']['author_name'],\r\n                    'title': postJSON[0]['fields']['title'],\r\n                    'body': postJSON[0]['fields']['body'],\r\n                    'category': postJSON[0]['fields']['category'],\r\n                    'date': postJSON[0]['fields']['date'],\r\n                    'last_modified': postJSON[0]['fields']['last_modified'],\r\n                };\r\n                setPost(postObject)\r\n                title.setValue(postObject.title)\r\n                setValue(postObject.body)\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const openDeleteDialog = () => {\r\n        setIsDeleteDialogOpen(true);\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        setIsLoading(true);\r\n        await APIUtility.post('/api/post/delete/' + id_thread + '/').then((response) => {\r\n            setIsLoading(false);\r\n            setNextState('delete');\r\n            setIsSuccessDialogOpen(true);\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        console.log(title.value)\r\n        setIsLoading(true);\r\n        if (\r\n            !title.value ||\r\n            title.isError\r\n        ) {\r\n            setIsDialogOpen(true);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        await APIUtility.post('/api/post/edit/' + id_thread + '/',\r\n            {\r\n                title: title.value,\r\n                category: 0,\r\n                body: value\r\n            }\r\n        ).then((response) => {\r\n            setIsLoading(false);\r\n            setNextState('success-edit');\r\n            setIsSuccessDialogOpen(true);\r\n        });\r\n        // setIsLoading(false);\r\n        // props.changePage(\"/thread\")\r\n    }\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    const converter = new Showdown.Converter({\r\n        tables: true,\r\n        simplifiedAutoLink: true,\r\n        strikethrough: true,\r\n        tasklists: true\r\n    });\r\n\r\n\r\n    if (isSuccessDialogOpen) {\r\n        return (\r\n            <>\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/\",\r\n                        search: \"?state=\" + nextState,\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n    if (isLoading) {\r\n        return (<>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ minHeight: '100vh', marginTop: '60px', padding: '30px 0px' }}\r\n                >\r\n                    <Grid item>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </>);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '100vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={list} />\r\n                    <Grid item style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button onClick={props.backToPrevious} variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />} onClick={handleClick}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 16px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <h2 style={{ margin: '10px 0px 0px 0px' }}>Buat Thread</h2>\r\n                                </Grid>\r\n                                <Grid item style={{ width: '80%', padding: '10px' }}>\r\n                                    {post == null ? <Skeleton /> :\r\n                                        <TextFieldOutline\r\n                                            value={title.value}\r\n                                            error={title.isError}\r\n                                            helperText={title.errorMessage}\r\n                                            fullWidth\r\n                                            id=\"outlined-basic\"\r\n                                            name=\"title\"\r\n                                            labels=\"Judul Diskusi *\"\r\n                                            onChange={title.handleChange}\r\n                                        />}\r\n                                </Grid>\r\n                                <Grid item style={{ width: '100%', padding: '10px' }}>\r\n                                    {post == null ? <Skeleton /> :\r\n                                        <ReactMde\r\n                                            value={value}\r\n                                            onChange={setValue}\r\n                                            selectedTab={selectedTab}\r\n                                            onTabChange={setSelectedTab}\r\n                                            generateMarkdownPreview={markdown =>\r\n                                                Promise.resolve(converter.makeHtml(markdown))\r\n                                            }\r\n                                            childProps={{\r\n                                                writeButton: {\r\n                                                    tabIndex: -1\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    }\r\n\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ height: '16px' }} />\r\n                                <Grid item>\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item>\r\n                                            <Button style={{ width: '100%', backgroundColor: \"crimson\" }} variant=\"contained\" color=\"primary\" onClick={openDeleteDialog}>Hapus diskusi</Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button style={{ width: '100%' }} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Simpan diskusi</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <Snackbar\r\n                open={isSuccessDialogOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => {\r\n                    setIsSuccessDialogOpen(false);\r\n                }}\r\n            >\r\n                <Alert\r\n                    severity=\"success\"\r\n                    onClose={() => {\r\n                        setIsSuccessDialogOpen(false);\r\n                    }}\r\n                >\r\n                    Berhasil mengubah thread !\r\n            </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n                open={isDialogOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => {\r\n                    setIsDialogOpen(false);\r\n                }}\r\n            >\r\n                <Alert\r\n                    severity=\"error\"\r\n                    onClose={() => {\r\n                        setIsDialogOpen(false);\r\n                    }}\r\n                >\r\n                    Pastikan kamu mengisi data dengan benar\r\n            </Alert>\r\n            </Snackbar>\r\n\r\n            <Dialog\r\n                open={isDeleteDialogOpen}\r\n                onClose={() => { setIsDeleteDialogOpen(false) }}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    Hapus diskusi ?\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Diskusi yang sudah dihapus tidak akan bisa dikembalikan. Seluruh Komentar dari diskusi juga akan dihapus bersamaan dengan diskusi.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { setIsDeleteDialogOpen(false) }} style={{ color: 'crimson' }}>\r\n                        Tidak\r\n                    </Button>\r\n                    <Button onClick={handleDelete} color=\"primary\" autoFocus>\r\n                        Ya\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { EditThreadPage };","D:\\Arnas\\Code\\skripz\\src\\pdf\\DesainInteraksi.js",[],["317","318"],"D:\\Arnas\\Code\\skripz\\src\\utils\\WindowDimension.js",[],"D:\\Arnas\\Code\\skripz\\src\\components\\TextFieldOutline.js",[],"D:\\Arnas\\Code\\skripz\\src\\pages\\WriteReplyPage.js",["319","320","321","322","323","324","325"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { Redirect } from \"react-router\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, Card, Snackbar } from '@material-ui/core';\r\nimport { Appbar } from '../components/Appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport TextFieldOutline from '../components/TextFieldOutline';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'react-mde/lib/styles/css/react-mde-all.css';\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport APIUtility from '../utils/APIUtility';\r\nimport ThreadCard from '../components/ThreadCard';\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n}));\r\n\r\nfunction WriteReplyPage(props) {\r\n\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const { id_gaya_belajar, id_course, id_materi, id_thread } = useParams();\r\n    const [value, setValue] = useState(\"**Hello world!!!**\");\r\n    const [selectedTab, setSelectedTab] = useState(\"write\");\r\n    const [nextState, setNextState] = useState(\"\");\r\n    const [isDialogOpen, setIsDialogOpen] = useState(query.get('state') != undefined);\r\n    const [isSuccessDialogOpen, setIsSuccessDialogOpen] = useState(false);\r\n    const [post, setPost] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [listBreadCrumb, setListBreadCrumb] = useState(\r\n        [\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course, name: \"Sistem Interaksi\" },\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi, name: \"Materi\" },\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread\", name: \"Forum Diskusi\" },\r\n            { color: \"inherit\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/details/\" + id_thread, name: \"Thread\" },\r\n            { color: \"primary\", link: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread\" + id_thread + \"/reply/new\", name: \"Balas Thread\" },\r\n        ]\r\n    );\r\n\r\n    const handleClick = () => {\r\n\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        console.log(value)\r\n        setIsLoading(true);\r\n        if (\r\n            value == ''\r\n        ) {\r\n            setIsDialogOpen(true);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        await APIUtility.post('/api/post/' + id_thread + '/createreply/',\r\n            {\r\n                body: value\r\n            }\r\n        ).then((response) => {\r\n            setIsLoading(false);\r\n            setNextState(\"success-create\");\r\n            setIsSuccessDialogOpen(true);\r\n        });\r\n        // setIsLoading(false);\r\n        // props.changePage(\"/thread\")\r\n    }\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    const converter = new Showdown.Converter({\r\n        tables: true,\r\n        simplifiedAutoLink: true,\r\n        strikethrough: true,\r\n        tasklists: true\r\n    });\r\n    useEffect(() => {\r\n        if (post === null) {\r\n            APIUtility.get('/api/post/' + id_thread, {}).then((response) => {\r\n                let postJSON = JSON.parse(response.data.model)\r\n                let postObject = {\r\n                    'pk': postJSON[0]['pk'],\r\n                    'material': postJSON[0]['fields']['material'],\r\n                    'profile': postJSON[0]['fields']['profile'],\r\n                    'author_name': postJSON[0]['fields']['author_name'],\r\n                    'title': postJSON[0]['fields']['title'],\r\n                    'body': postJSON[0]['fields']['body'],\r\n                    'category': postJSON[0]['fields']['category'],\r\n                    'date': postJSON[0]['fields']['date'],\r\n                    'last_modified': postJSON[0]['fields']['last_modified'],\r\n                };\r\n                setPost(postObject)\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n\r\n    }, [])\r\n\r\n    if (isSuccessDialogOpen) {\r\n        return (\r\n            <>\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/details/\" + id_thread + \"/\",\r\n                        search: \"?state=\" + nextState,\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n    if (isLoading) {\r\n        return (<>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ minHeight: '100vh', marginTop: '60px', padding: '30px 0px' }}\r\n                >\r\n                    <Grid item>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </>);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '100vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={listBreadCrumb} />\r\n                    <Grid item style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button onClick={props.backToPrevious} variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />} onClick={handleClick}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {post == null ? <CircularProgress /> :\r\n                            <ThreadCard\r\n                                isOutlined={true}\r\n                                Title={post['title']}\r\n                                TimeStamp={post['last_modified']}\r\n                                Author={post['author_name']}\r\n                                changePage={props.changePage}\r\n                                id_gaya_belajar={id_gaya_belajar}\r\n                                id_course={id_course}\r\n                                id_materi={id_materi}\r\n                                id_post={id_thread}\r\n                                Text={post['body']}\r\n                            />\r\n                        }\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography style={{ height: '16px' }}></Typography>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 16px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <h2 style={{ margin: '10px 0px 0px 0px' }}>Tulis Komentar</h2>\r\n                                </Grid>\r\n                                <Grid item style={{ width: '100%', padding: '10px' }}>\r\n                                    <ReactMde\r\n                                        value={value}\r\n                                        onChange={setValue}\r\n                                        selectedTab={selectedTab}\r\n                                        onTabChange={setSelectedTab}\r\n                                        generateMarkdownPreview={markdown =>\r\n                                            Promise.resolve(converter.makeHtml(markdown))\r\n                                        }\r\n                                        childProps={{\r\n                                            writeButton: {\r\n                                                tabIndex: -1\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ height: '16px' }} />\r\n                                <Grid item>\r\n                                    <Button style={{ width: '100%' }} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Tulis komentar</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <Snackbar\r\n                open={isSuccessDialogOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => {\r\n                    setIsSuccessDialogOpen(false);\r\n                }}\r\n            >\r\n                <Alert\r\n                    severity=\"success\"\r\n                    onClose={() => {\r\n                        setIsSuccessDialogOpen(false);\r\n                    }}\r\n                >\r\n                    Berhasil menulis komentar !\r\n            </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n                open={isDialogOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => {\r\n                    setIsDialogOpen(false);\r\n                }}\r\n            >\r\n                <Alert\r\n                    severity=\"error\"\r\n                    onClose={() => {\r\n                        setIsDialogOpen(false);\r\n                    }}\r\n                >\r\n                    Pastikan kamu mengisi data dengan benar\r\n            </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { WriteReplyPage };","D:\\Arnas\\Code\\skripz\\src\\pages\\EditReplyPage.js",["326","327","328","329","330","331"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { Redirect } from \"react-router\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, Card, Snackbar, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions, } from '@material-ui/core';\r\nimport { Appbar } from '../components/Appbar';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport TextFieldOutline from '../components/TextFieldOutline';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'react-mde/lib/styles/css/react-mde-all.css';\r\nimport { Alert, Skeleton } from \"@material-ui/lab\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport APIUtility from '../utils/APIUtility';\r\nimport ThreadCard from '../components/ThreadCard';\r\n\r\n//AcSenVisGIo\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n}));\r\n\r\nfunction EditReplyPage(props) {\r\n\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const { id_course, id_gaya_belajar, id_materi, id_thread, id_reply } = useParams();\r\n    const [value, setValue] = useState(\"**Hello world!!!**\");\r\n    const [selectedTab, setSelectedTab] = useState(\"write\");\r\n    const [nextState, setNextState] = useState(\"\");\r\n    const [isDialogOpen, setIsDialogOpen] = useState(query.get('state') != undefined);\r\n    const [isSuccessDialogOpen, setIsSuccessDialogOpen] = useState(false);\r\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n    const [post, setPost] = useState(null);\r\n    const [reply, setReply] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const list = [\r\n        { color: \"inherit\", link: \"/sister\", name: \"Sistem Interaksi\" },\r\n        { color: \"inherit\", link: \"/materi\", name: \"Bab 1. Pengantar Sistem Informasi\" },\r\n        { color: \"inherit\", link: \"/thread\", name: \"Forum Diskusi\" },\r\n        { color: \"primary\", link: \"/thread/new\", name: \"Buat Thread\" },\r\n    ];\r\n\r\n    const handleClick = () => {\r\n\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        console.log(value)\r\n        setIsLoading(true);\r\n        if (\r\n            value == ''\r\n        ) {\r\n            setIsDialogOpen(true);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        await APIUtility.post('/api/reply/edit/' + id_reply + '/',\r\n            {\r\n                body: value\r\n            }\r\n        ).then((response) => {\r\n            setIsLoading(false);\r\n            setNextState(\"success-edit\");\r\n            setIsSuccessDialogOpen(true);\r\n        });\r\n        // setIsLoading(false);\r\n        // props.changePage(\"/thread\")\r\n    }\r\n\r\n    const openDeleteDialog = () => {\r\n        setIsDeleteDialogOpen(true);\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        setIsLoading(true);\r\n        await APIUtility.post('/api/reply/delete/' + id_reply + '/').then((response) => {\r\n            setIsLoading(false);\r\n            setNextState('delete');\r\n            setIsSuccessDialogOpen(true);\r\n        })\r\n    }\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    const converter = new Showdown.Converter({\r\n        tables: true,\r\n        simplifiedAutoLink: true,\r\n        strikethrough: true,\r\n        tasklists: true\r\n    });\r\n    useEffect(() => {\r\n        if (post === null) {\r\n            setIsLoading(true);\r\n            APIUtility.get('/api/post/' + id_thread, {}).then((response) => {\r\n                let postJSON = JSON.parse(response.data.model)\r\n                let postObject = {\r\n                    'pk': postJSON[0]['pk'],\r\n                    'material': postJSON[0]['fields']['material'],\r\n                    'profile': postJSON[0]['fields']['profile'],\r\n                    'author_name': postJSON[0]['fields']['author_name'],\r\n                    'title': postJSON[0]['fields']['title'],\r\n                    'body': postJSON[0]['fields']['body'],\r\n                    'category': postJSON[0]['fields']['category'],\r\n                    'date': postJSON[0]['fields']['date'],\r\n                    'last_modified': postJSON[0]['fields']['last_modified'],\r\n                };\r\n                setPost(postObject)\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n\r\n        if (reply === null) {\r\n            setIsLoading(true);\r\n            APIUtility.get('/api/reply/' + id_reply, {}).then((response) => {\r\n                let replyJSON = JSON.parse(response.data.model)\r\n                console.log(replyJSON)\r\n                let replyObject = {\r\n                    'pk': replyJSON[0]['pk'],\r\n                    'post': replyJSON[0]['fields']['post'],\r\n                    'profile': replyJSON[0]['fields']['profile'],\r\n                    'author_name': replyJSON[0]['fields']['author_name'],\r\n                    'body': replyJSON[0]['fields']['body'],\r\n                    'date': replyJSON[0]['fields']['date'],\r\n                    'last_modified': replyJSON[0]['fields']['last_modified'],\r\n                };\r\n                setReply(replyObject)\r\n                setValue(replyObject.body)\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n\r\n    }, [])\r\n\r\n    if (isSuccessDialogOpen) {\r\n        return (\r\n            <Redirect>\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/course/\" + id_gaya_belajar + \"/\" + id_course + \"/materi/\" + id_materi + \"/thread/details/\" + id_thread + \"/\",\r\n                        search: \"?state=\" + nextState,\r\n                    }}\r\n                />\r\n            </Redirect>\r\n        );\r\n    }\r\n    if (isLoading) {\r\n        return (<>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ minHeight: '100vh', marginTop: '60px', padding: '30px 0px' }}\r\n                >\r\n                    <Grid item>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </>);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Appbar changePage={props.changePage} />\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    style={{ backgroundColor: '#E5E5E5', minHeight: '100vh', marginTop: '60px', padding: '30px 15%' }}\r\n                >\r\n                    <Breadcrumb list={list} />\r\n                    <Grid item style={{ margin: '0px 0px 12px 0px' }}>\r\n                        <Button onClick={props.backToPrevious} variant=\"contained\" color=\"primary\" startIcon={<ArrowBackIcon />} onClick={handleClick}>\r\n                            Kembali\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {post == null ? <CircularProgress /> :\r\n                            <ThreadCard\r\n                                isOutlined={true}\r\n                                Title={post['title']}\r\n                                TimeStamp={post['last_modified']}\r\n                                Author={post['author_name']}\r\n                                changePage={props.changePage}\r\n                                id_course={id_course}\r\n                                id_materi={id_materi}\r\n                                id_post={id_thread}\r\n                                Text={post['body']}\r\n                            />\r\n                        }\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography style={{ height: '16px' }}></Typography>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Card>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                alignContent=\"center\"\r\n                                style={{ padding: '16px 0px 16px 0px' }}\r\n                            >\r\n                                <Grid item>\r\n                                    <h2 style={{ margin: '10px 0px 0px 0px' }}>Tulis Komentar</h2>\r\n                                </Grid>\r\n                                <Grid item style={{ width: '100%', padding: '10px' }}>\r\n                                    {reply == null ? <Skeleton /> :\r\n                                        <ReactMde\r\n                                            value={value}\r\n                                            onChange={setValue}\r\n                                            selectedTab={selectedTab}\r\n                                            onTabChange={setSelectedTab}\r\n                                            generateMarkdownPreview={markdown =>\r\n                                                Promise.resolve(converter.makeHtml(markdown))\r\n                                            }\r\n                                            childProps={{\r\n                                                writeButton: {\r\n                                                    tabIndex: -1\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    }\r\n\r\n                                </Grid>\r\n                                <Typography component=\"div\" style={{ height: '16px' }} />\r\n                                <Grid item>\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item>\r\n                                            <Button style={{ width: '100%', backgroundColor: \"crimson\" }} variant=\"contained\" color=\"primary\" onClick={openDeleteDialog}>Hapus komentar</Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button style={{ width: '100%' }} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Tulis komentar</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <Snackbar\r\n                open={isSuccessDialogOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => {\r\n                    setIsSuccessDialogOpen(false);\r\n                }}\r\n            >\r\n                <Alert\r\n                    severity=\"success\"\r\n                    onClose={() => {\r\n                        setIsSuccessDialogOpen(false);\r\n                    }}\r\n                >\r\n                    Berhasil menulis komentar !\r\n            </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n                open={isDialogOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => {\r\n                    setIsDialogOpen(false);\r\n                }}\r\n            >\r\n                <Alert\r\n                    severity=\"error\"\r\n                    onClose={() => {\r\n                        setIsDialogOpen(false);\r\n                    }}\r\n                >\r\n                    Pastikan kamu mengisi data dengan benar\r\n            </Alert>\r\n            </Snackbar>\r\n\r\n            <Dialog\r\n                open={isDeleteDialogOpen}\r\n                onClose={() => { setIsDeleteDialogOpen(false) }}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    Hapus komentar ?\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Komentar yang sudah dihapus tidak akan bisa dikembalikan.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { setIsDeleteDialogOpen(false) }} style={{ color: 'crimson' }}>\r\n                        Tidak\r\n                    </Button>\r\n                    <Button onClick={handleDelete} color=\"primary\" autoFocus>\r\n                        Ya\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { EditReplyPage };","D:\\Arnas\\Code\\skripz\\src\\pdf\\PdfHandler.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi1.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi3.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi5.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi4.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi2.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi6.js",[],"D:\\Arnas\\Code\\skripz\\src\\pdf\\Materi7.js",[],{"ruleId":"332","severity":1,"message":"333","line":3,"column":35,"nodeType":"334","messageId":"335","endLine":3,"endColumn":45},{"ruleId":"332","severity":1,"message":"336","line":3,"column":66,"nodeType":"334","messageId":"335","endLine":3,"endColumn":80},{"ruleId":"332","severity":1,"message":"337","line":3,"column":82,"nodeType":"334","messageId":"335","endLine":3,"endColumn":93},{"ruleId":"332","severity":1,"message":"338","line":3,"column":95,"nodeType":"334","messageId":"335","endLine":3,"endColumn":103},{"ruleId":"332","severity":1,"message":"339","line":3,"column":105,"nodeType":"334","messageId":"335","endLine":3,"endColumn":117},{"ruleId":"332","severity":1,"message":"340","line":43,"column":11,"nodeType":"334","messageId":"335","endLine":43,"endColumn":28},{"ruleId":"332","severity":1,"message":"341","line":1,"column":17,"nodeType":"334","messageId":"335","endLine":1,"endColumn":25},{"ruleId":"332","severity":1,"message":"342","line":3,"column":46,"nodeType":"334","messageId":"335","endLine":3,"endColumn":51},{"ruleId":"332","severity":1,"message":"343","line":3,"column":53,"nodeType":"334","messageId":"335","endLine":3,"endColumn":59},{"ruleId":"332","severity":1,"message":"336","line":3,"column":67,"nodeType":"334","messageId":"335","endLine":3,"endColumn":81},{"ruleId":"332","severity":1,"message":"337","line":3,"column":83,"nodeType":"334","messageId":"335","endLine":3,"endColumn":94},{"ruleId":"332","severity":1,"message":"338","line":3,"column":96,"nodeType":"334","messageId":"335","endLine":3,"endColumn":104},{"ruleId":"332","severity":1,"message":"339","line":3,"column":106,"nodeType":"334","messageId":"335","endLine":3,"endColumn":118},{"ruleId":"332","severity":1,"message":"344","line":12,"column":8,"nodeType":"334","messageId":"335","endLine":12,"endColumn":18},{"ruleId":"332","severity":1,"message":"345","line":14,"column":8,"nodeType":"334","messageId":"335","endLine":14,"endColumn":17},{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","replacedBy":"349"},{"ruleId":"346","replacedBy":"350"},{"ruleId":"348","replacedBy":"351"},{"ruleId":"332","severity":1,"message":"352","line":6,"column":22,"nodeType":"334","messageId":"335","endLine":6,"endColumn":28},{"ruleId":"332","severity":1,"message":"353","line":8,"column":5,"nodeType":"334","messageId":"335","endLine":8,"endColumn":14},{"ruleId":"332","severity":1,"message":"354","line":1,"column":17,"nodeType":"334","messageId":"335","endLine":1,"endColumn":26},{"ruleId":"332","severity":1,"message":"341","line":1,"column":28,"nodeType":"334","messageId":"335","endLine":1,"endColumn":36},{"ruleId":"332","severity":1,"message":"355","line":9,"column":10,"nodeType":"334","messageId":"335","endLine":9,"endColumn":14},{"ruleId":"332","severity":1,"message":"342","line":3,"column":33,"nodeType":"334","messageId":"335","endLine":3,"endColumn":38},{"ruleId":"332","severity":1,"message":"343","line":3,"column":62,"nodeType":"334","messageId":"335","endLine":3,"endColumn":68},{"ruleId":"332","severity":1,"message":"356","line":64,"column":13,"nodeType":"334","messageId":"335","endLine":64,"endColumn":19},{"ruleId":"332","severity":1,"message":"356","line":196,"column":13,"nodeType":"334","messageId":"335","endLine":196,"endColumn":19},{"ruleId":"332","severity":1,"message":"354","line":1,"column":17,"nodeType":"334","messageId":"335","endLine":1,"endColumn":26},{"ruleId":"332","severity":1,"message":"341","line":1,"column":28,"nodeType":"334","messageId":"335","endLine":1,"endColumn":36},{"ruleId":"332","severity":1,"message":"357","line":2,"column":10,"nodeType":"334","messageId":"335","endLine":2,"endColumn":20},{"ruleId":"332","severity":1,"message":"358","line":3,"column":16,"nodeType":"334","messageId":"335","endLine":3,"endColumn":22},{"ruleId":"332","severity":1,"message":"359","line":6,"column":10,"nodeType":"334","messageId":"335","endLine":6,"endColumn":14},{"ruleId":"332","severity":1,"message":"360","line":6,"column":16,"nodeType":"334","messageId":"335","endLine":6,"endColumn":20},{"ruleId":"332","severity":1,"message":"361","line":3,"column":64,"nodeType":"334","messageId":"335","endLine":3,"endColumn":80},{"ruleId":"362","severity":1,"message":"363","line":73,"column":24,"nodeType":"364","messageId":"365","endLine":73,"endColumn":26},{"ruleId":"366","severity":1,"message":"367","line":82,"column":6,"nodeType":"368","endLine":82,"endColumn":8,"suggestions":"369"},{"ruleId":"332","severity":1,"message":"358","line":3,"column":16,"nodeType":"334","messageId":"335","endLine":3,"endColumn":22},{"ruleId":"332","severity":1,"message":"370","line":9,"column":11,"nodeType":"334","messageId":"335","endLine":9,"endColumn":22},{"ruleId":"332","severity":1,"message":"371","line":14,"column":11,"nodeType":"334","messageId":"335","endLine":14,"endColumn":23},{"ruleId":"332","severity":1,"message":"372","line":17,"column":11,"nodeType":"334","messageId":"335","endLine":17,"endColumn":23},{"ruleId":"366","severity":1,"message":"373","line":35,"column":8,"nodeType":"368","endLine":35,"endColumn":10,"suggestions":"374"},{"ruleId":"332","severity":1,"message":"375","line":2,"column":28,"nodeType":"334","messageId":"335","endLine":2,"endColumn":36},{"ruleId":"332","severity":1,"message":"376","line":20,"column":8,"nodeType":"334","messageId":"335","endLine":20,"endColumn":21},{"ruleId":"362","severity":1,"message":"363","line":139,"column":43,"nodeType":"364","messageId":"365","endLine":139,"endColumn":45},{"ruleId":"366","severity":1,"message":"377","line":146,"column":8,"nodeType":"368","endLine":146,"endColumn":10,"suggestions":"378"},{"ruleId":"379","severity":1,"message":"380","line":150,"column":38,"nodeType":"381","messageId":"382","endLine":150,"endColumn":40},{"ruleId":"332","severity":1,"message":"383","line":165,"column":14,"nodeType":"334","messageId":"335","endLine":165,"endColumn":25},{"ruleId":"332","severity":1,"message":"384","line":178,"column":11,"nodeType":"334","messageId":"335","endLine":178,"endColumn":25},{"ruleId":"385","severity":1,"message":"386","line":213,"column":64,"nodeType":"387","endLine":213,"endColumn":94},{"ruleId":"362","severity":1,"message":"363","line":292,"column":85,"nodeType":"364","messageId":"365","endLine":292,"endColumn":87},{"ruleId":"362","severity":1,"message":"363","line":314,"column":49,"nodeType":"364","messageId":"365","endLine":314,"endColumn":51},{"ruleId":"362","severity":1,"message":"363","line":93,"column":28,"nodeType":"364","messageId":"365","endLine":93,"endColumn":30},{"ruleId":"362","severity":1,"message":"363","line":111,"column":29,"nodeType":"364","messageId":"365","endLine":111,"endColumn":31},{"ruleId":"366","severity":1,"message":"388","line":122,"column":8,"nodeType":"368","endLine":122,"endColumn":10,"suggestions":"389"},{"ruleId":"362","severity":1,"message":"363","line":160,"column":47,"nodeType":"364","messageId":"365","endLine":160,"endColumn":49},{"ruleId":"362","severity":1,"message":"363","line":169,"column":47,"nodeType":"364","messageId":"365","endLine":169,"endColumn":49},{"ruleId":"362","severity":1,"message":"363","line":186,"column":46,"nodeType":"364","messageId":"365","endLine":186,"endColumn":48},{"ruleId":"362","severity":1,"message":"363","line":192,"column":47,"nodeType":"364","messageId":"365","endLine":192,"endColumn":49},{"ruleId":"362","severity":1,"message":"363","line":199,"column":57,"nodeType":"364","messageId":"365","endLine":199,"endColumn":59},{"ruleId":"362","severity":1,"message":"363","line":217,"column":37,"nodeType":"364","messageId":"365","endLine":217,"endColumn":39},{"ruleId":"332","severity":1,"message":"354","line":1,"column":17,"nodeType":"334","messageId":"335","endLine":1,"endColumn":26},{"ruleId":"332","severity":1,"message":"355","line":9,"column":10,"nodeType":"334","messageId":"335","endLine":9,"endColumn":14},{"ruleId":"332","severity":1,"message":"390","line":23,"column":21,"nodeType":"334","messageId":"335","endLine":23,"endColumn":31},{"ruleId":"332","severity":1,"message":"354","line":1,"column":17,"nodeType":"334","messageId":"335","endLine":1,"endColumn":26},{"ruleId":"332","severity":1,"message":"341","line":1,"column":28,"nodeType":"334","messageId":"335","endLine":1,"endColumn":36},{"ruleId":"332","severity":1,"message":"357","line":2,"column":10,"nodeType":"334","messageId":"335","endLine":2,"endColumn":20},{"ruleId":"332","severity":1,"message":"358","line":3,"column":16,"nodeType":"334","messageId":"335","endLine":3,"endColumn":22},{"ruleId":"332","severity":1,"message":"391","line":1,"column":10,"nodeType":"334","messageId":"335","endLine":1,"endColumn":20},{"ruleId":"362","severity":1,"message":"363","line":26,"column":35,"nodeType":"364","messageId":"365","endLine":26,"endColumn":37},{"ruleId":"332","severity":1,"message":"392","line":7,"column":7,"nodeType":"334","messageId":"335","endLine":7,"endColumn":16},{"ruleId":"332","severity":1,"message":"393","line":32,"column":34,"nodeType":"334","messageId":"335","endLine":32,"endColumn":43},{"ruleId":"332","severity":1,"message":"354","line":1,"column":27,"nodeType":"334","messageId":"335","endLine":1,"endColumn":36},{"ruleId":"332","severity":1,"message":"394","line":2,"column":21,"nodeType":"334","messageId":"335","endLine":2,"endColumn":32},{"ruleId":"332","severity":1,"message":"395","line":32,"column":11,"nodeType":"334","messageId":"335","endLine":32,"endColumn":19},{"ruleId":"332","severity":1,"message":"396","line":38,"column":28,"nodeType":"334","messageId":"335","endLine":38,"endColumn":45},{"ruleId":"362","severity":1,"message":"363","line":53,"column":36,"nodeType":"364","messageId":"365","endLine":53,"endColumn":38},{"ruleId":"332","severity":1,"message":"384","line":119,"column":11,"nodeType":"334","messageId":"335","endLine":119,"endColumn":25},{"ruleId":"385","severity":1,"message":"386","line":175,"column":130,"nodeType":"387","endLine":175,"endColumn":151},{"ruleId":"362","severity":1,"message":"397","line":35,"column":73,"nodeType":"364","messageId":"365","endLine":35,"endColumn":75},{"ruleId":"332","severity":1,"message":"396","line":36,"column":28,"nodeType":"334","messageId":"335","endLine":36,"endColumn":45},{"ruleId":"332","severity":1,"message":"398","line":44,"column":11,"nodeType":"334","messageId":"335","endLine":44,"endColumn":15},{"ruleId":"332","severity":1,"message":"384","line":54,"column":11,"nodeType":"334","messageId":"335","endLine":54,"endColumn":25},{"ruleId":"366","severity":1,"message":"399","line":66,"column":8,"nodeType":"368","endLine":66,"endColumn":10,"suggestions":"400"},{"ruleId":"362","severity":1,"message":"363","line":93,"column":54,"nodeType":"364","messageId":"365","endLine":93,"endColumn":56},{"ruleId":"362","severity":1,"message":"363","line":93,"column":107,"nodeType":"364","messageId":"365","endLine":93,"endColumn":109},{"ruleId":"332","severity":1,"message":"392","line":9,"column":7,"nodeType":"334","messageId":"335","endLine":9,"endColumn":16},{"ruleId":"362","severity":1,"message":"397","line":84,"column":49,"nodeType":"364","messageId":"365","endLine":84,"endColumn":51},{"ruleId":"362","severity":1,"message":"397","line":101,"column":49,"nodeType":"364","messageId":"365","endLine":101,"endColumn":51},{"ruleId":"362","severity":1,"message":"397","line":38,"column":73,"nodeType":"364","messageId":"365","endLine":38,"endColumn":75},{"ruleId":"332","severity":1,"message":"396","line":40,"column":28,"nodeType":"334","messageId":"335","endLine":40,"endColumn":45},{"ruleId":"332","severity":1,"message":"383","line":48,"column":14,"nodeType":"334","messageId":"335","endLine":48,"endColumn":25},{"ruleId":"332","severity":1,"message":"384","line":52,"column":11,"nodeType":"334","messageId":"335","endLine":52,"endColumn":25},{"ruleId":"332","severity":1,"message":"401","line":56,"column":11,"nodeType":"334","messageId":"335","endLine":56,"endColumn":20},{"ruleId":"362","severity":1,"message":"363","line":88,"column":40,"nodeType":"364","messageId":"365","endLine":88,"endColumn":42},{"ruleId":"366","severity":1,"message":"402","line":97,"column":8,"nodeType":"368","endLine":97,"endColumn":10,"suggestions":"403"},{"ruleId":"362","severity":1,"message":"363","line":125,"column":54,"nodeType":"364","messageId":"365","endLine":125,"endColumn":56},{"ruleId":"362","severity":1,"message":"363","line":125,"column":107,"nodeType":"364","messageId":"365","endLine":125,"endColumn":109},{"ruleId":"332","severity":1,"message":"358","line":3,"column":49,"nodeType":"334","messageId":"335","endLine":3,"endColumn":55},{"ruleId":"332","severity":1,"message":"404","line":6,"column":8,"nodeType":"334","messageId":"335","endLine":6,"endColumn":15},{"ruleId":"332","severity":1,"message":"392","line":9,"column":7,"nodeType":"334","messageId":"335","endLine":9,"endColumn":16},{"ruleId":"332","severity":1,"message":"405","line":34,"column":13,"nodeType":"334","messageId":"335","endLine":34,"endColumn":18},{"ruleId":"332","severity":1,"message":"384","line":36,"column":11,"nodeType":"334","messageId":"335","endLine":36,"endColumn":25},{"ruleId":"332","severity":1,"message":"406","line":3,"column":10,"nodeType":"334","messageId":"335","endLine":3,"endColumn":19},{"ruleId":"332","severity":1,"message":"358","line":3,"column":27,"nodeType":"334","messageId":"335","endLine":3,"endColumn":33},{"ruleId":"332","severity":1,"message":"407","line":3,"column":59,"nodeType":"334","messageId":"335","endLine":3,"endColumn":68},{"ruleId":"332","severity":1,"message":"408","line":3,"column":70,"nodeType":"334","messageId":"335","endLine":3,"endColumn":74},{"ruleId":"332","severity":1,"message":"409","line":3,"column":94,"nodeType":"334","messageId":"335","endLine":3,"endColumn":108},{"ruleId":"332","severity":1,"message":"410","line":3,"column":110,"nodeType":"334","messageId":"335","endLine":3,"endColumn":118},{"ruleId":"332","severity":1,"message":"411","line":4,"column":8,"nodeType":"334","messageId":"335","endLine":4,"endColumn":18},{"ruleId":"332","severity":1,"message":"392","line":7,"column":7,"nodeType":"334","messageId":"335","endLine":7,"endColumn":16},{"ruleId":"332","severity":1,"message":"341","line":1,"column":17,"nodeType":"334","messageId":"335","endLine":1,"endColumn":25},{"ruleId":"332","severity":1,"message":"394","line":2,"column":21,"nodeType":"334","messageId":"335","endLine":2,"endColumn":32},{"ruleId":"332","severity":1,"message":"395","line":33,"column":11,"nodeType":"334","messageId":"335","endLine":33,"endColumn":19},{"ruleId":"362","severity":1,"message":"363","line":53,"column":36,"nodeType":"364","messageId":"365","endLine":53,"endColumn":38},{"ruleId":"366","severity":1,"message":"412","line":114,"column":8,"nodeType":"368","endLine":114,"endColumn":10,"suggestions":"413"},{"ruleId":"332","severity":1,"message":"384","line":157,"column":11,"nodeType":"334","messageId":"335","endLine":157,"endColumn":25},{"ruleId":"385","severity":1,"message":"386","line":213,"column":130,"nodeType":"387","endLine":213,"endColumn":151},{"ruleId":"346","replacedBy":"414"},{"ruleId":"348","replacedBy":"415"},{"ruleId":"332","severity":1,"message":"416","line":8,"column":8,"nodeType":"334","messageId":"335","endLine":8,"endColumn":24},{"ruleId":"362","severity":1,"message":"397","line":38,"column":73,"nodeType":"364","messageId":"365","endLine":38,"endColumn":75},{"ruleId":"332","severity":1,"message":"396","line":42,"column":28,"nodeType":"334","messageId":"335","endLine":42,"endColumn":45},{"ruleId":"362","severity":1,"message":"363","line":60,"column":19,"nodeType":"364","messageId":"365","endLine":60,"endColumn":21},{"ruleId":"332","severity":1,"message":"384","line":79,"column":11,"nodeType":"334","messageId":"335","endLine":79,"endColumn":25},{"ruleId":"366","severity":1,"message":"417","line":109,"column":8,"nodeType":"368","endLine":109,"endColumn":10,"suggestions":"418"},{"ruleId":"385","severity":1,"message":"386","line":155,"column":130,"nodeType":"387","endLine":155,"endColumn":151},{"ruleId":"332","severity":1,"message":"416","line":8,"column":8,"nodeType":"334","messageId":"335","endLine":8,"endColumn":24},{"ruleId":"362","severity":1,"message":"397","line":38,"column":73,"nodeType":"364","messageId":"365","endLine":38,"endColumn":75},{"ruleId":"362","severity":1,"message":"363","line":60,"column":19,"nodeType":"364","messageId":"365","endLine":60,"endColumn":21},{"ruleId":"332","severity":1,"message":"384","line":92,"column":11,"nodeType":"334","messageId":"335","endLine":92,"endColumn":25},{"ruleId":"366","severity":1,"message":"419","line":143,"column":8,"nodeType":"368","endLine":143,"endColumn":10,"suggestions":"420"},{"ruleId":"385","severity":1,"message":"386","line":189,"column":130,"nodeType":"387","endLine":189,"endColumn":151},"no-unused-vars","'CardHeader' is defined but never used.","Identifier","unusedVar","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'handleExpandClick' is assigned a value but never used.","'useState' is defined but never used.","'Paper' is defined but never used.","'Avatar' is defined but never used.","'MateriCard' is defined but never used.","'secondPDF' is defined but never used.","no-native-reassign",["421"],"no-negated-in-lhs",["422"],["421"],["422"],"'Router' is defined but never used.","'useParams' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'height' is assigned a value but never used.","'useHistory' is defined but never used.","'Button' is defined but never used.","'blue' is defined but never used.","'pink' is defined but never used.","'CircularProgress' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'courses.length'. Either include it or remove the dependency array.","ArrayExpression",["423"],"'handleClick' is assigned a value but never used.","'handleClick3' is assigned a value but never used.","'handleClick2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isVerified', 'props', and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["424"],"'useTheme' is defined but never used.","'useMediaQuery' is defined but never used.","React Hook useEffect has missing dependencies: 'id_course', 'id_gaya_belajar', 'id_materi', 'materi', and 'post'. Either include them or remove the dependency array.",["425"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleClick' is defined but never used.","'preventDefault' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'course', 'id_course', and 'material.length'. Either include them or remove the dependency array.",["426"],"'setIsLogin' is assigned a value but never used.","'authHeader' is defined but never used.","'useStyles' is assigned a value but never used.","'TimeStamp' is assigned a value but never used.","'useLocation' is defined but never used.","'category' is assigned a value but never used.","'setListBreadCrumb' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'list' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id_materi' and 'listPost'. Either include them or remove the dependency array.",["427"],"'converter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id_thread', 'post', and 'replies'. Either include them or remove the dependency array.",["428"],"'AddIcon' is defined but never used.","'Title' is assigned a value but never used.","'CardMedia' is defined but never used.","'FormGroup' is defined but never used.","'Card' is defined but never used.","'FormHelperText' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has missing dependencies: 'id_thread', 'post', and 'title'. Either include them or remove the dependency array.",["429"],["421"],["422"],"'TextFieldOutline' is defined but never used.","React Hook useEffect has missing dependencies: 'id_thread' and 'post'. Either include them or remove the dependency array.",["430"],"React Hook useEffect has missing dependencies: 'id_reply', 'id_thread', 'post', and 'reply'. Either include them or remove the dependency array.",["431"],"no-global-assign","no-unsafe-negation",{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},"Update the dependencies array to be: [courses.length]",{"range":"450","text":"451"},"Update the dependencies array to be: [isVerified, props, token]",{"range":"452","text":"453"},"Update the dependencies array to be: [id_course, id_gaya_belajar, id_materi, materi, post]",{"range":"454","text":"455"},"Update the dependencies array to be: [course, id_course, material.length]",{"range":"456","text":"457"},"Update the dependencies array to be: [id_materi, listPost]",{"range":"458","text":"459"},"Update the dependencies array to be: [id_thread, post, replies]",{"range":"460","text":"461"},"Update the dependencies array to be: [id_thread, post, title]",{"range":"462","text":"463"},"Update the dependencies array to be: [id_thread, post]",{"range":"464","text":"465"},"Update the dependencies array to be: [id_reply, id_thread, post, reply]",{"range":"466","text":"467"},[2303,2305],"[courses.length]",[1006,1008],"[isVerified, props, token]",[5805,5807],"[id_course, id_gaya_belajar, id_materi, materi, post]",[4134,4136],"[course, id_course, material.length]",[2764,2766],"[id_materi, listPost]",[3922,3924],"[id_thread, post, replies]",[4384,4386],"[id_thread, post, title]",[4435,4437],"[id_thread, post]",[5471,5473],"[id_reply, id_thread, post, reply]"]